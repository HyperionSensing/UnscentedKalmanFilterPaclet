(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[   1273709,      26366]
NotebookOptionsPosition[   1218098,      25255]
NotebookOutlinePosition[   1256844,      26038]
CellTagsIndexPosition[   1256801,      26035]
WindowTitle->Automatic
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Unit Tests", "Subsection",
 CellChangeTimes->{{3.935750638870227*^9, 3.9357506398893957`*^9}},
 CellID->1366031911,ExpressionUUID->"22428b8b-7a1c-44a8-b3c0-e48f58da1e5f"],

Cell[CellGroupData[{

Cell["\[CirclePlus] and \[CircleMinus] tests", "Subsubsection",
 CellChangeTimes->{{3.935326665743844*^9, 3.9353266759274273`*^9}},
 CellID->1834586544,ExpressionUUID->"daa73370-2059-4af5-8108-b5753f19511f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "0", "}"}], " ", "\[CirclePlus]", " ", 
  RowBox[{"{", "1", "}"}]}]], "VerificationTest",
 CellChangeTimes->{{3.935326335004035*^9, 3.9353263376766148`*^9}, {
  3.935326535703446*^9, 3.935326540036755*^9}},
 CellLabel->"In[49]:=",
 CellID->34858480,ExpressionUUID->"a648dd35-292a-42a8-86f8-02271684118f"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935326250624916*^9, 3.935326283663974*^9},
 CellLabel->"Out[37]=",
 CellID->205831783,ExpressionUUID->"cd3833f4-a6f9-4746-8fac-894d232c2950"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1xt321dsoqc9f\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1xt321dsoqc9f\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", \"1\", \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", \"1\", \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00005100000000046734`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00005100000000046734`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->141146533,ExpressionUUID->"35108f10-cc38-45aa-96b1-9958efed1fc3"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1427833843,ExpressionUUID->"2a2a4f4a-731d-4d2f-b7e0-6daf887ed767"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "1", "}"}], " ", "\[CircleMinus]", " ", 
  RowBox[{"{", "1", "}"}]}]], "VerificationTest",
 CellChangeTimes->{{3.935326298323009*^9, 3.935326304052786*^9}, {
  3.935326545006336*^9, 3.935326549929022*^9}, {3.935326799347316*^9, 
  3.935326799986939*^9}},
 CellLabel->"In[50]:=",
 CellID->860133980,ExpressionUUID->"982c8df4-4389-4873-a041-b98defc7ba75"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935326308376074*^9},
 CellLabel->"Out[39]=",
 CellID->12831347,ExpressionUUID->"9c1da467-a24d-450b-a1f4-177ef2ffc52d"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1d5tvfmz3sm7b\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1d5tvfmz3sm7b\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \\\"0\\\", \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", \"0\", \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \\\"0\\\", \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", \"0\", \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00004899999999974369`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00004899999999974369`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1621127723,ExpressionUUID->"5d855990-a8e1-4b6d-9184-24d8d05200e9"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1168610972,ExpressionUUID->"264e80a9-4ed1-4578-b714-070e250e0e97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[CirclePlus]", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[CircleMinus]", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}]], "VerificationTest",
 CellChangeTimes->{{3.935326346380632*^9, 3.935326374411121*^9}, {
  3.935326552415554*^9, 3.9353265626517687`*^9}},
 CellLabel->"In[51]:=",
 CellID->2135254920,ExpressionUUID->"7518c587-35e5-42b9-865a-674aa44bb316"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935326351114964*^9, 3.935326374914344*^9}},
 CellLabel->"Out[42]=",
 CellID->2073244239,ExpressionUUID->"e67446df-781a-4a17-895a-e89fa854cbbc"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t08ipo66moo0vd\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t08ipo66moo0vd\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"3\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"-\", \"1\"}], \",\", RowBox[{\"-\", \"1\"}]}], \"}\"}]}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"3\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"-\", \"1\"}], \",\", RowBox[{\"-\", \"1\"}]}], \"}\"}]}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00006299999999992423`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00006299999999992423`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->2106654589,ExpressionUUID->"af3bf68d-c841-445b-bbc3-caeb4c81f831"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->980789234,ExpressionUUID->"43112803-e38e-4305-9f25-d9ec62df830e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "\[CirclePlus]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "VerificationTest",
 CellChangeTimes->{{3.935326422084978*^9, 3.935326453607772*^9}, {
  3.935326567391543*^9, 3.935326570687593*^9}},
 CellLabel->"In[52]:=",
 CellID->979064612,ExpressionUUID->"6754cff1-b70c-4718-9346-614de36529b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935326433704385*^9},
 CellLabel->"Out[44]=",
 CellID->310061181,ExpressionUUID->"1bc8d688-b2e6-4222-b86c-2ac5720ce045"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t17aubwmsscgcg\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t17aubwmsscgcg\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"3\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"4\", \
\",\", \"6\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"3\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"4\", \
\",\", \"6\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0005510000000001902`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0005510000000001902`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->40181466,ExpressionUUID->"216aaf3c-c413-48ee-8d66-5fa9a15ea2d2"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1020033904,ExpressionUUID->"6cc20e52-d951-433b-a52b-9bf87db8afce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "\[CircleMinus]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], ")"}]}]], "VerificationTest",\

 CellChangeTimes->{{3.935326514826357*^9, 3.9353265268879128`*^9}, {
  3.935326573058379*^9, 3.935326632101338*^9}},
 CellLabel->"In[53]:=",
 CellID->812224532,ExpressionUUID->"7c657b46-0b76-4954-9a77-65ec7e8639a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935326517065878*^9, 3.935326527303349*^9}, 
   3.935326579776896*^9},
 CellLabel->"Out[52]=",
 CellID->918112888,ExpressionUUID->"70267cb1-76af-4e59-abe6-eda68648e2a1"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0ifpbbgqaqunk\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0ifpbbgqaqunk\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"-\", \"1\"}], \
\",\", RowBox[{\"-\", \"1\"}], \",\", RowBox[{\"-\", \"1\"}], \",\", RowBox[{\
\"-\", \"1\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
             RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"-\", \"1\"}], \
\",\", RowBox[{\"-\", \"1\"}], \",\", RowBox[{\"-\", \"1\"}], \",\", RowBox[{\
\"-\", \"1\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
             RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00006100000000008876`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00006100000000008876`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->347870527,ExpressionUUID->"e6b7e9e1-0c90-4071-89f5-44b3d321002b"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1209460155,ExpressionUUID->"6e753557-694d-4692-94fe-e345464f3092"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sigma Point Tests", "Subsubsection",
 CellChangeTimes->{{3.935326689059081*^9, 3.935326693327283*^9}},
 CellID->159303206,ExpressionUUID->"629a4d0b-a44e-4da9-b0eb-d106f923f65c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`manifoldDimension", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}], "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935326773530018*^9, 3.9353267828567038`*^9}, 
   3.935326861299272*^9, {3.9353269045594788`*^9, 3.935326923358163*^9}, {
   3.9353275371819887`*^9, 3.935327548784337*^9}, {3.935328237734267*^9, 
   3.935328240377883*^9}, {3.93532832765876*^9, 3.935328332332489*^9}, 
   3.9357505161996517`*^9},
 CellLabel->"In[36]:=",
 CellID->398770864,ExpressionUUID->"59086084-c336-432b-8dd2-0a8288e58c5b"],

Cell[BoxData["2"], "ExpectedOutput",
 CellChangeTimes->{
  3.935326783262951*^9, {3.9353268616061163`*^9, 3.935326923622573*^9}, 
   3.935327105245529*^9, 3.9353275035926*^9, {3.9353275346927147`*^9, 
   3.935327549095408*^9}, {3.9353281057869864`*^9, 3.935328125703704*^9}, {
   3.935328204404791*^9, 3.935328241016705*^9}},
 CellLabel->"Out[43]=",
 CellID->176121369,ExpressionUUID->"3a919e80-a1df-42e1-836d-ccfb95fe2e76"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t01qd9ojurj1e5\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t01qd9ojurj1e5\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"2\\\", Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"2\", Function[Short[Slot[1], Rational[2, 3]]]]\)",
              RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"2\\\", Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"2\", Function[Short[Slot[1], Rational[2, 3]]]]\)",
              RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.000048000000000048004`\
\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.000048000000000048004`\", \"\\\
\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1464106230,ExpressionUUID->"6ab6165d-92b6-4b21-b442-90dd38fbdbf5"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1365780284,ExpressionUUID->"4c902268-bc91-4b5b-8b9e-9cd138693121"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`generateSigmaPoints", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935328481539966*^9, 3.93532848966076*^9}, 
   3.935750483538707*^9, {3.935755669603326*^9, 3.9357556716304092`*^9}},
 CellLabel->"In[38]:=",
 CellID->654472228,ExpressionUUID->"004d8135-cff6-490f-81ce-41fc91160527"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935328490793016*^9},
 CellLabel->"Out[33]=",
 CellID->437163134,ExpressionUUID->"4335bc67-fb29-423a-99f0-d5a397ccea56"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0z92gu8xfehqv\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0z92gu8xfehqv\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"0\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"1\", \
\",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", \"1\"}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"-\", \"1\"}], \",\", \
\"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"-\", \
\"1\"}]}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
             RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"0\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"1\", \
\",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", \"1\"}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"-\", \"1\"}], \",\", \
\"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"-\", \
\"1\"}]}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
             RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0005429999999999602`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0005429999999999602`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->718078795,ExpressionUUID->"550f7b04-3ae1-4155-8dc1-da93cd388900"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->2039695072,ExpressionUUID->"547d99e2-b856-43b9-a811-048bcf422e26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`generateSigmaPoints", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935328797627236*^9, 3.9353287982996473`*^9}, 
   3.935750483539453*^9, {3.935755683221116*^9, 3.935755683748933*^9}},
 CellLabel->"In[39]:=",
 CellID->1530043935,ExpressionUUID->"6ac09c6e-9628-47aa-8150-13a64692c334"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935328798547176*^9, 3.935328815245833*^9}},
 CellLabel->"Out[111]=",
 CellID->383233403,ExpressionUUID->"64ca2afa-fac6-4a17-942b-9811db6ab2ff"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0psnoqeyhd470\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0psnoqeyhd470\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"2\", \
\",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", \"1\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"2\", \
\",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \",\", \"1\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00019100000000005224`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00019100000000005224`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1444516884,ExpressionUUID->"5a63c730-9e60-40e2-b64b-f45eb17274a6"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->692640053,ExpressionUUID->"3a37f119-47dc-4bce-a54b-1030bbb20fc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsMean", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935328512539422*^9, 3.935328520024683*^9}, 
   3.935328888529168*^9, 3.935750483541765*^9},
 CellID->243262500,ExpressionUUID->"36c4a0e8-a280-4cd4-a339-87384b5628c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{
  3.935328520453689*^9, 3.935328601265729*^9, 3.935328782012211*^9, {
   3.9353288896826572`*^9, 3.9353288913459578`*^9}},
 CellID->661061638,ExpressionUUID->"bfc3485a-6100-4ffc-87f5-8960c9a5e1b4"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0desnv5cchu6a\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0desnv5cchu6a\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"",
               RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"1\"}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"",
               RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"1\"}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.002152000000000154`\\\"\
, \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.002152000000000154`\", \"\\\"s\
\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->631557473,ExpressionUUID->"c7ad5d26-6ac3-49ed-a94c-8521808b7513"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1722265237,ExpressionUUID->"e4698d7d-6578-47fd-94a0-ddd1368a09cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsCovariance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "VerificationTest",
 CellChangeTimes->{3.935750483542897*^9},
 CellID->1923945471,ExpressionUUID->"307e0f1d-a21d-49ef-a346-93d09217220d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935329183835332*^9},
 CellLabel->"Out[213]=",
 CellID->1108798919,ExpressionUUID->"1a270be7-08a9-430e-9430-a5290f3ddcb7"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t05h75vv5fl13t\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t05h75vv5fl13t\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \
\",\", \"1\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \
\",\", \"1\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00008000000000008001`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00008000000000008001`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->179760346,ExpressionUUID->"2448a14a-1562-41c7-8d94-2d7f6c88e3f7"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1870127540,ExpressionUUID->"6fc6e7d7-09de-45c4-a2ee-44ed4b99eba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`generateSigmaPoints", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "]"}]}], "}"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935328901600396*^9, 3.935328928923914*^9}, 
   3.9357504835438747`*^9, {3.9357556906903143`*^9, 3.935755690972445*^9}},
 CellLabel->"In[40]:=",
 CellID->1185217578,ExpressionUUID->"422f702c-ebab-4fbe-83a7-a84fb7ccd65f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "+", 
      SqrtBox["3"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "-", 
      SqrtBox["3"]}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935328906115543*^9, 3.9353289300301523`*^9}, 
   3.9353291902058277`*^9},
 CellLabel->"Out[215]=",
 CellID->1295774643,ExpressionUUID->"925838cf-a47f-441f-a30d-c5b29613c9d1"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0q88tr44116xn\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0q88tr44116xn\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"+\\\", SqrtBox[\\\"2\\\"]}], \
\\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", SqrtBox[\\\"3\\\"]}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"-\\\
\", SqrtBox[\\\"2\\\"]}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \
\\\"-\\\", SqrtBox[\\\"3\\\"]}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"1\", \"+\", SqrtBox[\"2\"]}], \",\", \"1\"}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{\"1\", \",\", RowBox[{\"1\", \"+\", SqrtBox[\"3\
\"]}]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"1\", \"-\", \
SqrtBox[\"2\"]}], \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{\"1\", \",\", RowBox[{\"1\", \"-\", SqrtBox[\"3\"]}]}], \"}\"}]}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"+\\\", SqrtBox[\\\"2\\\"]}], \
\\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", SqrtBox[\\\"3\\\"]}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"-\\\
\", SqrtBox[\\\"2\\\"]}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \
\\\"-\\\", SqrtBox[\\\"3\\\"]}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"1\", \"+\", SqrtBox[\"2\"]}], \",\", \"1\"}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{\"1\", \",\", RowBox[{\"1\", \"+\", SqrtBox[\"3\
\"]}]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"1\", \"-\", \
SqrtBox[\"2\"]}], \",\", \"1\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{\"1\", \",\", RowBox[{\"1\", \"-\", SqrtBox[\"3\"]}]}], \"}\"}]}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00021300000000046282`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00021300000000046282`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1197927521,ExpressionUUID->"b0a1b52a-e41f-459d-9c31-4e7a0a29f05b"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->908654822,ExpressionUUID->"5ebb0013-bcce-499e-99c0-8461496ce109"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsMean", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", 
       SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"1", "+", 
       SqrtBox["3"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"1", "-", 
       SqrtBox["3"]}]}], "}"}]}], "}"}], "]"}]], "VerificationTest",
 CellChangeTimes->{3.93532921411771*^9, 3.93575048355015*^9},
 CellID->1675891452,ExpressionUUID->"a4de279e-08fb-4390-b5ef-af85862744d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.935329214434787*^9},
 CellLabel->"Out[217]=",
 CellID->1186188496,ExpressionUUID->"1367692c-c98b-41ea-8084-68754e19dddd"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0cw3ephorp5pr\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0cw3ephorp5pr\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"",
               RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"1\"}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"",
               RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"1\"}], \
\"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00011900000000020228`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00011900000000020228`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->2007200746,ExpressionUUID->"8ed64415-a273-476d-8066-e2c9d6889b0f"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->202327299,ExpressionUUID->"2efa7113-1e67-41d0-80fb-ca891030199d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsCovariance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", 
        SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"1", "+", 
        SqrtBox["3"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        SqrtBox["2"]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"1", "-", 
        SqrtBox["3"]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "VerificationTest",
 CellChangeTimes->{3.935329231855486*^9, 3.935750483553225*^9},
 CellID->378983398,ExpressionUUID->"45510e1c-2438-4cc2-956d-1737412406de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.9353292321597633`*^9},
 CellLabel->"Out[219]=",
 CellID->1186180870,ExpressionUUID->"1fa6059a-5d6d-419e-8508-8d1250bba35f"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1vo4ctoi90vs9\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1vo4ctoi90vs9\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"2\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \
\",\", \"3\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"2\", \",\", \"0\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"0\", \
\",\", \"3\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00010900000000058085`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00010900000000058085`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1048301092,ExpressionUUID->"9f96f32f-c18b-48a8-8f6a-1bc3a6e8f5a7"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->840613256,ExpressionUUID->"26864ac0-e884-4c24-8994-50a9f1b8742d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`generateSigmaPoints", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], "}"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935329250877899*^9, 3.935329301975271*^9}, {
   3.9353294417994003`*^9, 3.93532944331287*^9}, {3.9353296908814898`*^9, 
   3.9353296917380743`*^9}, {3.935330090569002*^9, 3.9353300924510517`*^9}, {
   3.935330258790205*^9, 3.935330260275608*^9}, 3.935750483555748*^9, {
   3.9357556955815907`*^9, 3.935755695950025*^9}},
 CellLabel->"In[41]:=",
 CellID->388830765,ExpressionUUID->"af5895ab-82bf-46bd-bf65-e1137c785ad5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "+", 
      SqrtBox["3"]}], ",", 
     RowBox[{"20", "+", 
      FractionBox["2", 
       SqrtBox["3"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"20", "+", 
      SqrtBox[
       FractionBox["11", "3"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "-", 
      SqrtBox["3"]}], ",", 
     RowBox[{"20", "-", 
      FractionBox["2", 
       SqrtBox["3"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"20", "-", 
      SqrtBox[
       FractionBox["11", "3"]]}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{
  3.935329264932645*^9, 3.935329303097238*^9, 3.935329369707736*^9, 
   3.935329406357993*^9, 3.935329443657415*^9, 3.935329482889799*^9, 
   3.9353296491707077`*^9, 3.935329692030985*^9, {3.935329968571929*^9, 
   3.935329971055251*^9}, {3.9353302650188828`*^9, 3.935330265261087*^9}},
 CellID->1537108349,ExpressionUUID->"e4f26c1e-c9d3-463e-a9ff-e861dffd8c03"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1glepyvkgqqq2\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1glepyvkgqqq2\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"10\\\", \\\",\\\", \\\"20\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"10\\\", \\\"+\\\", SqrtBox[\\\"3\\\"]}], \\\",\
\\\", RowBox[{\\\"20\\\", \\\"+\\\", FractionBox[\\\"2\\\", \
SqrtBox[\\\"3\\\"]]}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"10\\\", \\\"-\\\", SqrtBox[\\\"3\
\\\"]}], \\\",\\\", RowBox[{\\\"20\\\", \\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \
RowBox[{\\\"20\\\", \\\"-\\\", SqrtBox[FractionBox[\\\"11\\\", \
\\\"3\\\"]]}]}], \\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"10\", \",\", \"20\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"10\", \"+\", SqrtBox[\"3\"]}], \",\", RowBox[{\"20\", \
\"+\", FractionBox[\"2\", SqrtBox[\"3\"]]}]}], \"}\"}], \",\", RowBox[{\"\
\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"10\", \"-\", SqrtBox[\"3\"]}], \",\", RowBox[{\"20\", \
\"-\", RowBox[{\"\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}]}]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{\"10\", \",\", RowBox[{\"20\", \"-\", \
SqrtBox[FractionBox[\"11\", \"3\"]]}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"10\\\", \\\",\\\", \\\"20\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"10\\\", \\\"+\\\", SqrtBox[\\\"3\\\"]}], \\\",\
\\\", RowBox[{\\\"20\\\", \\\"+\\\", FractionBox[\\\"2\\\", \
SqrtBox[\\\"3\\\"]]}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"10\\\", \\\"-\\\", SqrtBox[\\\"3\
\\\"]}], \\\",\\\", RowBox[{\\\"20\\\", \\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \
RowBox[{\\\"20\\\", \\\"-\\\", SqrtBox[FractionBox[\\\"11\\\", \
\\\"3\\\"]]}]}], \\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"10\", \",\", \"20\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"10\", \"+\", SqrtBox[\"3\"]}], \",\", RowBox[{\"20\", \
\"+\", FractionBox[\"2\", SqrtBox[\"3\"]]}]}], \"}\"}], \",\", RowBox[{\"\
\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"10\", \"-\", SqrtBox[\"3\"]}], \",\", RowBox[{\"20\", \
\"-\", RowBox[{\"\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}]}]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{\"10\", \",\", RowBox[{\"20\", \"-\", \
SqrtBox[FractionBox[\"11\", \"3\"]]}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0016840000000000188`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0016840000000000188`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->597400667,ExpressionUUID->"0072d0a4-004d-4e67-97c1-3c8d45443b30"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1026960544,ExpressionUUID->"07e1ba88-a5cf-4459-9608-f3f8393892d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsMean", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"10", "+", 
       SqrtBox["3"]}], ",", 
      RowBox[{"20", "+", 
       FractionBox["2", 
        SqrtBox["3"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", 
      RowBox[{"20", "+", 
       SqrtBox[
        FractionBox["11", "3"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"10", "-", 
       SqrtBox["3"]}], ",", 
      RowBox[{"20", "-", 
       FractionBox["2", 
        SqrtBox["3"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", 
      RowBox[{"20", "-", 
       SqrtBox[
        FractionBox["11", "3"]]}]}], "}"}]}], "}"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{3.9353297189071198`*^9, 3.935329978002335*^9, 
  3.9353302702276497`*^9, 3.9357504835583963`*^9},
 CellID->781370597,ExpressionUUID->"46eb4cde-036a-49ec-881b-205664464a5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935329724108835*^9, 3.935329745753396*^9}, {
  3.93532996211771*^9, 3.9353299784377604`*^9}, {3.935330253248477*^9, 
  3.935330270614615*^9}},
 CellLabel->"Out[506]=",
 CellID->308159741,ExpressionUUID->"4b3cf8b4-9a63-46e0-9f66-c1fd7c12c73f"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t09qqiriv6rko8\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t09qqiriv6rko8\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \
\\\",\\\", \\\"20\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"10\", \",\", \"20\"}], \"}\
\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \
\\\",\\\", \\\"20\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"10\", \",\", \"20\"}], \"}\
\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00016900000000008575`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00016900000000008575`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1634235588,ExpressionUUID->"e141e0f5-4fc9-47f7-9fd0-29849e970e64"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->281682386,ExpressionUUID->"f970767a-f3f1-4bbb-a00f-a1c3a170f0a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`sigmaPointsCovariance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", "+", 
        SqrtBox["3"]}], ",", 
       RowBox[{"20", "+", 
        FractionBox["2", 
         SqrtBox["3"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"20", "+", 
        SqrtBox[
         FractionBox["11", "3"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", "-", 
        SqrtBox["3"]}], ",", 
       RowBox[{"20", "-", 
        FractionBox["2", 
         SqrtBox["3"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"20", "-", 
        SqrtBox[
         FractionBox["11", "3"]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}]}], "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935329722719778*^9, 3.935329738773435*^9}, 
   3.935329983276347*^9, {3.935330098664178*^9, 3.935330159426058*^9}, {
   3.9353302733508263`*^9, 3.935330275974247*^9}, 3.935750483560842*^9},
 CellID->633122374,ExpressionUUID->"807eab8e-66e6-4b19-bbd2-52c05b3753f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935329727913657*^9, 3.935329739251317*^9}, 
   3.935329983709361*^9, {3.9353300808748426`*^9, 3.935330165985386*^9}, {
   3.935330273759904*^9, 3.935330276250597*^9}},
 CellLabel->"Out[508]=",
 CellID->1344251518,ExpressionUUID->"99c7003e-680a-48ae-b39d-03170534338c"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0w1nidjc3cfal\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0w1nidjc3cfal\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"3\", \",\", \"2\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"2\", \
\",\", \"5\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{\"3\", \",\", \"2\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{\"2\", \
\",\", \"5\"}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\
\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00013700000000005375`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00013700000000005375`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1181903514,ExpressionUUID->"d320fd0a-fc4f-4d27-a926-5108da58acee"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->28625048,ExpressionUUID->"66c077b9-08bd-424f-8d42-5b9f188557ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Sigma]s", " ", "=", " ", 
      RowBox[{"UnscentedKalmanFilter`Private`generateSigmaPoints", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"10.", ",", "20."}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3.", ",", "2."}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.", ",", "5."}], "}"}]}], "}"}]}], "}"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "h", ",", "h\[Sigma]s", ",", " ", "h\[Mu]", ",", 
     " ", "\[CapitalSigma]"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", " ", 
     RowBox[{"{", 
      RowBox[{"4", " ", "x"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"h\[Sigma]s", " ", "=", " ", 
     RowBox[{"h", "/@", "\[Sigma]s"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"h\[Mu]", " ", "=", " ", 
     RowBox[{
     "UnscentedKalmanFilter`Private`sigmaPointsMean", "[", "h\[Sigma]s", 
      "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Should", " ", "be", " ", "40"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalSigma]", " ", "=", " ", 
     RowBox[{
     "UnscentedKalmanFilter`Private`sigmaPointsCrossCovariance", "[", 
      RowBox[{"\[Sigma]s", ",", " ", "h\[Sigma]s", ",", " ", 
       RowBox[{"{", 
        RowBox[{"10.", ",", " ", "20."}], "}"}], ",", " ", "h\[Mu]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h\[Mu]", ",", " ", "\[CapitalSigma]"}], "}"}], ",", 
      "0.00000001"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.9353309641128607`*^9, 3.935330975574093*^9}, {
  3.935750483564167*^9, 3.935750483565407*^9}, {3.935755704241034*^9, 
  3.9357557047320633`*^9}},
 CellLabel->"In[42]:=",
 CellID->487771613,ExpressionUUID->"6ff4954b-0cb8-4f08-974b-d3469fb44ae2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "40.`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "12.", "}"}], ",", 
     RowBox[{"{", "8.", "}"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.9353309414136543`*^9, 3.9353309586407547`*^9}},
 CellID->1714671327,ExpressionUUID->"8789a02e-a176-4bac-bb66-0cd6a6f9512a"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0ry1osf3h6zh2\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0ry1osf3h6zh2\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"40.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"12.`\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"8.`\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> 
        Grid[{{Style[
            Dynamic[RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \"40.`\", \"}\
\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", \"12.`\", \"}\"}], \",\", \
RowBox[{\"{\", \"8.`\", \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"40.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"12.`\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"8.`\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \"40.`\", \"}\
\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", \"12.`\", \"}\"}], \",\", \
RowBox[{\"{\", \"8.`\", \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.00025999999999992696`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.00025999999999992696`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->2057672563,ExpressionUUID->"7a380e2c-3969-4d41-b521-4dd8732aa5fc"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->226115053,ExpressionUUID->"08927e6c-b6a1-445c-bb8c-5c89c888208f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`Private`applyDelta", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], ",", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}], "]"}]], "VerificationTest",
 CellChangeTimes->{{3.9353309930532837`*^9, 3.935330996259194*^9}, {
   3.935331059191131*^9, 3.9353311057180243`*^9}, 3.935750483568438*^9, {
   3.9357557108849707`*^9, 3.935755711172846*^9}},
 CellLabel->"In[84]:=",
 CellID->2032918852,ExpressionUUID->"92336cd9-999e-4bf5-a25e-fbecff2e7f0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13", ",", "25"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935331095740265*^9, 3.935331124060245*^9}, 
   3.935331188218555*^9, 3.935331313791195*^9},
 CellLabel->"Out[679]=",
 CellID->1879194559,ExpressionUUID->"bbca57f5-738a-461b-b642-67a9bc620b43"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1dqtxfimekdop\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1dqtxfimekdop\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"13\\\", \
\\\",\\\", \\\"25\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"13\", \",\", \"25\"}], \"}\
\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"13\\\", \
\\\",\\\", \\\"25\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"13\", \",\", \"25\"}], \"}\
\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0002790000000008064`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0002790000000008064`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1356536334,ExpressionUUID->"38c80e83-993a-442b-b351-25f7bfbab17d"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1619768986,ExpressionUUID->"7b9b902f-7178-4ed3-81ea-6cd8adf37dee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Predict & Update", "Subsubsection",
 CellChangeTimes->{{3.9353313873587303`*^9, 3.93533138939235*^9}, {
  3.9353315472541313`*^9, 3.935331550232214*^9}},
 CellID->755018694,ExpressionUUID->"0cfbc521-3533-4f4a-9708-c5e62b3b7d6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`UKFPredict", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30"}], "}"}], ",", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"(*", "State", "*)"}], "\[IndentingNewLine]", "1", ",", " ", 
   RowBox[{"(*", "\[CapitalDelta]t", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"coords", ",", " ", "\[CapitalDelta]t"}], "}"}], "\[Function]",
       " ", 
      RowBox[{
       RowBox[{"coords", " ", "+", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "\[CapitalDelta]t"}]}], "&"}]}], 
     ",", " ", 
     RowBox[{"(*", " ", "f", " ", "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"{", "coords", "}"}], "\[Function]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "&"}]}], ",", " ", 
     RowBox[{"(*", "h", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Q", " ", "process", " ", "noise"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", "4", "}"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Measurement", " ", "Noise"}], "*)"}], "\[IndentingNewLine]", 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "VerificationTest",
 CellChangeTimes->{{3.935331396492672*^9, 3.935331515854649*^9}, 
   3.935533132528502*^9, {3.9355334981477757`*^9, 3.9355335420602503`*^9}, 
   3.935539920489325*^9, 3.935750483571498*^9, {3.9357557943037453`*^9, 
   3.935755826227241*^9}, {3.935755931819653*^9, 3.935755932196082*^9}, 
   3.935756899730851*^9, {3.9357569310258913`*^9, 3.935756945240687*^9}, {
   3.9357571168030577`*^9, 3.9357571204629793`*^9}, {3.9357571718820467`*^9, 
   3.9357571772753973`*^9}},
 CellLabel->"In[52]:=",
 CellID->818226058,ExpressionUUID->"8c663867-f899-4a22-b433-26ee43e88013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", 
   RowBox[{"{", 
    RowBox[{"21", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.93533151199347*^9, 3.935331516185409*^9}, {
  3.9357559378652363`*^9, 3.935755938075124*^9}},
 CellID->539789260,ExpressionUUID->"d5c5101e-76eb-4851-8e4f-5b608b589706"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0mtjj7me81eyy\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0mtjj7me81eyy\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \\\"32\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"4\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", RowBox[{\"{\", \
RowBox[{\"21\", \",\", \"32\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"3\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"4\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \\\"32\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"4\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"1\", \",\", RowBox[{\"{\", \
RowBox[{\"21\", \",\", \"32\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"3\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"4\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0003860000000002195`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0003860000000002195`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->638081832,ExpressionUUID->"9ce5d5bc-70f8-4026-bf96-a2a20961d46a"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1855500953,ExpressionUUID->"5e1e8d11-495b-4b88-8da9-5a17fc9cd071"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Simple", " ", 
    RowBox[{"case", ":", " ", 
     RowBox[{
     "measurement", " ", "exactly", " ", "equal", " ", "to", " ", 
      "estimate"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"UnscentedKalmanFilter`UKFUpdate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"{", 
       RowBox[{"20", ",", "30"}], "}"}], ",", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"(*", " ", "State", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", "20", "}"}]}], "}"}], ",", " ", 
    RowBox[{"(*", " ", "Measurement", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "  ", "\[IndentingNewLine]", "   ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", ",", " ", "\[CapitalDelta]t"}], "}"}], 
       "\[Function]", " ", 
       RowBox[{
        RowBox[{"coords", " ", "+", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "\[CapitalDelta]t"}]}], "&"}]}], 
      ",", " ", 
      RowBox[{"(*", " ", "f", " ", "*)"}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{"{", "coords", "}"}], "\[Function]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"coords", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], "&"}]}], ",", " ", 
      RowBox[{"(*", "h", "*)"}], "\[IndentingNewLine]", "   ", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Q", " ", "process", " ", "noise"}], " ", "*)"}], 
      "\[IndentingNewLine]", "   ", 
      RowBox[{"{", "2", "}"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Measurement", " ", "Noise"}], "*)"}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]", "]"}]}]], "VerificationTest",
 CellChangeTimes->{{3.935331558208441*^9, 3.935331573823194*^9}, {
   3.935331659160454*^9, 3.935331661564039*^9}, {3.935331694072115*^9, 
   3.9353317427414722`*^9}, 3.935539928208902*^9, 3.935750483574418*^9, {
   3.935755944082748*^9, 3.935755980696868*^9}, {3.935756949547567*^9, 
   3.935756955813946*^9}, {3.935757099094524*^9, 3.935757162291342*^9}},
 CellLabel->"In[50]:=",
 CellID->202322756,ExpressionUUID->"28b81086-a42c-417e-b328-c1c066eb142f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", " ", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.935331576942156*^9, 3.935331694945161*^9}, 
   3.935331743047558*^9, {3.935756520742275*^9, 3.9357565212735443`*^9}},
 CellID->289251955,ExpressionUUID->"d910029b-f317-4dae-b55b-dc959476f3b9"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0xrzka678pbyw\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0xrzka678pbyw\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \\\"30\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"{\", \
RowBox[{\"20\", \",\", \"30\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"3\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \\\"30\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"{\", \
RowBox[{\"20\", \",\", \"30\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"3\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0006200000000000649`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0006200000000000649`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->174730992,ExpressionUUID->"81470451-5f16-4326-8d46-8e6af26061d7"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1093637095,ExpressionUUID->"ba2cda97-1836-4d03-8386-40fcbb17df42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnscentedKalmanFilter`UKFUpdate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30"}], "}"}], ",", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"(*", " ", "State", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", "22", "}"}]}], "}"}], ",", " ", 
   RowBox[{"(*", " ", "Measurement", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", "  ", "\[IndentingNewLine]", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"coords", ",", " ", "\[CapitalDelta]t"}], "}"}], "\[Function]",
       " ", 
      RowBox[{
       RowBox[{"coords", " ", "+", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "\[CapitalDelta]t"}]}], "&"}]}], 
     ",", " ", 
     RowBox[{"(*", " ", "f", " ", "*)"}], "\[IndentingNewLine]", "   ", 
     RowBox[{
      RowBox[{"{", "coords", "}"}], "\[Function]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "&"}]}], ",", " ", 
     RowBox[{"(*", "h", "*)"}], "\[IndentingNewLine]", "   ", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Q", " ", "process", " ", "noise"}], " ", "*)"}], 
     "\[IndentingNewLine]", "   ", 
     RowBox[{"{", "2", "}"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Measurement", " ", "Noise"}], "*)"}], "\[IndentingNewLine]", 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "VerificationTest",
 CellChangeTimes->{
  3.935331774153054*^9, 3.935539930603381*^9, 3.9357504835770273`*^9, {
   3.935756532041754*^9, 3.935756537302876*^9}, {3.935757107699197*^9, 
   3.9357571120116796`*^9}, 3.935757180516775*^9},
 CellLabel->"In[53]:=",
 CellID->171075528,ExpressionUUID->"45faa2ab-f33a-4c1d-8332-e0952b8ed1d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", " ", 
   RowBox[{"{", 
    RowBox[{"21", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{
  3.9353317746888723`*^9, {3.9357565431680613`*^9, 3.935756543589509*^9}},
 CellID->947873948,ExpressionUUID->"e674f0cb-76a7-405d-89d3-10efad44f1e1"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t1uvajoulb3x9e\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t1uvajoulb3x9e\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \\\"30\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"{\", \
RowBox[{\"21\", \",\", \"30\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"3\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \\\"30\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"{\", \
RowBox[{\"21\", \",\", \"30\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \"0\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{\"0\", \",\", \"3\"}], \"}\"}]}], \"}\"}]}], \"}\"}], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0006639999999999979`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0006639999999999979`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->870753043,ExpressionUUID->"4d4a0332-5c14-4433-8979-61ecf9f59a5d"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1792823043,ExpressionUUID->"55139363-be8e-4f34-8e56-59a4c3c49c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Both", " ", "elements", " ", "of", " ", "the", " ", "state", " ", 
    "contribute", " ", "equally", " ", "to", " ", "the", " ", "uncertainty", 
    " ", "in", " ", "the", " ", "measurement"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"UnscentedKalmanFilter`UKFUpdate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "30"}], "}"}], ",", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"45", "\[Degree]"}], "]"}], ".", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.00001"}], "}"}], "]"}], ".", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"45", "\[Degree]"}], "]"}], "\[Transpose]"}]}]}], "}"}], ",",
     " ", 
    RowBox[{"(*", " ", "State", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"{", "22", "}"}]}], "}"}], ",", " ", 
    RowBox[{"(*", " ", "Measurement", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "  ", "\[IndentingNewLine]", "   ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", ",", " ", "\[CapitalDelta]t"}], "}"}], 
       "\[Function]", " ", 
       RowBox[{
        RowBox[{"coords", " ", "+", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "\[CapitalDelta]t"}]}], "&"}]}], 
      ",", " ", 
      RowBox[{"(*", " ", "f", " ", "*)"}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{"{", "coords", "}"}], "\[Function]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"coords", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], "&"}]}], ",", " ", 
      RowBox[{"(*", "h", "*)"}], "\[IndentingNewLine]", "   ", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Q", " ", "process", " ", "noise"}], " ", "*)"}], 
      "\[IndentingNewLine]", "   ", 
      RowBox[{"{", "1", "}"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Measurement", " ", "Noise"}], "*)"}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]", "]"}]}]], "VerificationTest",
 CellChangeTimes->{{3.935331970807364*^9, 3.935331974216186*^9}, {
   3.935332211972129*^9, 3.935332217607638*^9}, {3.93533225458004*^9, 
   3.93533229814159*^9}, {3.9353323466164427`*^9, 3.935332347961872*^9}, {
   3.9353324396200457`*^9, 3.9353324554090548`*^9}, 3.935539932745068*^9, 
   3.935750483579872*^9, {3.935756549450573*^9, 3.93575655620461*^9}, 
   3.935757184217461*^9},
 CellLabel->"In[54]:=",
 CellID->1465748235,ExpressionUUID->"4381f3b4-5255-464f-8167-5f13ca3a8e34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"21.000002499993748`", ",", "30.99999250001875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5000012499968758`", ",", "0.4999962500093752`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4999962500093752`", ",", "0.5000112499718748`"}], "}"}]}], 
    "}"}]}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.93533194258215*^9, 3.935331974385605*^9}, {
  3.935332249265369*^9, 3.935332299178934*^9}, {3.935332443102841*^9, 
  3.935332456683321*^9}, {3.935756563524578*^9, 3.935756564702785*^9}},
 CellID->2102528498,ExpressionUUID->"448f1a43-d352-4624-b6dd-d31160e47c27"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t0t2q2bbvzpk80\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t0t2q2bbvzpk80\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0.5000012499968758`\\\", \\\",\\\", \
\\\"0.4999962500093752`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"\
\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"0.5000012499968758`\", \",\", \
\"0.4999962500093752`\"}], \"}\"}], \",\", RowBox[{\"\[LeftSkeleton]\", \
\"1\", \"\[RightSkeleton]\"}]}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0.5000012499968758`\\\", \\\",\\\", \
\\\"0.4999962500093752`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", RowBox[{\"\
\[LeftSkeleton]\", \"1\", \"\[RightSkeleton]\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{\"0.5000012499968758`\", \",\", \
\"0.4999962500093752`\"}], \"}\"}], \",\", RowBox[{\"\[LeftSkeleton]\", \
\"1\", \"\[RightSkeleton]\"}]}], \"}\"}]}], \"}\"}], Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.0007780000000003895`\\\
\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.0007780000000003895`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->805157028,ExpressionUUID->"6d2bbc99-4bce-42b8-81a5-6b89a475328a"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->979709849,ExpressionUUID->"9f2b4828-a722-43b5-8541-e92196f1bc21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filtering & Smoothing", "Subsubsection",
 CellChangeTimes->{{3.9355318085726357`*^9, 3.935531810127133*^9}, {
  3.935750598333905*^9, 3.935750601029179*^9}},
 CellID->236754742,ExpressionUUID->"b2e0f5b5-6b43-426a-ae38-51079a814a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", "=", " ", "0.003"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Sigma]", "=", "0.2"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[ScriptCapitalD]error", "=", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "\[Sigma]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"testData", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[Lambda]", " ", "j"}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", "\[ScriptCapitalD]error", "]"}]}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "500"}], "}"}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testData", " ", "=", " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = True}, 
       TemplateBox[{"List", "ListIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["500", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["12096", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      CompressedData["
1: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
      "],
      SelectWithContents->True,
      Selectable->False]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testData", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "testData", "]"}], "]"}], "-", "1"}], ",", 
        " ", "testData"}], "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "We", " ", "had", " ", "to", " ", "add", " ", "times", " ", "later"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "%", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935535231791123*^9, 3.935535284327159*^9}, {
  3.935535381107909*^9, 3.9355354483706913`*^9}, {3.93575661177289*^9, 
  3.935756656479725*^9}},
 CellLabel->"In[35]:=",
 CellID->848143718,ExpressionUUID->"9f6a6daf-3f5f-4530-a10a-57b2a3ab0f7c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0055000000000000005`], AbsoluteThickness[2], 
        StyleBox[PointBox[CompressedData["
1:eJw9V3lczPv3HlqkUolEWYYSWYsb6kpPRSrSnlZN+14zUzM1My0TkrqWEFmi
bCGhuJbENdmFpISbresSkoTs5Nfvdc/72z+9ntc553nOc855f3o1OjTJI6Iv
h8Pp7sPh/P9v9rP0cUvadYcPNv+hLpv8Aw5C3r7XhDkwyPFvvNT2jrAaNrdM
dXk6q4uwDn43LuxZeYPhwXA8WzTs9543hIfCaFXOmLhPrH44IgPn1vo1dRDm
olu9sLF11XPCYxC9/N7xsb+xfGNUtb3pM2ITyzfBfvOGrZUn3hMej9z2ovRN
Gkx/As6MGdM2ueMb4Um4Uq3PKV/N+pkC8T2xuOopyzdDcObRUaGVbwmbIyvb
OsyshM1jGjhXlvNivRieDq2ehGj7AFb/G5abTJg/qbibsAUsnV1GVjxk8Rl4
Hi+7f38Xq5+J/i/OD/hYxPAs6DamPvSLZ34skVAtTls5mPFZ4bXzDav7Vp8I
/46HlTqp52zYfGZjvjDJKeZ//VgjaKq23pRwFp+Dl/VXXviseUnYBoPPz93S
Ff2CMNBU9nXLsKOkJwfMxg41OabK6m3x/ObEo7nviF9uC93wBNvEdZ0Ut0PP
a88FE7l0L3I71A/6nDdsL/NnjzIHs63ecwnL7XGk7WbwmJNs3nNxLGD/jy+L
SE8+F1pRsRsnVjA/89A6oibgfiP5l89DQMmg+j7qbF4O2PaXYED35Y8Ud0Cs
TbmFoxPjn4/Hl7aaH4ugfPl8jLkS0sKRfqG4I6rHR/Z8amL1jjiwpGb7yaXM
vxPehO1taOlk/TnhuqZRcbqAzdMZz+SP9CWH2PycEWP1QKv6ENvXAgjeWB/g
Sln/CxDlZFwTfIrd40IsHPBrkUkVq1+Ia47Z7z36Uj8cF3ScXdbm9Y7NzwVN
6+fO+5HP/C/CgRh5H4Od5Fe+COcPa/10Xcfm54qwEMfhtibMnyuCCwcWZ2Sx
+3LDHZWazKHsfcINs4bULpwVyPTccG1Bu6c0jfQUbsiJmIX8q2w+7iiOHfan
cxjxwx0xvraj7tayeblj1q0hhpzsr1Tvjg799tiNj5m+B7rabo9N9SJ+eKBm
ZOQh7vrPVO8BD7cL2WdsiF/hAU9Jc+uBO8y/JzoaJnW0H2L9e8Ik0izhUyXz
64kAw8CUnjyav8ITFybv+qZrS/wcLyDXxfPCZbpfeGHEPYfIQlWm3xvf1p9X
o01Y4YWd+yst8nqYvjeujpEEHflA3xt4Qz1hs/fsZnZv3uAVNijGFTP/3pCc
VCz5qszqfVD8wtJ4myHr3wdF3nXV2l6sfx8M3BH1bLwq7UPhgzh79d9cMln/
i7EnNEs9y5LNfzHeT02yf7ac6S9G7IJigxY/Nr/FKLQLywfY/fti1/NFY/tm
M31fJA6dmm9/iu3PF5974gVXddj+fTH34MBxZxzZ99UPVe/HBLvnM30/nJSb
XFPTYv37wfibbpOlA+kp/LAmVHe9L5/mwfFHV510ykNHVu+PTdvPCVwjKF/u
D+WRjT6V7qx/fxTnGYhDv7DvSwBemkoeXPzJ7icAd88/byi7zt5TAEK0d/uM
zGf6Afh1hb/inDN7n4E4m7pppJqc+BCIGrv7s4tDqD95IG69H/9w4yLyqwhE
wePKu0u3svcZBL1HcgMttR9UHwRZ6GE7Qy32vQzChBqV0tvp1I8iCLMHzuZo
K35S/RJcCa9tSkph97MEs/s47fnk953ql+CH4S9tYUIf/Fe/BJtf84X8ecx/
MKrVLyhy51E+gmFvmznvkgV7v8H4N6Wksr2T9BTByI7wv/YpiO2Ph+BRS059
PE3z4fJwtolz5UQD9Qse3hjPMlKxJ34eD7++HZqe0cn64+FO+4WpC8zIf2kv
377II/v12bx40LSy/Klxi/haeeg+ZTh8TT273xCM2xM6KFaF6rkhWLpK9tb2
FptHCIZU/v1s437aLy8E+6Z2P7SyZt/TEDTUq8tWFVK8NASRylMC2nuITxGC
1pKYE/uPkL/WEFhWvjyuYcfuLxRdETusqm/QvLih4A3z7bD8xu4xFOl5R1yX
ulE+LxQD3a6PzPTsIf1QdL/zKd7xnfhLQyEqvep89/0v0g+FtHyYyc+PVN8a
ivanCe0a52h+nDDUNN+u8rGj/XDDIM7puWwxmfIRhgQbl7tzV5FfXhhe6sS9
vLGa/Ml7400lG01bKL80DPLfovZMUmbfqzA8un70V7840msNw8ji0TlT97P7
CYfqv4mNUaB5c8MxafirwCgrph+OuoXRt0dHkR4vHEKbFZNGlbPvYzhWfk/Y
saeR/JaGQ5p0+qWDEru3cHR483555lB9azgmBO667O7A5h+BZUFz5UF1TD8C
h2JLPnA/0TwRgX8HrRkflE1xXgRCBnc2T9dj35cITKk5nnVMhfmPQEaEyGOC
KvveRmBvyZsYxyi2/wioX1uqKxzM7j8SNv1rAmoE9L64kch7pP2qdgJ7T5GY
XbFsi/0d2jcvEqZbNbIeP2T3H4mD05blXbtDfksj8UXsefZ0OLu/SFQenJYY
JeL8x9/ai5VmDB2wh30/ojDfytZj7kfi50ahcujeCvEkNv8ofCyeXP5oLdOP
Qnps3yMTRNS/PArHXx9UvcRwaRSyxmrVCByZfhTMl+22OGpI/lqjcDXir5+N
2ynOiUb5m1k/m0Ypkf9oyDy67lUvpH0iGsMePDeRuNC+edEwf7Vz7J8d5Fce
DenspRU2ByheGo0F+xaJYqeSX0U0Bo96EVW+m/hao7Hm0Otpo3QJc2IwcbC6
605/yufG4PnOr2d+hTP/MZgVXW958wm7vxhMbQ/I/7CCvb8Y9OlObst6yt5f
DDao6q3sTmLfnxiEy/c1FB1m9x+D/blvE03H0jw4sTBoWPZqRwrTj0VpZ6Sr
RTm7v1h4KIe4LNrM5h8LO0+VD2uqmP/eePeJv9N92P5jsacu2Hb/TnZ/sZCp
OoiDrjL/sbhsbrF1lwfpceKg0zhjwdFs9v7jMPJDXG1zBfv+xaG6ZIuZqRrF
eXEwGLfW7OsI4pPH4ZC3T8tLLvkpjcOTLLfgIby+NP84TLmcuWblK+q/NQ6N
glPr9t1l/uOheVBXEqLL/MfDJTG3Y8hUdv/x6Peq6frAt0w/HjWXn7RmzKN8
eTx+n341+ZAX4dJ4rLLS1LSIZH+v4nEtS3xHdpvdfzx6/CWHL2xg95eAifnr
Js1RZ+8vAbpXs2zuaTD/Cdgk3/NMNoH88BJwMeuLoX0ae38J8DgqSbtVwfwn
II0btHjcQ3Z/CTCaGxFXZM70E/D5oVrediPmPxE2J00NRb7MfyI2mb/INNGg
94BEHO630ulAHdt/Ipo7/744u5jq5YkwrnrLzbVn+ong/xiv3KNJ/SkSscXi
wfIsU6afiMLDe06qW5EfThJW5itu8oKZfhKU+VfOOL0mPiRh15l7pT+lFOcl
wWf5C4eWbOpPnoS07DGla68y/SRUZd5oypax/Sfh05z0oX4bCLcmIVdtg3Xi
V+afj62P7ASn1ZT/wzp8WGb3SHcrWD98KI/71FQzkerN+DCq3KeW00xx8BFo
oLYv+zDdhxsfq+r6Wrl1sHnx4a80c3PwLcrn8zHLOuOZkjWbHx9DEvZtUNpO
/AV8tM133mzWzvzwkdLv3NbN76i+ko+LrtNSKtzZffGRHJd+Va+Q4g18/Llu
pud5Y/LTykeJt3q1o4zyu/ior/ef5hrC5i/AxGsdKs+MKa4jwN7d4mP+fVTJ
fy92e9vm7Uh8ZgKobcdKFw/yBwHmceZXj68lfTcBlpvdWXKb3SNPAKc/2w1X
7qF98QWwD9zYzGtm+xPglklHYKEn1RcIsHR2bfBOFeqvVIAGTaOb7lLKrxSg
7sBf182dqR9Fb/y49j+/PlF+gwC5erlLJ5wk3CrAbx72l2+vo/wuAU6M9neQ
5jP/Qujn/75i2hbS1xHC5+1CI62zbP9CfBuT1x69g/TNhNC6OGR07SeV/zCE
uD/Ea73VCuJ3E6Ik7opNQRDl84RwPpxoXf2M8vlCfLXMc2ktYP5740pbhz0d
S7hAiDkXvjdUadD8S4UwFY/mHd5IuFKIYq6+SnQZ8SmEWH8oeXaUE/MvRPwf
WqOyhGz/Qgi6b9aenkT8XUKE86xC/71PcU4yZqx48deovyiuk4y1RlqqahyK
c5PxbKye4PlA5j8ZOV3Fxn2NqR8k48TLl/7L9Kkft2Qs6KfdvPQHYV4yqlyX
jd+rz/afjDbDus+NXOKXJ8PxovLqNweIryAZg7ZNHVyu1I/8J6N5/JvVlinE
V5kM64Izq/ZpsP0no2O6e53QkuobktH/i2Xu8ZFU35oMaVj8n6YBFO/q7U/T
VUM7hflPwS3tF4kP29n7T0FVc9HCBVeZ/xQcyRvuU/yK+U+BxdMry2072Pcx
BXJ9Y7157oTdUjC2A0XmKsx/Cg6V+rs7DmX+UxBRdLDBzIX6k6dAGPXB9sIR
0itIQWHy3ROdBezvSQqkGuars7WY/xQ83t2WPDaX9q1IgdILL8+fSmrkPwWb
78n10x9QfmsKnvkttP6+n3BXCh4Y7vSp8CZ9jgg2Hy5I1hpRvY4IrR0vpjks
Y+9fhGnnR6ZWL2L+RdAb1xi0OZHtXwQD3cnnBmxk+xfh1fSpRVM8KM4TIeCs
ZsWTW6THF8Hs7omfovkUl4uwe8Ec1WQ+278IRqdKPv/dTXylIhx4a3J58kN2
/yLU3Rtze+Z6wopePnU1vVBNtn8Rhu16emvyc7Z/EQrerGx4E9Gf/ItQe006
/VIU8XPEuHctqshlCPMvxq/4f94qHSHMFeNt7lm1yS8Jm4mxQjnj/FBT4ocY
FV/7yKc9YO9fDGXVAXhezd6/GPVOMj1pMvXHF+PiLLX6CyeJTy4GZ3HyGv8z
1F+BGGXTxnjEpLD3L0YLb3RZ9Gnmv7d+jcki9SLSV4ihPuj9EfNitn8xDBXW
Re9UCbeKsb7sw+lTQuZfjOz+ascbz1Gck4o1g3yfrKwnfp1ULEkduznhDvFz
U7G379HBo9ark/9U2I2//BQ5hJGKxfr56qcric8tFZ7zcr6MYJiXCvcE3hAN
Xw3yn4r7+qvSTXxp/vJUFO4p5WkxvYJefGdWrqkPe/+pcPnkljRmPeHKVIT2
2d8x0Jb5T4URx7tnRynhhlTUzWnb/6Oe+U+FWe0I77tjCXelosXHdVyQB/XD
SYNn/L9nG+dQvU4aWg+12/f/n/80OBpXXhQZMv9p2JhZId5rS/NEGirKIvw2
nWf+02Bz2mNg21qK89JQ/kTU8fg2xflp+PuF6je7vqQvT4PxjYoB2jfZ/tPw
bZ/S9w2LSa80DSUvpozeYjKA/KfBovYf18xBxKdIw6l1F8qrPNn+0zDzxv0q
cNj9p/X+B1P2h5EB6XWl4am1gbH5DbZ/CdaeGpRrf4n0dCTwP33jSWMZ5XMl
MLO6JfAoY/578yXlAY++sv1L8JGr+ezLUerfTQJR/vrbniM1yb8EAt/EXeOP
EuZLUPXDUZu3gd2/BMPX/ho2zJfiBRLkrLKq+2mgTf4l8HSPf/zsO+lVSrBR
uezJfgn1p5DAb/qKNRWLCTdI8KhyUarXTi3yL8HEP96Fvw2i+XVJ8LWziy9M
Jj2OFGXvkr5kt1C9jhST+tmMPPuE4lwpdlwSl7UUEjaTYt+6GdbD6ikfUswe
wI9c9o35l+Jm9MNziVepf54Ui8vN+7q8IX2+FGrH+qll9LD9S1H/23H7hZ2E
C6QwWlQnGnad7V+Kh0evXlDtYfcvRez7f+4Z1JA/hRRdq4Od33UTf4MUX13l
9SnPCbdKEfyuy/u+gPi6pJhR3v33RX3CHBnmLR1Q+3UF+dORYePKv/TO9Sd+
rgz1noEmao+oPzMZXAa4fo6/TnHIUPIkRs3vLvl1k6H58MClO2+TPk+G+K76
ZaKXOuRfhuTFxfF3e0hPLkOfpSOUPg+meEEv9r3BS5rE9i+DylptO01PwpUy
7LA2lN52Y/5lgN0908mLmH8ZTgRr6n2qY/5lCLp9auWeLNLrksH5hWvd0NUD
yX86yrfPTLUoIX6ddPjMMOCEqrD9p+PMiJy5ZjdJzywdZjPnLS/3onyko2b2
cd3DGyjulo4VEacP6h4kP7xe/GXo8xPazH86BNwfZiVmhOXpOOo1SSIfyvaf
jg15W0ofJVO8NB0LyjduyblL/Vamw0/Nt59zf8KKdCx7NOCV9ivqpyEdU+ZW
3K9uYfefjp/bhpqmTSO+rnTkPVpdfPgU5XMy8LKuOTd2IPOfgS3edjn2Pwhz
MxBZPCHs32yap1kG0px2TTA1ZvvPQPqOtvRDE4jfLQNVyyR6lqrMfwYeGbiu
aDrG/GfAJvHiqSxn5j8DOS8PbjQZxfafAacQB56wiO0/A2/cdEeWDWD+MzCw
0yVtpoDyFRlQKvvp4eRLuCEDq0qqvTUElN+agdWRohXzfxHuykDIHzt0ZEyP
kwkLq0f8KU0U18mEysLz2/ex/XEzYRO26dOl6xQ3y8TnOPWct+sIIxNh1zrK
i6cTdstEp3KX8L2QMC8Tv1QmRrY4EOZnIn+A+ZMREwnLMzH/T53hxRW65D8T
50JM78fspHhpJgL5GpoLpBSvzISbqMRsWwRhRW9/hR9D+OweGjIhy9u2WX8D
xVsz8WV0p994K8Jdmfj22bju+BLCnCys6dMs80pk/rOw03bxoFB7inOzcNKp
033qB+Y/C99NR7Sd5evg/wAHUica
          "]],
         FontFamily->"Arial"]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Point[CompressedData["
1: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
yX86yrfPTLUoIX6ddPjMMOCEqrD9p+PMiJy5ZjdJzywdZjPnLS/3onyko2b2
cd3DGyjulo4VEacP6h4kP7xe/GXo8xPazH86BNwfZiVmhOXpOOo1SSIfyvaf
jg15W0ofJVO8NB0LyjduyblL/Vamw0/Nt59zf8KKdCx7NOCV9ivqpyEdU+ZW
3K9uYfefjp/bhpqmTSO+rnTkPVpdfPgU5XMy8LKuOTd2IPOfgS3edjn2Pwhz
MxBZPCHs32yap1kG0px2TTA1ZvvPQPqOtvRDE4jfLQNVyyR6lqrMfwYeGbiu
aDrG/GfAJvHiqSxn5j8DOS8PbjQZxfafAacQB56wiO0/A2/cdEeWDWD+MzCw
0yVtpoDyFRlQKvvp4eRLuCEDq0qqvTUElN+agdWRohXzfxHuykDIHzt0ZEyP
kwkLq0f8KU0U18mEysLz2/ex/XEzYRO26dOl6xQ3y8TnOPWct+sIIxNh1zrK
i6cTdstEp3KX8L2QMC8Tv1QmRrY4EOZnIn+A+ZMREwnLMzH/T53hxRW65D8T
50JM78fspHhpJgL5GpoLpBSvzISbqMRsWwRhRW9/hR9D+OweGjIhy9u2WX8D
xVsz8WV0p994K8Jdmfj22bju+BLCnCys6dMs80pk/rOw03bxoFB7inOzcNKp
033qB+Y/C99NR7Sd5evg/wAHUica
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 499.}, {0, 4.668564260978264}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], FontFamily -> "Arial"]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 499.}, {0, 4.668564260978264}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], FontFamily -> "Arial"], 
         Point[CompressedData["
1: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
yX86yrfPTLUoIX6ddPjMMOCEqrD9p+PMiJy5ZjdJzywdZjPnLS/3onyko2b2
cd3DGyjulo4VEacP6h4kP7xe/GXo8xPazH86BNwfZiVmhOXpOOo1SSIfyvaf
jg15W0ofJVO8NB0LyjduyblL/Vamw0/Nt59zf8KKdCx7NOCV9ivqpyEdU+ZW
3K9uYfefjp/bhpqmTSO+rnTkPVpdfPgU5XMy8LKuOTd2IPOfgS3edjn2Pwhz
MxBZPCHs32yap1kG0px2TTA1ZvvPQPqOtvRDE4jfLQNVyyR6lqrMfwYeGbiu
aDrG/GfAJvHiqSxn5j8DOS8PbjQZxfafAacQB56wiO0/A2/cdEeWDWD+MzCw
0yVtpoDyFRlQKvvp4eRLuCEDq0qqvTUElN+agdWRohXzfxHuykDIHzt0ZEyP
kwkLq0f8KU0U18mEysLz2/ex/XEzYRO26dOl6xQ3y8TnOPWct+sIIxNh1zrK
i6cTdstEp3KX8L2QMC8Tv1QmRrY4EOZnIn+A+ZMREwnLMzH/T53hxRW65D8T
50JM78fspHhpJgL5GpoLpBSvzISbqMRsWwRhRW9/hR9D+OweGjIhy9u2WX8D
xVsz8WV0p994K8Jdmfj22bju+BLCnCys6dMs80pk/rOw03bxoFB7inOzcNKp
033qB+Y/C99NR7Sd5evg/wAHUica
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 499.}, {0, 4.668564260978264}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {FontFamily -> "Arial"}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], FontFamily -> "Arial"]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 499.}, {0, 4.668564260978264}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.935535284885957*^9, 3.935535399386684*^9, 3.935535449383752*^9, {
   3.935539543201755*^9, 3.935539543305398*^9}, 3.9355397422926292`*^9, 
   3.93575051933561*^9, 3.935755675379342*^9, {3.935756651751067*^9, 
   3.935756656899497*^9}, 3.9357570870929203`*^9},
 CellLabel->"Out[37]=",
 CellID->714391346,ExpressionUUID->"29589d7d-a563-40fa-95e6-17bf332c5839"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testSystemDef", " ", "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "h"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "v_"}], "}"}], ",", "\[CapitalDelta]t_"}], "]"}],
        " ", ":=", " ", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"v", " ", "\[CapitalDelta]t"}], "]"}]}], ",", " ", "v"}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"{", 
         RowBox[{"x_", ",", "v_"}], "}"}], "]"}], " ", ":=", " ", 
       RowBox[{"{", "x", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "f", ",", "\[IndentingNewLine]", "h", ",", "\[IndentingNewLine]", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         SuperscriptBox["0.2", "2"], "}"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935536015261994*^9, 3.935536082825061*^9}, {
  3.935536167743169*^9, 3.935536196256137*^9}, {3.9355362338192263`*^9, 
  3.935536236032596*^9}, {3.935536425612525*^9, 3.935536490098374*^9}, {
  3.93553666479988*^9, 3.9355368104882107`*^9}, {3.9355368471523743`*^9, 
  3.935536855305769*^9}, {3.935756663762726*^9, 3.935756667928854*^9}, {
  3.9357567261485023`*^9, 3.935756728924987*^9}, {3.9357572143151484`*^9, 
  3.935757267255455*^9}, {3.935757404655246*^9, 3.9357574702554293`*^9}, {
  3.935757526483189*^9, 3.9357575278830147`*^9}, {3.935757988927341*^9, 
  3.93575800876619*^9}, {3.9357588416881323`*^9, 3.9357588447569733`*^9}},
 CellID->440481560,ExpressionUUID->"03be04b7-95c7-42da-8746-d6c7f56a516d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UKFFilter", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], ",", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"List", ",", "testData", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", " ", 
       "testSystemDef"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UKFSmoother", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], ",", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"List", ",", "testData", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", " ", 
       "testSystemDef"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.935535585091873*^9, 3.935535600876897*^9}, {
   3.935535745714731*^9, 3.9355357475821943`*^9}, {3.935535779515593*^9, 
   3.9355357805198*^9}, {3.935535872181809*^9, 3.935535873853875*^9}, {
   3.935535906371398*^9, 3.935535977920189*^9}, 3.935536023040951*^9, {
   3.9355362112278214`*^9, 3.935536212995986*^9}, {3.935536279427351*^9, 
   3.935536383952344*^9}, {3.9355383310617647`*^9, 3.93553833170357*^9}, {
   3.9355385834031363`*^9, 3.9355385882786837`*^9}, {3.935757550963641*^9, 
   3.935757573446395*^9}, 3.935757630500339*^9, {3.935758060313723*^9, 
   3.935758093381487*^9}},
 CellLabel->"In[192]:=",
 CellID->722025773,ExpressionUUID->"a828257d-0a32-47ca-949d-0f880c9b3dce"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[2], 
         StyleBox[LineBox[CompressedData["
1:eJw9V3lczPv7HVqkUolEWYYSWSduqCudirRIe1o17XvNTM3UzLRMSOpaQmSJ
soWE4loS12QXkggX0XUJCdn3/Pq97vP++sfreJbznOc878+8jAxP8YrqzeFw
PvTicP7/7//+dNkuengv44rje1v6BxTudRTxd78krAGjvMDm8+1vCethw73J
bo9ndBEeiN9Ni7uXXWV4MJxOlQz5vfsV4aEwWZ43KuETq+ciOnh2fcDNTsKj
8EGzuLlt+VPCpohdcufI6N9Yvhlq2l/1Grae5Y/FHoumTdVH3xEeh/yOksz1
Wox/Ak6OGtU+sfMb4Um4WGvIqVzB5uFBckciqXnM8i0Qmn1oRHj1G8JTkJNr
E8ErY/uYCs7FJfx4H4Z/g053UqxDEKu3xBKzcXMnlH4gPA1WLm7Dqx6w+HQ8
TZTfvbud1c9A32dn+n0sYdgK+s3pDwISmR5rJNVKMpYNZP1+x0uXq9Z3rT8R
nokH1Xrpp23ZfmwwV5TiHPe/eWYhZLKuwaRIFrfF88aLz/xWPicMDDwze2NX
7LP/sAK4WfF145BDjM8OvNGDzQ6rU73CDk+vjT+U/5b1t4d+ZJJd8urXFLdH
90tv1/Fcdi8OaBzwuWDILtKncECFI2+T72ymdzYOtl8LHXWM9q2YjcNBe358
mc/mnQOdmPh146uITzEHbcPqgu42M/2OCCob0NhLk/alcMTmv4T9Plz4SPG5
iLettHRyZv3n4uH5TRaHo9h+nTDqYtg9juwLxZ1QOza6+9NNVu+MvQvrthxb
xPQ741XErqZ7r9l8LriibVKaKaR9KlzwRNFqKN3P9ueKOOv7OrX7aV6FK4Sv
bPZyZWz+eYhxNq0LPU73qJiHef1+zTerYfVuuOyU+86rN82jcEPnqcXtPm/Z
/ubj5prZc34UMv3zsTdO0ctoG7tfd5w5oPPTfTXbnzsiwpyG2pkxfR4ILe5f
mpVDfPDALbW67MHsfSo8MGNQ/bwZwcSn9MBl1w5vWQbbnyfyomag8BLlwxOl
8UP+dIlg83oizt9uxO16iis9MeP6IGNO7leq90KnYUf8uoeM3wtd7TdGp/sw
PV6oGx69n7vmM9V7wcvjbO5JWza/N7ylLW17b1E+vNHZNKGzYz+b3xtm0byk
T9WUr/RGkHFwWncB278Pzk7c/k3fjvrDB8h38z57ge5X4YNhdxyji9UZf098
c19+nS5hji+27am2LOhm/L64NEoacvA9fW8UvtBM2uA7s4XiSl/wi5uUY0qZ
fj9IjykXflVl9X4ofWZlutmYze+HEt+GWl0fNr8f+m+NeTJWnfm/AAkOmr+5
ZbP5F2BneI5mjhXb/wK8m5zi8GQJ41+AeNdSo3sBbH/+KLaPKATo/uGP7U/n
j+6dy/j9kTx4cqHDceafPz53Jwov6TH/AzB7X/8xJ51ILwJQ825UqGch4w/A
MYXZZQ0dNn8ATL/p37RyJD5OIFaG66/xF9A+EIiuBtmkB06sPhDrt5wWukdR
vjIQqsOb/ao92fxBKC0wkoR/oX0gCM/NpffP/WT3E4TbZ542VVyh+1IGIUx3
h9/wQsYfjF8XBUtPu9A9IBin0tcP11Cw71Uw6uzvziwNo/mUwbj+buyDdfPZ
70kIih5W3160ieZBCAxaFUY6Gj+oPgTy8AP2xjr0/pQhGFenVn4jk73vhZjZ
fyZHV/mT6hfiYmT9zZQ0dj898V7OOz8FfKf6hfhh/EtXlNQL/9WHYsNLgUgw
h+kPRa3mWWX+HMpXhMLBLnvOeUv2fkPxb1pZdcdr4uPwkRsVePlTCPFx+Qgd
sfD4xxPsHvg4dZNz8WgTzcvn45XpDBM1B9afj1/f9k/Nek24nI9bHWcnu/JI
v7Kn3+7og3sMqX8bH9rWVj+1rjP9Yfhw3Hjoyka6X24YxuwMHxCvRvUIw6Ll
8jd216meH4ZB1X8/WbeH+RuG3ZM/PLC2If/Kw9DUqClfXszuPQzRqpOCOrqp
X1sY2sriju45yPwPh1X18yNa9uQvNxxdUVuta6+yfYaDP8S/0+ob+csPR2bB
QfdFHpSvCEd/jyvDs727iT8cH976lW79zu41HOLySy633/0i/nDIKoeY/fzI
3n8EOh4ndWidpv1xI1DXcqPGz57dQwQked0XLCdSPj8CSbZut2cvZ78nEXiu
l/D86grSV94Tv1m2zvweu9cIKH6L2TlBlfbbFoHWK4d+9UkgPk4khpeOzJu8
h/RyI6H+b3JzDNh7jsSEoS+CY6wZfyQa5sXeGBnD7jsSItulE0ZUUv/ySCz7
nrR1ZzPpVUZClnLiuaMK6WmLRKcv/5d3HtVzojAuePsFT0e2/ygsDpmtCGlg
/FHYH1/2nvuJ9smPwr8DVo4NyWXvIwphA1+3TDUgf8qjMKnuSM5hNaY/CllR
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
webU30OCqq+9FFPus/cvgap6PzytZe9fgkZnuYEsleZTSHBuhkbj2WPUr0gC
zoLUlYEnab5yCSqmjPKKS2PvX4J7/JEVsSeY/p76lWbzNUuIv0kCzQHvDlqU
Mv8lMFbalLxVJ9wlwZqK9yeOi5j+dOT21TjSfJrieulYOcD/0bJG6s9Nx8L0
0RuSblF/Xjp29T40cMQaTdKfDvuxFx4jj7BHOhYYFmqeqKZ+/HR4z8n7Moxh
QTo8k/iDtPy1SH867houzzTzp/0XpaN4Zzlfh/GV9+BbM/LN/dj7T4fbJ4+U
UWsIK9MR3mtPZ387pj8dJhzf7q3lhNvS0TCrfc+PRqY/Hbz6Yb63RxPmZOCe
n/uYEC+aRy8D3on/nmqeRfXcDLTt73Do+z/9GXAyrT4nNmb6M7Auu0qyy472
6ZGBqoqogPVnmP4M2J7w6t++iuKCDFQ+Enc+vEFxRQb+fqb+zb438RdlwPRq
VT/da8z/DHzbrfJ97QLiq85A2bNJIzea9SP9GbCs/8c9ewD1a8rA8dVnK2u8
mf8ZmH71bg047P4zev5HU/GHiRHxcaR4bGNkanGV+S/FquMD8h3OEx9XisAT
Vx81V1A+Twqe9XWhVwXT35MvrQxq/cr8l+IjV/vJl0M0P18KceGaG97DtUm/
FEL/5O1jDxFWSFHzw0mXv5bdvxRDV/0aMsSf4uVS5C23bvhppEv6pfD2THz4
5DvxKaVYp1rxaI+U5muSImDq0pVVCwi3SdFaPT/dZ5sO6Zdi/B9vI9+E0P44
Mnx93SUQpRKfngwVb1O+5N6jeq4ME/rYDj/1iOI8Gbael1TcKyYMGXavnmYz
pJHyPWSY2U8Qvfgb0y/DtdgHp5Mv0fwCGRZUWvR2e0X8Chk0DvfRyOpm/svQ
+NsRh3mvCZfLYDK/QTzkCvNfhgeHLp1V72b3L0P8u3/uGNWRviYZulaEurz9
QP3bevS5KxrTnhLukiH0bZfvXSH148gxrfLD3+cMCevJMWdRv/qvS0kfV451
y/4yON2X+vPkaPQONtNopfkgh1s/98+JVyjuIUfZoziNgNukly9Hy4H+i7bd
IH6BHIldjYvFz/VIvxypC0oTb3cTX5EcvRYNU/k8kOLlPdj/Kj9lAvNfDrVV
uvba3oSVcmy1MZbd8GD65YD9HfOJ85l+OY6Gaht8amD65Qi5cXzZzhzi42TC
5Zl7w+AV/Ul/Jiq3TE+3LKP+3Ez4TTPihKsx/zNxcljebN414kMmeNPnLKn0
oXyPTNTNPKJ/YC3F+ZlYGnVin/4+0iPowV8GPz2qy/RnQsj9wSvjES7KxCGf
CVLFYOZ/JtYWbCxvTaV4dSZcK9dtzLtN8yozEaDh38elL+GmTCxu7fdC9wXN
05aJSbOr7tbeY/efiZ+bB5tnTKF+nCwUtK4oPXCc8vWy8LyhJT++P9OfhY2+
9nkOPwjzshBdOi7i31zaJ7KQ4bx9nLkp8z8LmVvbM/ePo/78LNQslhpYqTP9
WWg1cl968zDTnwXb5HPHc1yY/izkPd+3zmwE8z8LzmGOfFEJ8z8Lrzz0h1f0
Y/qz0P+1W8Z0IeU3ZUGl4qeXsz/htiwsL6v11RJSflcWVkSLl879RZiTjbA/
turJGZ9eNiytWwWTblKcmw21eWe27Gb+8bJhG7H+0/krFEc2Pido5r1ZTdgj
GxGXOytLpxLmZ+O1apfonYiwIBu/1MZH33MkrMhGYT+LR8PGEy7Kxtw/9YaW
VumT/mycDjO/G7eN4tXZCBZoabvKKK7Mhoe4jLc5inBTz3zFH8ME7B7asiEv
2LzBcC3Fu7LxZeTrgLHWhDk5+PbZtOHIQsJ6OVjZq0Xuk8z052Cb3YIB4Q4U
5+XgmPNrz8nvmf4cfDcf1n5KoIf/Aw7nKBk=
           "]],
          FontFamily->"Arial"]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.006944444444444445], AbsoluteThickness[2], 
         StyleBox[LineBox[CompressedData["
1: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
           "]],
          FontFamily->"Arial"]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.006944444444444445], AbsoluteThickness[2], 
         StyleBox[LineBox[CompressedData["
1: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
ikR01HXLNT1HzkrEyu0Tfu9Sk5WJGPh90OeXL8jlicg2vG356DNZlYjLfffX
Puvdm+5PhMcZ7YZPJmRNIkrdumYNtiK3JaKg0WKkw1wyR4w180sK//YgG4oR
2Tiy4k4YmStGyrvOXZOTyVZi1ImODt+ZRYYY8x9umj9kD5knxpXiEpfC42S+
GB2PsqxnXCULxOgqrvqoeUJWiGG8aq0yp52cJcbI6hhrbx1dul8MG2fXX5bG
5HIxjAySnhhZklVifHGd8767LVktRmC/ZWJtD7JGjFM5mwwGhZPbxJhUZ3Fm
qpzMkWDhoCD3wGyyoQSLpLahhUVkrgRrePplH06RrSQo+uqSuKiBDAny9E+8
PvGCzJPAq7j91ZSvZL4E86Rf/lbp9aH7JXD7K/uAtylZIUHdpJpSnWnkLAkc
3k8oqHYkKyVYd+Oo/no/crkEpWUfpcHxZJUE/Yf1tF6SQVZLsMra4/7CArJG
gleLeGKPSnKbBPUDLxjHXiFzpAiaPntQ/mOyoRQezTlL7raTuVKsNay4YNZL
j+6XIr1sjED+OxlSLB/pG9M8icyTQrisz5XgBWS+FPtcHkg6fMkCKdxmXhRk
CckKKcY9PjlwVgY5S4p70Ud5XQVkpRReH70GXT1CLpcipKR/bEkdWSUFf5+t
93YNWS3Fl9zzhds/kzVSHPc7e7tUT5/ul2K/XvS7a2Zkjgz9pgk/cKaTDWVY
fWHQATtnMlcG+6qaoXlBZCsZBji5yX/KyJCB4/aiuyibzJMhbaldalcxmS/D
mahjjluryAIZrp/okM++Q1bIYHpjeuf3d+QsGVY9KTe60r0v3S/DFZ11kiJj
crkMYQYzo3MmklUyBAdImnMXkNUyuLmv+V7iR9b893mjUnY2JJDbZJjr9OCB
diaZk4SdX86dXbyXbJiEkVWNc/adIXOTwL1ue6lfI9kqCQuX2lpktZCRBPcc
q6V/dDeg+5NgozIWq4zJ/CQsMDicL5xEFiTBKu9rrY0jWZGE+hhTC8MAclYS
BN7K098kZGUSUvpvWf9pE7k8CbWr5ZLuJWRVEuK7ra0dXkNWJ8ElTy/f4wFZ
k4Rze7e/+aed3JaEjwM33pdoG9L9ybjsWaRVZkQ2TMbrZVLJ+9/J3GTkFYnm
TrUgWyWjMSw1aM00MpKBfrVvNLZkXjKW/bpea+dM5icjtHlt38PeZEEySsMz
a8eEkhXJGDMk51dxPDkrGQ33W6smpZKVyajw/9nn0gZyeTKa6ke9CdhOViUj
yVLPo/c+sjoZw6odok9WkjXJ6HburKVQRW5LBrf71vxp19j9cgieDLze/QG7
Xw6Z3YSGB6/Y/XIcy0jJOt3B7pdjKHfauCKOEd0vx9S90fnb9ck8OQaKkju2
GZP5cvjvCZq6azRZIId2nVZw5RSyQg7b5e6ZDXPIWXK8mvPnkU9OZKUcDQFj
n4z0IZfLYbkyw4QfRlbJ0ZndW7AngayWI3vg38/bV5E1cux5o5Qs3ERuk6O/
fuifhwrInBS8EhZYDT1ANkyB+2BdfvZJMjcFo03L1f0vk61SMNhcuH5nI7s/
BeKnwXlTn7P7U3CzcQbnzgcj/AfexFZx
           "]],
          FontFamily->"Arial"]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Line[CompressedData["
1:eJw9V3lczPv7HVqkUolEWYYSWSduqCudirRIe1o17XvNTM3UzLRMSOpaQmSJ
soWE4loS12QXkggX0XUJCdn3/Pq97vP++sfreJbznOc878+8jAxP8YrqzeFw
PvTicP7/7//+dNkuengv44rje1v6BxTudRTxd78krAGjvMDm8+1vCethw73J
bo9ndBEeiN9Ni7uXXWV4MJxOlQz5vfsV4aEwWZ43KuETq+ciOnh2fcDNTsKj
8EGzuLlt+VPCpohdcufI6N9Yvhlq2l/1Grae5Y/FHoumTdVH3xEeh/yOksz1
Wox/Ak6OGtU+sfMb4Um4WGvIqVzB5uFBckciqXnM8i0Qmn1oRHj1G8JTkJNr
E8ErY/uYCs7FJfx4H4Z/g053UqxDEKu3xBKzcXMnlH4gPA1WLm7Dqx6w+HQ8
TZTfvbud1c9A32dn+n0sYdgK+s3pDwISmR5rJNVKMpYNZP1+x0uXq9Z3rT8R
nokH1Xrpp23ZfmwwV5TiHPe/eWYhZLKuwaRIFrfF88aLz/xWPicMDDwze2NX
7LP/sAK4WfF145BDjM8OvNGDzQ6rU73CDk+vjT+U/5b1t4d+ZJJd8urXFLdH
90tv1/Fcdi8OaBzwuWDILtKncECFI2+T72ymdzYOtl8LHXWM9q2YjcNBe358
mc/mnQOdmPh146uITzEHbcPqgu42M/2OCCob0NhLk/alcMTmv4T9Plz4SPG5
iLettHRyZv3n4uH5TRaHo9h+nTDqYtg9juwLxZ1QOza6+9NNVu+MvQvrthxb
xPQ741XErqZ7r9l8LriibVKaKaR9KlzwRNFqKN3P9ueKOOv7OrX7aV6FK4Sv
bPZyZWz+eYhxNq0LPU73qJiHef1+zTerYfVuuOyU+86rN82jcEPnqcXtPm/Z
/ubj5prZc34UMv3zsTdO0ctoG7tfd5w5oPPTfTXbnzsiwpyG2pkxfR4ILe5f
mpVDfPDALbW67MHsfSo8MGNQ/bwZwcSn9MBl1w5vWQbbnyfyomag8BLlwxOl
8UP+dIlg83oizt9uxO16iis9MeP6IGNO7leq90KnYUf8uoeM3wtd7TdGp/sw
PV6oGx69n7vmM9V7wcvjbO5JWza/N7ylLW17b1E+vNHZNKGzYz+b3xtm0byk
T9WUr/RGkHFwWncB278Pzk7c/k3fjvrDB8h38z57ge5X4YNhdxyji9UZf098
c19+nS5hji+27am2LOhm/L64NEoacvA9fW8UvtBM2uA7s4XiSl/wi5uUY0qZ
fj9IjykXflVl9X4ofWZlutmYze+HEt+GWl0fNr8f+m+NeTJWnfm/AAkOmr+5
ZbP5F2BneI5mjhXb/wK8m5zi8GQJ41+AeNdSo3sBbH/+KLaPKATo/uGP7U/n
j+6dy/j9kTx4cqHDceafPz53Jwov6TH/AzB7X/8xJ51ILwJQ825UqGch4w/A
MYXZZQ0dNn8ATL/p37RyJD5OIFaG66/xF9A+EIiuBtmkB06sPhDrt5wWukdR
vjIQqsOb/ao92fxBKC0wkoR/oX0gCM/NpffP/WT3E4TbZ542VVyh+1IGIUx3
h9/wQsYfjF8XBUtPu9A9IBin0tcP11Cw71Uw6uzvziwNo/mUwbj+buyDdfPZ
70kIih5W3160ieZBCAxaFUY6Gj+oPgTy8AP2xjr0/pQhGFenVn4jk73vhZjZ
fyZHV/mT6hfiYmT9zZQ0dj898V7OOz8FfKf6hfhh/EtXlNQL/9WHYsNLgUgw
h+kPRa3mWWX+HMpXhMLBLnvOeUv2fkPxb1pZdcdr4uPwkRsVePlTCPFx+Qgd
sfD4xxPsHvg4dZNz8WgTzcvn45XpDBM1B9afj1/f9k/Nek24nI9bHWcnu/JI
v7Kn3+7og3sMqX8bH9rWVj+1rjP9Yfhw3Hjoyka6X24YxuwMHxCvRvUIw6Ll
8jd216meH4ZB1X8/WbeH+RuG3ZM/PLC2If/Kw9DUqClfXszuPQzRqpOCOrqp
X1sY2sriju45yPwPh1X18yNa9uQvNxxdUVuta6+yfYaDP8S/0+ob+csPR2bB
QfdFHpSvCEd/jyvDs727iT8cH976lW79zu41HOLySy633/0i/nDIKoeY/fzI
3n8EOh4ndWidpv1xI1DXcqPGz57dQwQked0XLCdSPj8CSbZut2cvZ78nEXiu
l/D86grSV94Tv1m2zvweu9cIKH6L2TlBlfbbFoHWK4d+9UkgPk4khpeOzJu8
h/RyI6H+b3JzDNh7jsSEoS+CY6wZfyQa5sXeGBnD7jsSItulE0ZUUv/ySCz7
nrR1ZzPpVUZClnLiuaMK6WmLRKcv/5d3HtVzojAuePsFT0e2/ygsDpmtCGlg
/FHYH1/2nvuJ9smPwr8DVo4NyWXvIwphA1+3TDUgf8qjMKnuSM5hNaY/CllR
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
webU30OCqq+9FFPus/cvgap6PzytZe9fgkZnuYEsleZTSHBuhkbj2WPUr0gC
zoLUlYEnab5yCSqmjPKKS2PvX4J7/JEVsSeY/p76lWbzNUuIv0kCzQHvDlqU
Mv8lMFbalLxVJ9wlwZqK9yeOi5j+dOT21TjSfJrieulYOcD/0bJG6s9Nx8L0
0RuSblF/Xjp29T40cMQaTdKfDvuxFx4jj7BHOhYYFmqeqKZ+/HR4z8n7Moxh
QTo8k/iDtPy1SH867houzzTzp/0XpaN4Zzlfh/GV9+BbM/LN/dj7T4fbJ4+U
UWsIK9MR3mtPZ387pj8dJhzf7q3lhNvS0TCrfc+PRqY/Hbz6Yb63RxPmZOCe
n/uYEC+aRy8D3on/nmqeRfXcDLTt73Do+z/9GXAyrT4nNmb6M7Auu0qyy472
6ZGBqoqogPVnmP4M2J7w6t++iuKCDFQ+Enc+vEFxRQb+fqb+zb438RdlwPRq
VT/da8z/DHzbrfJ97QLiq85A2bNJIzea9SP9GbCs/8c9ewD1a8rA8dVnK2u8
mf8ZmH71bg047P4zev5HU/GHiRHxcaR4bGNkanGV+S/FquMD8h3OEx9XisAT
Vx81V1A+Twqe9XWhVwXT35MvrQxq/cr8l+IjV/vJl0M0P18KceGaG97DtUm/
FEL/5O1jDxFWSFHzw0mXv5bdvxRDV/0aMsSf4uVS5C23bvhppEv6pfD2THz4
5DvxKaVYp1rxaI+U5muSImDq0pVVCwi3SdFaPT/dZ5sO6Zdi/B9vI9+E0P44
Mnx93SUQpRKfngwVb1O+5N6jeq4ME/rYDj/1iOI8Gbael1TcKyYMGXavnmYz
pJHyPWSY2U8Qvfgb0y/DtdgHp5Mv0fwCGRZUWvR2e0X8Chk0DvfRyOpm/svQ
+NsRh3mvCZfLYDK/QTzkCvNfhgeHLp1V72b3L0P8u3/uGNWRviYZulaEurz9
QP3bevS5KxrTnhLukiH0bZfvXSH148gxrfLD3+cMCevJMWdRv/qvS0kfV451
y/4yON2X+vPkaPQONtNopfkgh1s/98+JVyjuIUfZoziNgNukly9Hy4H+i7bd
IH6BHIldjYvFz/VIvxypC0oTb3cTX5EcvRYNU/k8kOLlPdj/Kj9lAvNfDrVV
uvba3oSVcmy1MZbd8GD65YD9HfOJ85l+OY6Gaht8amD65Qi5cXzZzhzi42TC
5Zl7w+AV/Ul/Jiq3TE+3LKP+3Ez4TTPihKsx/zNxcljebN414kMmeNPnLKn0
oXyPTNTNPKJ/YC3F+ZlYGnVin/4+0iPowV8GPz2qy/RnQsj9wSvjES7KxCGf
CVLFYOZ/JtYWbCxvTaV4dSZcK9dtzLtN8yozEaDh38elL+GmTCxu7fdC9wXN
05aJSbOr7tbeY/efiZ+bB5tnTKF+nCwUtK4oPXCc8vWy8LyhJT++P9OfhY2+
9nkOPwjzshBdOi7i31zaJ7KQ4bx9nLkp8z8LmVvbM/ePo/78LNQslhpYqTP9
WWg1cl968zDTnwXb5HPHc1yY/izkPd+3zmwE8z8LzmGOfFEJ8z8Lrzz0h1f0
Y/qz0P+1W8Z0IeU3ZUGl4qeXsz/htiwsL6v11RJSflcWVkSLl879RZiTjbA/
turJGZ9eNiytWwWTblKcmw21eWe27Gb+8bJhG7H+0/krFEc2Pido5r1ZTdgj
GxGXOytLpxLmZ+O1apfonYiwIBu/1MZH33MkrMhGYT+LR8PGEy7Kxtw/9YaW
VumT/mycDjO/G7eN4tXZCBZoabvKKK7Mhoe4jLc5inBTz3zFH8ME7B7asiEv
2LzBcC3Fu7LxZeTrgLHWhDk5+PbZtOHIQsJ6OVjZq0Xuk8z052Cb3YIB4Q4U
5+XgmPNrz8nvmf4cfDcf1n5KoIf/Aw7nKBk=
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Line[CompressedData["
1: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
ikR01HXLNT1HzkrEyu0Tfu9Sk5WJGPh90OeXL8jlicg2vG356DNZlYjLfffX
Puvdm+5PhMcZ7YZPJmRNIkrdumYNtiK3JaKg0WKkw1wyR4w180sK//YgG4oR
2Tiy4k4YmStGyrvOXZOTyVZi1ImODt+ZRYYY8x9umj9kD5knxpXiEpfC42S+
GB2PsqxnXCULxOgqrvqoeUJWiGG8aq0yp52cJcbI6hhrbx1dul8MG2fXX5bG
5HIxjAySnhhZklVifHGd8767LVktRmC/ZWJtD7JGjFM5mwwGhZPbxJhUZ3Fm
qpzMkWDhoCD3wGyyoQSLpLahhUVkrgRrePplH06RrSQo+uqSuKiBDAny9E+8
PvGCzJPAq7j91ZSvZL4E86Rf/lbp9aH7JXD7K/uAtylZIUHdpJpSnWnkLAkc
3k8oqHYkKyVYd+Oo/no/crkEpWUfpcHxZJUE/Yf1tF6SQVZLsMra4/7CArJG
gleLeGKPSnKbBPUDLxjHXiFzpAiaPntQ/mOyoRQezTlL7raTuVKsNay4YNZL
j+6XIr1sjED+OxlSLB/pG9M8icyTQrisz5XgBWS+FPtcHkg6fMkCKdxmXhRk
CckKKcY9PjlwVgY5S4p70Ud5XQVkpRReH70GXT1CLpcipKR/bEkdWSUFf5+t
93YNWS3Fl9zzhds/kzVSHPc7e7tUT5/ul2K/XvS7a2Zkjgz9pgk/cKaTDWVY
fWHQATtnMlcG+6qaoXlBZCsZBji5yX/KyJCB4/aiuyibzJMhbaldalcxmS/D
mahjjluryAIZrp/okM++Q1bIYHpjeuf3d+QsGVY9KTe60r0v3S/DFZ11kiJj
crkMYQYzo3MmklUyBAdImnMXkNUyuLmv+V7iR9b893mjUnY2JJDbZJjr9OCB
diaZk4SdX86dXbyXbJiEkVWNc/adIXOTwL1ue6lfI9kqCQuX2lpktZCRBPcc
q6V/dDeg+5NgozIWq4zJ/CQsMDicL5xEFiTBKu9rrY0jWZGE+hhTC8MAclYS
BN7K098kZGUSUvpvWf9pE7k8CbWr5ZLuJWRVEuK7ra0dXkNWJ8ElTy/f4wFZ
k4Rze7e/+aed3JaEjwM33pdoG9L9ybjsWaRVZkQ2TMbrZVLJ+9/J3GTkFYnm
TrUgWyWjMSw1aM00MpKBfrVvNLZkXjKW/bpea+dM5icjtHlt38PeZEEySsMz
a8eEkhXJGDMk51dxPDkrGQ33W6smpZKVyajw/9nn0gZyeTKa6ke9CdhOViUj
yVLPo/c+sjoZw6odok9WkjXJ6HburKVQRW5LBrf71vxp19j9cgieDLze/QG7
Xw6Z3YSGB6/Y/XIcy0jJOt3B7pdjKHfauCKOEd0vx9S90fnb9ck8OQaKkju2
GZP5cvjvCZq6azRZIId2nVZw5RSyQg7b5e6ZDXPIWXK8mvPnkU9OZKUcDQFj
n4z0IZfLYbkyw4QfRlbJ0ZndW7AngayWI3vg38/bV5E1cux5o5Qs3ERuk6O/
fuifhwrInBS8EhZYDT1ANkyB+2BdfvZJMjcFo03L1f0vk61SMNhcuH5nI7s/
BeKnwXlTn7P7U3CzcQbnzgcj/AfexFZx
              "]]}, "Charting`Private`Tag#3"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 501.}, {0, 4.668564260978264}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2], FontFamily -> "Arial"], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], FontFamily -> "Arial"], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], FontFamily -> "Arial"]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 501.}, {0, 4.668564260978264}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], FontFamily -> "Arial"], 
         Line[CompressedData["
1:eJw9V3lczPv7HVqkUolEWYYSWSduqCudirRIe1o17XvNTM3UzLRMSOpaQmSJ
soWE4loS12QXkggX0XUJCdn3/Pq97vP++sfreJbznOc878+8jAxP8YrqzeFw
PvTicP7/7//+dNkuengv44rje1v6BxTudRTxd78krAGjvMDm8+1vCethw73J
bo9ndBEeiN9Ni7uXXWV4MJxOlQz5vfsV4aEwWZ43KuETq+ciOnh2fcDNTsKj
8EGzuLlt+VPCpohdcufI6N9Yvhlq2l/1Grae5Y/FHoumTdVH3xEeh/yOksz1
Wox/Ak6OGtU+sfMb4Um4WGvIqVzB5uFBckciqXnM8i0Qmn1oRHj1G8JTkJNr
E8ErY/uYCs7FJfx4H4Z/g053UqxDEKu3xBKzcXMnlH4gPA1WLm7Dqx6w+HQ8
TZTfvbud1c9A32dn+n0sYdgK+s3pDwISmR5rJNVKMpYNZP1+x0uXq9Z3rT8R
nokH1Xrpp23ZfmwwV5TiHPe/eWYhZLKuwaRIFrfF88aLz/xWPicMDDwze2NX
7LP/sAK4WfF145BDjM8OvNGDzQ6rU73CDk+vjT+U/5b1t4d+ZJJd8urXFLdH
90tv1/Fcdi8OaBzwuWDILtKncECFI2+T72ymdzYOtl8LHXWM9q2YjcNBe358
mc/mnQOdmPh146uITzEHbcPqgu42M/2OCCob0NhLk/alcMTmv4T9Plz4SPG5
iLettHRyZv3n4uH5TRaHo9h+nTDqYtg9juwLxZ1QOza6+9NNVu+MvQvrthxb
xPQ741XErqZ7r9l8LriibVKaKaR9KlzwRNFqKN3P9ueKOOv7OrX7aV6FK4Sv
bPZyZWz+eYhxNq0LPU73qJiHef1+zTerYfVuuOyU+86rN82jcEPnqcXtPm/Z
/ubj5prZc34UMv3zsTdO0ctoG7tfd5w5oPPTfTXbnzsiwpyG2pkxfR4ILe5f
mpVDfPDALbW67MHsfSo8MGNQ/bwZwcSn9MBl1w5vWQbbnyfyomag8BLlwxOl
8UP+dIlg83oizt9uxO16iis9MeP6IGNO7leq90KnYUf8uoeM3wtd7TdGp/sw
PV6oGx69n7vmM9V7wcvjbO5JWza/N7ylLW17b1E+vNHZNKGzYz+b3xtm0byk
T9WUr/RGkHFwWncB278Pzk7c/k3fjvrDB8h38z57ge5X4YNhdxyji9UZf098
c19+nS5hji+27am2LOhm/L64NEoacvA9fW8UvtBM2uA7s4XiSl/wi5uUY0qZ
fj9IjykXflVl9X4ofWZlutmYze+HEt+GWl0fNr8f+m+NeTJWnfm/AAkOmr+5
ZbP5F2BneI5mjhXb/wK8m5zi8GQJ41+AeNdSo3sBbH/+KLaPKATo/uGP7U/n
j+6dy/j9kTx4cqHDceafPz53Jwov6TH/AzB7X/8xJ51ILwJQ825UqGch4w/A
MYXZZQ0dNn8ATL/p37RyJD5OIFaG66/xF9A+EIiuBtmkB06sPhDrt5wWukdR
vjIQqsOb/ao92fxBKC0wkoR/oX0gCM/NpffP/WT3E4TbZ542VVyh+1IGIUx3
h9/wQsYfjF8XBUtPu9A9IBin0tcP11Cw71Uw6uzvziwNo/mUwbj+buyDdfPZ
70kIih5W3160ieZBCAxaFUY6Gj+oPgTy8AP2xjr0/pQhGFenVn4jk73vhZjZ
fyZHV/mT6hfiYmT9zZQ0dj898V7OOz8FfKf6hfhh/EtXlNQL/9WHYsNLgUgw
h+kPRa3mWWX+HMpXhMLBLnvOeUv2fkPxb1pZdcdr4uPwkRsVePlTCPFx+Qgd
sfD4xxPsHvg4dZNz8WgTzcvn45XpDBM1B9afj1/f9k/Nek24nI9bHWcnu/JI
v7Kn3+7og3sMqX8bH9rWVj+1rjP9Yfhw3Hjoyka6X24YxuwMHxCvRvUIw6Ll
8jd216meH4ZB1X8/WbeH+RuG3ZM/PLC2If/Kw9DUqClfXszuPQzRqpOCOrqp
X1sY2sriju45yPwPh1X18yNa9uQvNxxdUVuta6+yfYaDP8S/0+ob+csPR2bB
QfdFHpSvCEd/jyvDs727iT8cH976lW79zu41HOLySy633/0i/nDIKoeY/fzI
3n8EOh4ndWidpv1xI1DXcqPGz57dQwQked0XLCdSPj8CSbZut2cvZ78nEXiu
l/D86grSV94Tv1m2zvweu9cIKH6L2TlBlfbbFoHWK4d+9UkgPk4khpeOzJu8
h/RyI6H+b3JzDNh7jsSEoS+CY6wZfyQa5sXeGBnD7jsSItulE0ZUUv/ySCz7
nrR1ZzPpVUZClnLiuaMK6WmLRKcv/5d3HtVzojAuePsFT0e2/ygsDpmtCGlg
/FHYH1/2nvuJ9smPwr8DVo4NyWXvIwphA1+3TDUgf8qjMKnuSM5hNaY/CllR
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
webU30OCqq+9FFPus/cvgap6PzytZe9fgkZnuYEsleZTSHBuhkbj2WPUr0gC
zoLUlYEnab5yCSqmjPKKS2PvX4J7/JEVsSeY/p76lWbzNUuIv0kCzQHvDlqU
Mv8lMFbalLxVJ9wlwZqK9yeOi5j+dOT21TjSfJrieulYOcD/0bJG6s9Nx8L0
0RuSblF/Xjp29T40cMQaTdKfDvuxFx4jj7BHOhYYFmqeqKZ+/HR4z8n7Moxh
QTo8k/iDtPy1SH867houzzTzp/0XpaN4Zzlfh/GV9+BbM/LN/dj7T4fbJ4+U
UWsIK9MR3mtPZ387pj8dJhzf7q3lhNvS0TCrfc+PRqY/Hbz6Yb63RxPmZOCe
n/uYEC+aRy8D3on/nmqeRfXcDLTt73Do+z/9GXAyrT4nNmb6M7Auu0qyy472
6ZGBqoqogPVnmP4M2J7w6t++iuKCDFQ+Enc+vEFxRQb+fqb+zb438RdlwPRq
VT/da8z/DHzbrfJ97QLiq85A2bNJIzea9SP9GbCs/8c9ewD1a8rA8dVnK2u8
mf8ZmH71bg047P4zev5HU/GHiRHxcaR4bGNkanGV+S/FquMD8h3OEx9XisAT
Vx81V1A+Twqe9XWhVwXT35MvrQxq/cr8l+IjV/vJl0M0P18KceGaG97DtUm/
FEL/5O1jDxFWSFHzw0mXv5bdvxRDV/0aMsSf4uVS5C23bvhppEv6pfD2THz4
5DvxKaVYp1rxaI+U5muSImDq0pVVCwi3SdFaPT/dZ5sO6Zdi/B9vI9+E0P44
Mnx93SUQpRKfngwVb1O+5N6jeq4ME/rYDj/1iOI8Gbael1TcKyYMGXavnmYz
pJHyPWSY2U8Qvfgb0y/DtdgHp5Mv0fwCGRZUWvR2e0X8Chk0DvfRyOpm/svQ
+NsRh3mvCZfLYDK/QTzkCvNfhgeHLp1V72b3L0P8u3/uGNWRviYZulaEurz9
QP3bevS5KxrTnhLukiH0bZfvXSH148gxrfLD3+cMCevJMWdRv/qvS0kfV451
y/4yON2X+vPkaPQONtNopfkgh1s/98+JVyjuIUfZoziNgNukly9Hy4H+i7bd
IH6BHIldjYvFz/VIvxypC0oTb3cTX5EcvRYNU/k8kOLlPdj/Kj9lAvNfDrVV
uvba3oSVcmy1MZbd8GD65YD9HfOJ85l+OY6Gaht8amD65Qi5cXzZzhzi42TC
5Zl7w+AV/Ul/Jiq3TE+3LKP+3Ez4TTPihKsx/zNxcljebN414kMmeNPnLKn0
oXyPTNTNPKJ/YC3F+ZlYGnVin/4+0iPowV8GPz2qy/RnQsj9wSvjES7KxCGf
CVLFYOZ/JtYWbCxvTaV4dSZcK9dtzLtN8yozEaDh38elL+GmTCxu7fdC9wXN
05aJSbOr7tbeY/efiZ+bB5tnTKF+nCwUtK4oPXCc8vWy8LyhJT++P9OfhY2+
9nkOPwjzshBdOi7i31zaJ7KQ4bx9nLkp8z8LmVvbM/ePo/78LNQslhpYqTP9
WWg1cl968zDTnwXb5HPHc1yY/izkPd+3zmwE8z8LzmGOfFEJ8z8Lrzz0h1f0
Y/qz0P+1W8Z0IeU3ZUGl4qeXsz/htiwsL6v11RJSflcWVkSLl879RZiTjbA/
turJGZ9eNiytWwWTblKcmw21eWe27Gb+8bJhG7H+0/krFEc2Pido5r1ZTdgj
GxGXOytLpxLmZ+O1apfonYiwIBu/1MZH33MkrMhGYT+LR8PGEy7Kxtw/9YaW
VumT/mycDjO/G7eN4tXZCBZoabvKKK7Mhoe4jLc5inBTz3zFH8ME7B7asiEv
2LzBcC3Fu7LxZeTrgLHWhDk5+PbZtOHIQsJ6OVjZq0Xuk8z052Cb3YIB4Q4U
5+XgmPNrz8nvmf4cfDcf1n5KoIf/Aw7nKBk=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], FontFamily -> "Arial"], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], FontFamily -> "Arial"], 
         Line[CompressedData["
1:eJxV02lczHv/BvARhZTKdkjHmbIWkrU4DpckCjVaadGU9nVqmpqlpgnpZElC
yUlGSAqV7FtT1hINsm9jyVIkdayF+/6/7s/3wX+ezOs911xz/T4PxjQgxiVI
i8PhfOrG4fzf+/9ebbMjlpcX9mjsmE0f4P+7F1a6/VaW59VGNkRXH+0bXQM+
kgfg0cN9tcp1LB+Md+t/ROjmMpvA5/DglpF7mLlwVYsSTFTMZlgzuIT/TM08
AoPDz8bvecU8CkeKx25oes08Bo1zu181/cRsgeLKCmHIL+Zx6FroVzLRkD2f
JQ7eVVUUcpmt4LOHX7/HlHkiWg+u09UZxzwJ6Uciky9bM0/G0sciLfE85ikI
KbRpbeExT8X9rglPqr2Yp6H05H3vHcHM1jDT7jbeWMBsg/HiZK6NjHk6hM+u
XQxPY56BJbyqeV8ymf9E9tOwl53bmGfi+lwniwWFzH9hxlSvmmX7mWehY+QG
G+/DzLOhHaCRzT7LDPRSSG/9ukJWAC8P6U795w7L52Dx2APDs1+yfA701CY9
MttZbguP6/qpmzntlNtCK87g9x19yZy50KwL4W42YflcHDt76eZ4C5bbQWHp
p+ptw3I7FO3O769rz/J5WHBcWdPqyvJ5qHEfo33Ln+X2uN5LVVUcw3J7bCyB
+b1kls/HUfPhngbrWT4fFwJfXvHfzvIFkMta0iqKWb4AUz1qzuoeZ7kDrFp3
/oy7yHIHGGR29FHfYrkj+h98EDb3OcsdMVv4/PSlNpYvhPcQ3z68XyxfCOf9
fbgt+uz/tAh3Z+yck2VCViyC18YxSVZjWb4Ys7s+pLZMZ/li2AtbDQ4tYLkT
AhYWjhN5stwJGQecy+2CWe6M12cCb5uJWO4Mbu6RVKPVLOfh0pgnfjqbyeAh
aPtPp96F7Ps8VKxv3f5bBVnFw8CIX90mqFh/CQR6n67xGlh/CRrLDn2VPmH9
JXjn+t2x5D3rL8Ga0W9+a+5ifRcMSxW8tNT7l/oueOw3MyRjKFnhgolf6ppb
LcgqFzQ2K2P8ZpA5rpAebDN44MD6rrgUa7pv+TLWd8WoHTV72kJZ3xVRpydn
ZYpZ3w2n1SYjbP5mfTek5tz/3pLL+m6Y02JsuW8f67sh0fFWVdxx1ndHg/hS
tuNl1neHiDt41bi7rO+OD44he4a+Zn13eIaWb9X/wvoeGNPVJ8iw5yfqe2BS
Ec93wG9khQfmckZ+GzearPJAS+uGPp7WZI4nNtdeHLRhPut7Ql+79F6DJ+t7
olN+asSwUNb3RM8Xh4+Jxay/FAUN9Zee/s36S3GxR3Ff1zzWXwqDbJP1N/ez
/lLIqxfX+Z5i/WXQhMvHf6xj/WUYdWrDirUPWX8ZfDgtSTbvWH8Z5Hd82tq7
WN8LVz+e+u2k/mfqe2Fq2Dtp5jCywgs/c/oYxE0gq7zw7McaywCQOd7w/cv5
D78lrO+Ntb9Vvw0NYH1vTOLYaqUIWd8bzR0vlTtXs74PEs6uybi6lfV9sEzm
dUhnH+v7QN1UVul0gvV94JCjzlXWsr4vontolFoPWd8X/ZUT1MJ3rO+LWS1V
Jz7+YH1frP/yzjbZ4Av1l2Nh5re9A0zJWA6LQG3345PIiuUwVu/+FG5HVi3H
2NqgLWM9WN8PU7LX+H0JYX0/3K/90U0lYX0/mKKqpmAd6/thz+17w9N2sD4f
47vp90stI3P5WD/KvFBRzX6Pjx9ZdwIzbpH5fCwU5fTb2cR+n49qs+IbtV/I
Sj5KN+BxV++vtMfHC8Ejp2kmZA0fbzZ8+xRvSeb4w/eAHv8cyFx/LB5ZtYrr
SoY/eh4O99scROb7448FwkB9MVnhj1PqilWb1pKV/pAPyrswaQfb94eDT/iu
12Vs3x+NXoO0jtSw/QC4VjpVZ9xm+wGQ2tgfiH7D9gMQWpE+OKCT7QegU2E7
KrzvN9oPgOep6darTMnKAPRMH3qtZApZFYD5cy4MeDyfrAmAg5Pp+mHeZM4K
3LpyryokmsxdgfddfXOrUslYgQWbn90cvpXMX4Gp9eYTs4vZ/gr82hE1wOgM
21+BTeKGn7sb2P4KLDN59N72BdtfgRUyvV0fP7P9QAy6czq9Uvc77Qfi7sMM
2aphZARijWrg99BJZH4g2r4sv+5rT1YE4uCX4acCvMjKQPyu9/WoKJqsCsT4
lBdNeSvJmkAYjucb1uWQOUGYP8LtTc9Sth+E20Gdz12r2H4QzAfZ61XcYvtB
eNucOmTYG7YfhOYb/RPyu9h+EJ7V9++yMOqk/SA4R3Dn1Y8ka4LgVNP/Q/IM
MicYvwbOuTLbmcwNhtx6d6FRIBnBcCgNcewQk/nBqJg1XvflBrIiGMF7PO6/
LCQrg2EUJz3/73G2Hwx964ZTA66x/WAszllubPec7Ycgrt/jlFVf2H4IbE7U
X1HrddF+CGqK85wnmpH5Idi3v3T0LmuyIgR9IoKlZovJyhAMOfJXamUAWRWC
8zEndruLyZoQHF8ludgrk8wJxSgbVUr9bjI3FEtH2y3ZeZLth+LF+I3PVjaw
/VD4rYs7EtfE9kPRKuf8iO1k+6H4Hr57W5rRD9oPxfNHXVf2jyZrQhHd6Drl
2V9kThhGNbWkjXEjc8MwzanyW0o4GWEYMdrwwWsFmR+GpxMyvP1yyYowNLWu
nNF8kKwMw/agY2fWXGD7YTB49WPxlIdsPwx/fT1779+PbD8cvQ4NS7zc6yft
hyOra2lN6R9khENvcEeLchqZH470G746+xaTFeHIe+p3oCqQrAzHKp0ZTW9l
ZFU4Nn2S3B65mawJx0b7h2uFJWROBCIlz97frGb7EajFXnO7+2w/AkHZPxZc
bmP7/7V8l51Pr1+0H4EKWcRNLS5ZGYEHOyIMT1uTVRHQ7XvdO82ZrIlA+PZj
VgEhZE4kYDUzaUkKmRuJ4IVbfrrkkhGJOfXHDgaXkfmRsB2/sXT9ZbYfiXpO
05iLT9l+JHbtD9Ay/Mr2I3HN7Wr5tF4c/G8/ElkHi/ZHDyBzorAofei/ZVwy
Nwp9lods/D6OjCjMcGxLc5pO5kdhlpHgRek8siIKhbONEvq5kJVRGDZ24O6V
y8mqKNiH39fuCmf7UdAZe88gJZHtR2NJumVJn9VsPxqcafFXd2Wx/WhEBV3M
nLOD7Uejw2jl2+b9bD8aI9+0dC84xvajUXzzcZXXebYfjUfzpNNM1Ww/Ggbj
7MM+PmL7MQh3+25+9S3bj0Fq+bEdhz6z/Rhc/qdQJ797N9qPQXXQBevNhmRF
DPL/+eG75XeyMgbe9m0+Oy3Iqhh0G/sw7og1WROD24ferLxlR+YIcKa+c1PX
ErKhADN0O3ZM8CNzBWh9NLU8MpJsJcDTBfo7KiVkCNC91PNcj3QyTwBRycxP
flvY8wogf5wXfXEXWSBATvo9u6ll7PkFUBb5u5SdIWcJcErksG1yHbtHgLd+
a7k1d8nlAmSbfevp3cTuE+D+zSLHn+1ktQA2Wv6aUo4W3SvACbMpt1b0JbcJ
MHmWd79RJmROLGaPm/2r3ZxsGItvKS7+ddZkbiz+8Z3hcmAe2SoW1dUZp7e5
khGLzs11Pzb6k3mxOGD6vWlTDJkfi6bFZ0MKksmCWBRNOZx0dB1ZEQvjjB42
d/PIWbEQ+vFudC8mK2PxS5ay6M9j5PJYjNq4Lyz5AlkVi9NaJs51N8nqWIyT
Lx1v9ozdHwuDiU1D0j6w+2Ph/EHV1f6D3R+Hjyke9yL0utP9cTioM/bWB2My
Nw5D2o80ys3JVnHw4FcdH2xDRhwiHN9FnLUn8+Lgkr7WM8qdzI/D1eTDNWMC
yYI4rHxfIf8QR1bEwSZ8gKw6lZwVhyn7nz4tyCIr46DWts1N30kuj4O7/au9
skNkVRwOFR0wk50lq+PgfLX2W1o9WROHm4Yt5vkPyW1x6OPQv+NsM5kjxCCD
zpkt39j9QqxaWWE6oncPul+IWS/ubw0dTLYSYrj0WfmJ0WQIYdtwRjzAmsz7
ry/r/ZTZk/lCOBboWn5wJwuEcEgLHBIdRFYIsbPG8/jXeHKWECW+xvM3riYr
hRiqd/3sxC3kciH+dbHtfLqbrBJipOZ+e14lWS3EIlnOLb/zZI0QuUcG3Jx4
i9wmRKXFvRMGL8iceJjXW0Z9aycbxuP7o4sGH7S06f54nM78o7OtH9kqHhkV
1aN+mZERj/7S/MIhk8m8eOgKwrdiLpkfj+bBH7rFu5IF8fB4/fxz5QqyIh5m
iufunHhyVjz+MHXAstVkZTz4c0PXnttCLo9HbJqxn9VesioeLurGq4eOktXx
GPLE9uL0S2RNPNpM7CbduENui0f6+WK+6DWZI8KJ0QYzR30lG4owItPn6ote
OnS/CA0Px40+NIRsJcLrK/nuaRZkiHBy1JqlYX+SeSI83LZ5nNciMl8EeVzB
W09fskCEBwcHbgqIJitEaH2lN1maQs4S4cLfOq8KsshKEd49WVCk3kUuFyHj
uLfcoJKsEsF8E0fofYGsFuHKXK2cI7fJGhEufr793vg1uU0EbpUoOfMrmZMA
Fx2XFQa6Pen+BHjm25TtGErmJuB+Zwlv+niyVQJ8avICns8iIwGL+m1u3cYj
8xKgv1X8zSeAzE9AumrXBst4siABtppRZfpryIoEWMzfO/97LjkrAWnGcxL+
3U9WJuDNusuhXafJ5Ql4nXnKqt91sioBBs7Py6dqyOoEvPxXpyO4naxJwHmX
JL2iHr3o/gRYFUcP6hhE5iSiW36MkZM52TARmUWJQ47/SeYm4tjd9+MtnchW
iUgdtta2kk9GIsIHWkbaC8m8RGx0CrzzOo3MT4TFiieK3G1kQSKErbND3UvJ
ikR01HXLNT1HzkrEyu0Tfu9Sk5WJGPh90OeXL8jlicg2vG356DNZlYjLfffX
Puvdm+5PhMcZ7YZPJmRNIkrdumYNtiK3JaKg0WKkw1wyR4w180sK//YgG4oR
2Tiy4k4YmStGyrvOXZOTyVZi1ImODt+ZRYYY8x9umj9kD5knxpXiEpfC42S+
GB2PsqxnXCULxOgqrvqoeUJWiGG8aq0yp52cJcbI6hhrbx1dul8MG2fXX5bG
5HIxjAySnhhZklVifHGd8767LVktRmC/ZWJtD7JGjFM5mwwGhZPbxJhUZ3Fm
qpzMkWDhoCD3wGyyoQSLpLahhUVkrgRrePplH06RrSQo+uqSuKiBDAny9E+8
PvGCzJPAq7j91ZSvZL4E86Rf/lbp9aH7JXD7K/uAtylZIUHdpJpSnWnkLAkc
3k8oqHYkKyVYd+Oo/no/crkEpWUfpcHxZJUE/Yf1tF6SQVZLsMra4/7CArJG
gleLeGKPSnKbBPUDLxjHXiFzpAiaPntQ/mOyoRQezTlL7raTuVKsNay4YNZL
j+6XIr1sjED+OxlSLB/pG9M8icyTQrisz5XgBWS+FPtcHkg6fMkCKdxmXhRk
CckKKcY9PjlwVgY5S4p70Ud5XQVkpRReH70GXT1CLpcipKR/bEkdWSUFf5+t
93YNWS3Fl9zzhds/kzVSHPc7e7tUT5/ul2K/XvS7a2Zkjgz9pgk/cKaTDWVY
fWHQATtnMlcG+6qaoXlBZCsZBji5yX/KyJCB4/aiuyibzJMhbaldalcxmS/D
mahjjluryAIZrp/okM++Q1bIYHpjeuf3d+QsGVY9KTe60r0v3S/DFZ11kiJj
crkMYQYzo3MmklUyBAdImnMXkNUyuLmv+V7iR9b893mjUnY2JJDbZJjr9OCB
diaZk4SdX86dXbyXbJiEkVWNc/adIXOTwL1ue6lfI9kqCQuX2lpktZCRBPcc
q6V/dDeg+5NgozIWq4zJ/CQsMDicL5xEFiTBKu9rrY0jWZGE+hhTC8MAclYS
BN7K098kZGUSUvpvWf9pE7k8CbWr5ZLuJWRVEuK7ra0dXkNWJ8ElTy/f4wFZ
k4Rze7e/+aed3JaEjwM33pdoG9L9ybjsWaRVZkQ2TMbrZVLJ+9/J3GTkFYnm
TrUgWyWjMSw1aM00MpKBfrVvNLZkXjKW/bpea+dM5icjtHlt38PeZEEySsMz
a8eEkhXJGDMk51dxPDkrGQ33W6smpZKVyajw/9nn0gZyeTKa6ke9CdhOViUj
yVLPo/c+sjoZw6odok9WkjXJ6HburKVQRW5LBrf71vxp19j9cgieDLze/QG7
Xw6Z3YSGB6/Y/XIcy0jJOt3B7pdjKHfauCKOEd0vx9S90fnb9ck8OQaKkju2
GZP5cvjvCZq6azRZIId2nVZw5RSyQg7b5e6ZDXPIWXK8mvPnkU9OZKUcDQFj
n4z0IZfLYbkyw4QfRlbJ0ZndW7AngayWI3vg38/bV5E1cux5o5Qs3ERuk6O/
fuifhwrInBS8EhZYDT1ANkyB+2BdfvZJMjcFo03L1f0vk61SMNhcuH5nI7s/
BeKnwXlTn7P7U3CzcQbnzgcj/AfexFZx
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 501.}, {0, 4.668564260978264}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {FontFamily -> "Arial"}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], FontFamily -> "Arial"], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], FontFamily -> "Arial"], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], FontFamily -> "Arial"]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 501.}, {0, 4.668564260978264}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.935535971025385*^9, 3.935535978441566*^9}, 
   3.935536213367756*^9, {3.935536268262925*^9, 3.935536321289462*^9}, {
   3.935536370455162*^9, 3.935536384505486*^9}, {3.935536479410656*^9, 
   3.935536492118058*^9}, {3.9355366610465927`*^9, 3.935536671003935*^9}, 
   3.935536702260721*^9, {3.935536738075897*^9, 3.935536784855974*^9}, 
   3.93553685757694*^9, 3.935538355230604*^9, 3.93553858889954*^9, 
   3.935539742555255*^9, 3.935750536807416*^9, {3.935757542546994*^9, 
   3.935757574364697*^9}, 3.935757631071615*^9, 3.935758027520055*^9, {
   3.9357580631761913`*^9, 3.935758078908649*^9}, {3.93575827703053*^9, 
   3.935758299963273*^9}},
 CellLabel->"Out[192]=",
 CellID->1372384976,ExpressionUUID->"0a35504a-f7e7-4374-8c08-e1ce26ffec45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnscentedKalmanFilter`UKFFilter", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], ",", " ", 
    "testData", ",", " ", "testSystemDef"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "2", ",", "2"}], "]"}], 
  "]"}]], "VerificationTest",
 CellChangeTimes->{{3.93553889936306*^9, 3.935538908278853*^9}, 
   3.935539013189159*^9, 3.935539578976924*^9, 3.9355399425866528`*^9, 
   3.9355399798539953`*^9, 3.935750483678405*^9, {3.9357565944290333`*^9, 
   3.9357565948438253`*^9}, {3.9357583190275*^9, 3.935758319052226*^9}},
 CellLabel->"In[194]:=",
 CellID->2046461575,ExpressionUUID->"911501c3-0772-4e46-808a-a959bcbf6fc0"],

Cell[BoxData["0.003`"], "ExpectedOutput",
 CellChangeTimes->{{3.93553890214363*^9, 3.935538937920991*^9}},
 CellID->1634455885,ExpressionUUID->"1dbbd2d1-8fe4-424d-b54e-fc22d2f8688d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"SameTest", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"#1", "-", "#2"}], "]"}], "<", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}], "&"}], ")"}]}], "}"}]], "TestOptions",
 CellChangeTimes->{{3.935538941387825*^9, 3.935538994681554*^9}, {
  3.9355395974983387`*^9, 3.935539597684935*^9}, {3.935539629594976*^9, 
  3.935539654816725*^9}},
 CellID->1436148610,ExpressionUUID->"b9da6258-8f84-474a-b549-106c83e94208"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t17qdoo1mm1bqm\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t17qdoo1mm1bqm\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"0.00297193202845845`\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"0.00297193202845845`\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"0.003`\\\", Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"0.003`\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.09198900000000165`\\\",\
 \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.09198900000000165`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->884486057,ExpressionUUID->"b9485454-9e3a-441a-95e7-2c984400defc"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->675355465,ExpressionUUID->"23dc92d9-171e-4a79-b9ab-300f70287a8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnscentedKalmanFilter`UKFSmoother", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "}"}], ",", " ", 
    "testData", ",", " ", "testSystemDef"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]], "VerificationTest",
 CellChangeTimes->{{3.93553889936306*^9, 3.935538908278853*^9}, 
   3.935539013189159*^9, 3.935539578976924*^9, {3.935539680218718*^9, 
   3.935539686215447*^9}, 3.9355399492192497`*^9, 3.9357504836805563`*^9, {
   3.935758323725895*^9, 3.935758329870636*^9}},
 CellLabel->"In[196]:=",
 CellID->1070350315,ExpressionUUID->"f748d962-e01f-41ee-920e-5d1e3f6ee5d2"],

Cell[BoxData["0.003`"], "ExpectedOutput",
 CellChangeTimes->{{3.93553890214363*^9, 3.935538937920991*^9}},
 CellID->2054716933,ExpressionUUID->"66c05c53-da56-4a83-b5a3-42ea81ae5081"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"SameTest", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"#1", "-", "#2"}], "]"}], "<", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}], "&"}], ")"}]}], "}"}]], "TestOptions",
 CellChangeTimes->{{3.935538941387825*^9, 3.935538994681554*^9}, {
  3.9355395974983387`*^9, 3.935539597684935*^9}, {3.935539629594976*^9, 
  3.935539654816725*^9}},
 CellID->2090449171,ExpressionUUID->"2d0eeb3c-953a-4c94-8710-14491bd19406"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{56.8203125, {0.177734375, 10.1923828125}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{16., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{32.79296875, {0.1806640625, 7.2412109375}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"t18nwhvicksrie\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"t18nwhvicksrie\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"0.0029719320284584683`\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"0.0029719320284584683`\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"0.003`\\\", Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"0.003`\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.15707800000000027`\\\",\
 \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, \
3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.15707800000000027`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1677839969,ExpressionUUID->"9d3c896f-ff2e-4ae1-acd1-19d36040dec2"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    80.77823413085937, {2.07861328125, 8.1748046875}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              119.97823413085938`, {9.143798828125, 16.856201171875}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{12., {2.143798828125, 9.856201171875}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    68.65836108398437, {1.96044921875, 8.56689453125}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  107.85836108398438`, {9.143798828125, 16.856201171875}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{15., {3.643798828125, 11.356201171875}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  33.153076171875, {0.12890625, 7.75048828125}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         75.35307617187499, {9.143798828125, 16.856201171875}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->848590226,ExpressionUUID->"de400c65-f823-4025-9cc8-e9f537b01e68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application Tests", "Subsection",
 CellChangeTimes->{{3.935750632358568*^9, 3.93575064586963*^9}},
 CellID->1363899293,ExpressionUUID->"03a88ce3-e124-40e2-8691-4be0fe2be71d"],

Cell[CellGroupData[{

Cell["Simple Spring & Mass", "Subsubsection",
 CellChangeTimes->{{3.9357506491247168`*^9, 3.935750654909089*^9}, {
  3.93575072397407*^9, 3.935750737646573*^9}, {3.9357513900494347`*^9, 
  3.935751391307458*^9}},
 CellID->231966182,ExpressionUUID->"085b23ac-b2c7-460b-a955-0af94282970b"],

Cell["\<\
Test if we can module and estimate the parameters of a simple mass on a spring\
\>", "Text",
 CellChangeTimes->{{3.9357506987591057`*^9, 3.935750748580591*^9}},
 CellID->1033421422,ExpressionUUID->"3216496a-8577-4259-9ebf-45f3cb893021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shmModel", " ", "=", " ", 
  RowBox[{"SystemModel", "[", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Modelica.Mechanics.Translational.Examples.Oscillator\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{"\"\<ParameterValues\>\"", " ", "->", " ", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         TemplateBox[{"\"mass1.m\"", "\"Mass\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
            "TextStyling"]& )], " ", "->", " ", 
         TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
          "Quantity"]}], ",", "\[IndentingNewLine]", " ", 
        RowBox[{
         TemplateBox[{"\"spring1.c\"", "\"SpringConstant\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " spring constant"}], TooltipStyle -> 
            "TextStyling"]& )], " ", "->", " ", 
         TemplateBox[{
           RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"2", " ", "\[Pi]"}], ")"}], "2"], " ", "1"}], 
           
           RowBox[{"\"N\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
              "\"m\""}], "newton per meter", 
           FractionBox["\"Newtons\"", "\"Meters\""]},
          "Quantity"]}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         TemplateBox[{"\"sine1.amplitude\"", 
           RowBox[{"IndependentPhysicalQuantity", "[", "\"\"", "]"}]},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " "}], TooltipStyle -> 
            "TextStyling"]& )], "->", "0"}], ",", " ", 
        RowBox[{
         TemplateBox[{"\"spring1.s_rel0\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], "->", " ", "0"}], ",", " ", 
        RowBox[{"\"\<mass1.L\>\"", "->", "0"}], ",", " ", 
        RowBox[{
         TemplateBox[{"\"fixed1.s0\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], " ", "->", " ", "0"}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "|>"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935751376394553*^9, 3.935751423670105*^9}, {
  3.9357514589047203`*^9, 3.935751479649811*^9}, {3.935751551801455*^9, 
  3.9357515806882143`*^9}, {3.935751756957321*^9, 3.935751815134769*^9}, {
  3.935751971744109*^9, 3.9357519825078917`*^9}, {3.935752028090068*^9, 
  3.935752064283637*^9}, {3.93575211988365*^9, 3.9357521199144*^9}, {
  3.935752516723447*^9, 3.93575251679422*^9}, {3.93575254896894*^9, 
  3.935752575692563*^9}, {3.935752653628848*^9, 3.93575276970402*^9}},
 CellLabel->"In[197]:=",
 CellID->1269732434,ExpressionUUID->"5abb30dc-cb06-4fbf-a906-9930b235ffb4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   TooltipBox[
    DynamicModuleBox[{WSM`Typeset`PackagePrivate`p$87513 = {
      InsetBox[
       GraphicsBox[{{{}}, {{{}}, 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{0., 30.}, {20., 30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 
            0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             
             LineBox[{{20., -40.}, {10., -40.}, {10., -20.}, {
              20., -20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             
             LineBox[{{0., -30.}, {10., -30.}, {10., -40.}, {
              20., -40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             
             LineBox[{{40., -20.}, {50., -20.}, {50., -40.}, {
              40., -40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 0, 
               Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{-79., 30.}, {-62., 30.}}]]}, {{{1., 0.}, {0., 1.}}, {
            0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 0, 
               Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{-79., -30.}, {-62., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {
            0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{40., 30.}, {70., 30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 
            0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{-40., -30.}, {-20., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {
            0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             LineBox[{{-40., 30.}, {-20., 30.}}]]}, {{{1., 0.}, {0., 1.}}, {
            0., 0.}}], 
          GeometricTransformationBox[{
            JoinForm["Round"], 
            CapForm["Butt"], 
            RGBColor[
             NCache[{0, 
               Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
            Dashing[{}], 
            AbsoluteThickness[1], 
            Arrowheads[{}], 
            ArrowBox[
             
             LineBox[{{40., -40.}, {50., -40.}, {50., -30.}, {
              70., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {{}, 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-100., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{
                    EdgeForm[None], 
                    InsetBox[
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    SurfaceAppearance[
                    "GradientFilling", "GradientColorCount" -> 21, 
                    "GradientType" -> 1, "GradientColorSpace" -> 0, 
                    "GradientOrigin" -> {0.5, 0.5}, 
                    "GradientRadii" -> {0.5, 0.5}, "GradientSpace" -> 0, 
                    "GradientSpreadMethod" -> 0, 
                    "Arguments" -> {
                    "RadialGradientFilling", {0., 0.07845909572784494, 
                    0.15643446504023087`, 0.23344536385590542`, 
                    0.3090169943749474, 0.3826834323650898, 
                    0.4539904997395468, 0.5224985647159488, 
                    0.5877852522924731, 0.6494480483301837, 
                    0.7071067811865475, 0.760405965600031, 0.8090169943749475,
                     0.8526401643540922, 0.8910065241883679, 
                    0.9238795325112867, 0.9510565162951535, 
                    0.9723699203976767, 0.9876883405951378, 0.996917333733128,
                     1.} -> {
                    RGBColor[
                    0.6274509803921569, 0.8431372549019608, 
                    0.6274509803921569], 
                    RGBColor[
                    0.6255167584207861, 0.8420734328177069, 
                    0.6255167584207861], 
                    RGBColor[
                    0.6197260176283217, 0.8388885253818514, 
                    0.6197260176283217], 
                    RGBColor[
                    0.6101144598573657, 0.8336021686078257, 
                    0.6101144598573657], 
                    RGBColor[
                    0.5967413435577433, 0.8262469546430333, 
                    0.5967413435577433], 
                    RGBColor[
                    0.5796891184384544, 0.8168682308274244, 
                    0.5796891184384544], 
                    RGBColor[
                    0.5590629171377994, 0.8055238201120642, 
                    0.5590629171377994], 
                    RGBColor[
                    0.5349899070457049, 0.7922836645614122, 
                    0.5349899070457049], 
                    RGBColor[
                    0.5076185062744768, 0.7772293941372368, 
                    0.5076185062744768], 
                    RGBColor[
                    0.4771174686117841, 0.7604538234227558, 
                    0.4771174686117841], 
                    RGBColor[
                    0.4436748430974416, 0.7420603793898674, 
                    0.4436748430974416], 
                    RGBColor[
                    0.40749681463854653`, 0.7221624637374751, 
                    0.40749681463854653`], 
                    RGBColor[
                    0.3688064328109635, 0.7008827537323044, 
                    0.3688064328109635], 
                    RGBColor[
                    0.32784223668451695`, 0.6783524458627588, 
                    0.32784223668451695`], 
                    RGBColor[
                    0.2848567841503039, 0.6547104469689417, 
                    0.2848567841503039], 
                    RGBColor[
                    0.24011509481731125`, 0.6301025178357957, 
                    0.24011509481731125`], 
                    RGBColor[
                    0.19389301607839837`, 0.6046803745293936, 
                    0.19389301607839837`], 
                    RGBColor[
                    0.14647552241939155`, 0.5786007530169399, 
                    0.14647552241939155`], 
                    RGBColor[
                    0.09815495845661548, 0.552024442837413, 
                    0.09815495845661548], 
                    RGBColor[
                    0.04922923653511846, 0.5251152957805897, 
                    0.04922923653511846], 
                    RGBColor[
                    1.1102230246251565`*^-16, 0.4980392156862746, 
                    1.1102230246251565`*^-16]}, {{0.5, 0.5}, {0.5, 0.5}}, 
                    "Fixed"}, 
                    Texture[CompressedData["
1:eJx10n1IU1EcxvFtrRFFQ9O1QAxDMZq2LRXCTE/RXJpkYIklIUtRkxz2MglC
CfMFlGVShqEVhqmzFzPQ0ijNETJSs2zkFjXd7t3crrWNNUkcVMv6nbCDBw5f
Hj5/Xe7ZkluSkb+KxWKx/Vfkv1z/DV46NPIt/j4Mgs1aOm60qG7oT+DSSL7W
6NvnYfAGd8bJNaN6CnVE9gxFGxi8wQ85y7T8GgpxzlWoTA8YvMGj1x89WLGJ
QrqGINWt0wze4NdTH+94q7YgztlAgy6cwRtcWixlpigzSlpwU8YRB97gz86k
b23bbEYbU+qT87IdeIOn5RaJipJmEMvWtT1g2v5v//VkJadPWGtCUvbTvW2Z
drzBBZkHoqLyPyGX4u7J+cFZvMGNUl61MvgjWvhQpfKGzOINXnXFlFbTPIWa
62Lv31Ha8Ab3PIxl5/j06KpaJg3os+IN/nrND48wYRIN39Bm5H2j8QafFGgL
hc/foLriwuGxbTTe4NwT5RVl73TogiJCU3eMwhu8N2vXi74hLSrQegeslRa8
wffMXXJ3hw2gJ7UbRJJ7ZrzBe0aNgdfiulBW/MumwfEZvMH/tHW3eXrp4L3c
VzpulFofH2MV9BIFLz2sKVzHe0UUfMzX2F5rHieK369DstM18p4oeF5Xd4el
3EAUnG2SRYn5n4mC3xTP29P7Z4iC52SXcsMnLETBnU6WfL+OJoq/L+Fiwe1W
G1HwYFcineR/1/8XXONtajlPOYji/7+6nadPmSMKroxODA2r/EIUXH45ZuJU
w1ei4D+PyIL4JU6i4BMh36s7Q11EwY/TksaIFhdR8EeKSPGQzUV0+ftbub8A
9WcOMw==
                    "]]], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0]}, Frame -> False, 
                    PlotRange -> {{-55., 56.}, {-30., 30.}}], {0, 0}, {0, 
                    0}, {111., 60.}]}, {0., 0.}], {}}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 65.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {15., 115.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 65.}, {0., 65.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-10., 30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-9., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "mass1"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-98., 0.}, {-60., 0.}, {-44., -30.}, {-16., 
                    30.}, {14., -30.}, {44., 30.}, {60., 0.}, {100., 
                    0.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {30., 30.}], {{{0.1, 0.}, {0., 
               0.1}}, {27., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "spring1"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., -40.}, {80., -40.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{80., -40.}, {40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{40., -40.}, {0., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {-40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-40., -40.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {0., -10.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -110.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-160., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -110.}, {0., -110.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {0., 0.}], {{{0.1, 
                    0.}, {0., -0.1}}, {0., 
                    0.}}], {{{-1., -1.2246467991473532`*^-16}, {
                    1.2246467991473532`*^-16, -1.}}, {0., 0.}}]}}}, {0., 
                0.}], {70., 30.}], {{{0.1, 0.}, {0., 0.1}}, {63., 27.}}], {{{
              1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "fixed1"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-50., -120.}, {-30., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -120.}, {-10., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-10., -120.}, {10., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{10., -120.}, {30., -100.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -100.}, {30., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}]}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -60.}, {0., -101.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{-100., 10.}, {20., 10.}, {20., 41.}, {90., 
                    0.}, {20., -41.}, {20., -10.}, {-100., -10.}, {-100., 
                    10.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {-115., -47.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.16428571428571428`]}]}, 
                    PlotRange -> {{-150., -80.}, {-62., -32.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> 
                    None], {-115., -47.}, {-115., -47.}, {70., -30.}, {{1, 
                    0}, {0, 1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 
                    0}, {0, 1}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{
                    50., -54.}, {-30., -54.}, {-30., -46.}, {-60., -60.}, \
{-30., -74.}, {-30., -66.}, {50., -66.}, {50., -54.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], {}}, 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {-120., 0.}], {{{0.2, 0.}, {
                    0., 0.2}}, {-96., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-50., 30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-45., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "force1"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., 68.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    
                    PolygonBox[{{-80., 90.}, {-88., 68.}, {-72., 68.}, {-80., 
                    90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {68., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    PolygonBox[{{90., 0.}, {68., 8.}, {68., -8.}, {90., 0.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxdUj1LA0EUPKztYiOCKGqIqEW8REMguolJLh+XeLebRrASTCX4A2zSaBWw
E2IlCFZik0asFgurs7K1iE0aGyHYiIV3O6OiD45jdt7Mm7t9s3uHcn/Msqxk
+ERvVEtbf+oXt6M6k/q8F9ZkUjwGYS37xHlh+LKnU3ZYTyVhRLqpTV+3Bj7e
gN+gAX23Dn3PQ/9MDfyFLyIbu1/RRnclRdQeuA7wmoLfsAT8oKDvFLXpe1YC
uba08RkpYXL18+C7CvNdAX2cep1Dnqqkfxb5D3z6ZeA351GfBu43yK/y+6rg
gxXox8viaOLGeblbQL8SQt5OH7/6U8B2WiR2T+/fEx+bJqcd4/k8fTaQs72E
nKIIXzfJuVXM7aSAey5zrUM/7pHPgl/0qc/x3iT6YwL+b5L9efopzB8WmEdR
XxTfe4L/W+K9Ke6FA/829ScV8JecN6pCP+Ae7dThf8282kX/qEm+ybx16reZ
z0GeT+6RVeDeSubNEPPegwRxS/zb9x/8BZixLmQ=
                    "], SplineDegree -> 2]]}, {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {3., -132.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-197., 203.}, {-182., -82.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    3., -132.}, {3., -132.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{{}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {110., 0.}], {{{0.1, 0.}, {0.,
                     0.1}}, {99., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-90., 30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-81., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "sine1"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-100., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{
                    EdgeForm[None], 
                    InsetBox[
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    SurfaceAppearance[
                    "GradientFilling", "GradientColorCount" -> 21, 
                    "GradientType" -> 1, "GradientColorSpace" -> 0, 
                    "GradientOrigin" -> {0.5, 0.5}, 
                    "GradientRadii" -> {0.5, 0.5}, "GradientSpace" -> 0, 
                    "GradientSpreadMethod" -> 0, 
                    "Arguments" -> {
                    "RadialGradientFilling", {0., 0.07845909572784494, 
                    0.15643446504023087`, 0.23344536385590542`, 
                    0.3090169943749474, 0.3826834323650898, 
                    0.4539904997395468, 0.5224985647159488, 
                    0.5877852522924731, 0.6494480483301837, 
                    0.7071067811865475, 0.760405965600031, 0.8090169943749475,
                     0.8526401643540922, 0.8910065241883679, 
                    0.9238795325112867, 0.9510565162951535, 
                    0.9723699203976767, 0.9876883405951378, 0.996917333733128,
                     1.} -> {
                    RGBColor[
                    0.6274509803921569, 0.8431372549019608, 
                    0.6274509803921569], 
                    RGBColor[
                    0.6255167584207861, 0.8420734328177069, 
                    0.6255167584207861], 
                    RGBColor[
                    0.6197260176283217, 0.8388885253818514, 
                    0.6197260176283217], 
                    RGBColor[
                    0.6101144598573657, 0.8336021686078257, 
                    0.6101144598573657], 
                    RGBColor[
                    0.5967413435577433, 0.8262469546430333, 
                    0.5967413435577433], 
                    RGBColor[
                    0.5796891184384544, 0.8168682308274244, 
                    0.5796891184384544], 
                    RGBColor[
                    0.5590629171377994, 0.8055238201120642, 
                    0.5590629171377994], 
                    RGBColor[
                    0.5349899070457049, 0.7922836645614122, 
                    0.5349899070457049], 
                    RGBColor[
                    0.5076185062744768, 0.7772293941372368, 
                    0.5076185062744768], 
                    RGBColor[
                    0.4771174686117841, 0.7604538234227558, 
                    0.4771174686117841], 
                    RGBColor[
                    0.4436748430974416, 0.7420603793898674, 
                    0.4436748430974416], 
                    RGBColor[
                    0.40749681463854653`, 0.7221624637374751, 
                    0.40749681463854653`], 
                    RGBColor[
                    0.3688064328109635, 0.7008827537323044, 
                    0.3688064328109635], 
                    RGBColor[
                    0.32784223668451695`, 0.6783524458627588, 
                    0.32784223668451695`], 
                    RGBColor[
                    0.2848567841503039, 0.6547104469689417, 
                    0.2848567841503039], 
                    RGBColor[
                    0.24011509481731125`, 0.6301025178357957, 
                    0.24011509481731125`], 
                    RGBColor[
                    0.19389301607839837`, 0.6046803745293936, 
                    0.19389301607839837`], 
                    RGBColor[
                    0.14647552241939155`, 0.5786007530169399, 
                    0.14647552241939155`], 
                    RGBColor[
                    0.09815495845661548, 0.552024442837413, 
                    0.09815495845661548], 
                    RGBColor[
                    0.04922923653511846, 0.5251152957805897, 
                    0.04922923653511846], 
                    RGBColor[
                    1.1102230246251565`*^-16, 0.4980392156862746, 
                    1.1102230246251565`*^-16]}, {{0.5, 0.5}, {0.5, 0.5}}, 
                    "Fixed"}, 
                    Texture[CompressedData["
1:eJx10n1IU1EcxvFtrRFFQ9O1QAxDMZq2LRXCTE/RXJpkYIklIUtRkxz2MglC
CfMFlGVShqEVhqmzFzPQ0ijNETJSs2zkFjXd7t3crrWNNUkcVMv6nbCDBw5f
Hj5/Xe7ZkluSkb+KxWKx/Vfkv1z/DV46NPIt/j4Mgs1aOm60qG7oT+DSSL7W
6NvnYfAGd8bJNaN6CnVE9gxFGxi8wQ85y7T8GgpxzlWoTA8YvMGj1x89WLGJ
QrqGINWt0wze4NdTH+94q7YgztlAgy6cwRtcWixlpigzSlpwU8YRB97gz86k
b23bbEYbU+qT87IdeIOn5RaJipJmEMvWtT1g2v5v//VkJadPWGtCUvbTvW2Z
drzBBZkHoqLyPyGX4u7J+cFZvMGNUl61MvgjWvhQpfKGzOINXnXFlFbTPIWa
62Lv31Ha8Ab3PIxl5/j06KpaJg3os+IN/nrND48wYRIN39Bm5H2j8QafFGgL
hc/foLriwuGxbTTe4NwT5RVl73TogiJCU3eMwhu8N2vXi74hLSrQegeslRa8
wffMXXJ3hw2gJ7UbRJJ7ZrzBe0aNgdfiulBW/MumwfEZvMH/tHW3eXrp4L3c
VzpulFofH2MV9BIFLz2sKVzHe0UUfMzX2F5rHieK369DstM18p4oeF5Xd4el
3EAUnG2SRYn5n4mC3xTP29P7Z4iC52SXcsMnLETBnU6WfL+OJoq/L+Fiwe1W
G1HwYFcineR/1/8XXONtajlPOYji/7+6nadPmSMKroxODA2r/EIUXH45ZuJU
w1ei4D+PyIL4JU6i4BMh36s7Q11EwY/TksaIFhdR8EeKSPGQzUV0+ftbub8A
9WcOMw==
                    "]]], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0]}, Frame -> False, 
                    PlotRange -> {{-55., 56.}, {-30., 30.}}], {0, 0}, {0, 
                    0}, {111., 60.}]}, {0., 0.}], {}}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 65.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {15., 115.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 65.}, {0., 65.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-10., -30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-9., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "mass2"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-98., 0.}, {-60., 0.}, {-44., -30.}, {-16., 
                    30.}, {14., -30.}, {44., 30.}, {60., 0.}, {100., 
                    0.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {30., -40.}], {{{0.1, 0.}, {0., 
               0.1}}, {27., -36.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "spring2"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., -40.}, {80., -40.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{80., -40.}, {40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{40., -40.}, {0., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {-40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-40., -40.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {0., -10.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -110.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-160., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -110.}, {0., -110.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {0., 0.}], {{{0.1, 
                    0.}, {0., -0.1}}, {0., 
                    0.}}], {{{-1., -1.2246467991473532`*^-16}, {
                    1.2246467991473532`*^-16, -1.}}, {0., 0.}}]}}}, {0., 
                0.}], {70., -30.}], {{{0.1, 0.}, {0., 0.1}}, {
               63., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "fixed2"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-50., -120.}, {-30., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -120.}, {-10., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-10., -120.}, {10., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{10., -120.}, {30., -100.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -100.}, {30., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}]}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -60.}, {0., -101.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{-100., 10.}, {20., 10.}, {20., 41.}, {90., 
                    0.}, {20., -41.}, {20., -10.}, {-100., -10.}, {-100., 
                    10.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {-115., -47.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.16428571428571428`]}]}, 
                    PlotRange -> {{-150., -80.}, {-62., -32.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> 
                    None], {-115., -47.}, {-115., -47.}, {70., -30.}, {{1, 
                    0}, {0, 1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 
                    0}, {0, 1}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{
                    50., -54.}, {-30., -54.}, {-30., -46.}, {-60., -60.}, \
{-30., -74.}, {-30., -66.}, {50., -66.}, {50., -54.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], {}}, 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {-120., 0.}], {{{0.2, 0.}, {
                    0., 0.2}}, {-96., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-50., -30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-45., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "force2"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., 68.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    
                    PolygonBox[{{-80., 90.}, {-88., 68.}, {-72., 68.}, {-80., 
                    90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {68., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    PolygonBox[{{90., 0.}, {68., 8.}, {68., -8.}, {90., 0.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxdUj1LA0EUPKztYiOCKGqIqEW8REMguolJLh+XeLebRrASTCX4A2zSaBWw
E2IlCFZik0asFgurs7K1iE0aGyHYiIV3O6OiD45jdt7Mm7t9s3uHcn/Msqxk
+ERvVEtbf+oXt6M6k/q8F9ZkUjwGYS37xHlh+LKnU3ZYTyVhRLqpTV+3Bj7e
gN+gAX23Dn3PQ/9MDfyFLyIbu1/RRnclRdQeuA7wmoLfsAT8oKDvFLXpe1YC
uba08RkpYXL18+C7CvNdAX2cep1Dnqqkfxb5D3z6ZeA351GfBu43yK/y+6rg
gxXox8viaOLGeblbQL8SQt5OH7/6U8B2WiR2T+/fEx+bJqcd4/k8fTaQs72E
nKIIXzfJuVXM7aSAey5zrUM/7pHPgl/0qc/x3iT6YwL+b5L9efopzB8WmEdR
XxTfe4L/W+K9Ke6FA/829ScV8JecN6pCP+Ae7dThf8282kX/qEm+ybx16reZ
z0GeT+6RVeDeSubNEPPegwRxS/zb9x/8BZixLmQ=
                    "], SplineDegree -> 2]]}, {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {3., -132.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-197., 203.}, {-182., -82.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    3., -132.}, {3., -132.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{{}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {110., 0.}], {{{0.1, 0.}, {0.,
                     0.1}}, {99., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-90., -30.}], {{{0.1, 0.}, {0., 
               0.1}}, {-81., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
           Annotation[#, {"WSMComponent", "sine2"}]& ], 
          TagBox[{
            GeometricTransformationBox[
             GeometricTransformationBox[
              GeometricTransformationBox[
               GeometricTransformationBox[{{}, {{{{{}}, {}}, {{}}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -30.}, {-60., 30.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-60., 30.}, {30., -30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], {}, 
                   GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{60., -30.}, {-60., -30.}, {-60., 30.}, {60., 
                    30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}, {{}}}}}, {0., 0.}], {30., -20.}], {{{0.1, 0.}, {
               0., 0.1}}, {27., -18.}}], {{{1., 0.}, {0., 1.}}, {0., 
              0.}}], {}}, Annotation[#, {"WSMComponent", "damper1"}]& ]}}, 
        PlotRange -> {{-100.3152, 78.08879999999999}, {-50.1696, 40.2912}}, 
        PlotRangePadding -> 5, Frame -> None, FrameTicks -> False, GridLines -> 
        None, GridLinesStyle -> RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {
        Frame -> None, ImageSize -> {
           UpTo[130], 57.49532710280374}, Tooltip -> 
         Function[{
           WSM`Typeset`PackagePrivate`class, WSM`Typeset`PackagePrivate`name, 
            WSM`Typeset`PackagePrivate`graphic}, 
           WSM`Typeset`PackagePrivate`graphic]}], {0, 0}, 
       NCache[
        ImageScaled[{
          Rational[1, 2], 
          Rational[1, 2]}], 
        ImageScaled[{0.5, 0.5}]], {162., 86.25}], {
       RGBColor[
       0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
       InsetBox[
        FormBox[
         StyleBox[
         "\"8a6de941e12e\[Ellipsis]\"", FontSize -> 8.504672897196262, 
          FontFamily -> "Helvetica", StripOnInput -> False], 
         TraditionalForm], {0, -57.37733644859813}, 
        NCache[
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}], 
         ImageScaled[{0.5, 0.5}]]]}, {
       EdgeForm[
        RGBColor[0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
       
       FaceForm[None], 
       RectangleBox[{-90., -67.62967289719626}, {90., 52.125}, RoundingRadius -> 
        Offset[5]]}, 
      InsetBox[
       BoxData[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
            "], {{0, 24.}, {24., 0}}, {0, 255}, ColorFunction -> RGBColor, 
            ImageResolution -> {72, 72}], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {24., 24.}, PlotRange -> {{0, 24.}, {0, 24.}}], 
         TraditionalForm]], 
       Offset[{6, -6}, 
        ImageScaled[{0, 1}]], 
       ImageScaled[{0, 1}], {24, 24}]}, 
     WSM`Typeset`PackagePrivate`appearanceState$87513 = "Minimal", 
     WSM`Typeset`PackagePrivate`expandedeval$87513 = False, 
     WSM`Typeset`PackagePrivate`expandedprimitives$87513, 
     WSM`Typeset`PackagePrivate`expandedopt$87513, 
     WSM`Typeset`PackagePrivate`expandedsize$87513 = {182., 
     121.75467289719626`}, 
     WSM`Typeset`PackagePrivate`expandedrange$87513 = {{-91., 
     91.}, {-68.62967289719626, 53.125}}}, 
     DynamicWrapperBox[
      DynamicBox[{WSM`Typeset`PackagePrivate`p$87513, 
        Which[
         And[
         "normal" === "normal", 
          WSM`Typeset`PackagePrivate`appearanceState$87513 === "Minimal"], 
         InsetBox[
          BoxData[
           FormBox[
            ButtonBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"]], 
             ButtonFunction :> (
              If[WSM`Typeset`PackagePrivate`expandedeval$87513 === False, If[
                  TrueQ[WSMLink`Private`$WSMLinkIsLoaded], 
                  WSM`Typeset`PackagePrivate`appearanceState$87513 = "Eval"; 
                  Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["fc6dcb5f-af85-44ea-aac1-65173b601bff"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedsize$87513, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval$87513}]; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedrange$87513, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval$87513}]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null, 
                WSM`Typeset`PackagePrivate`appearanceState$87513 = "Expanded"; 
                Module[{
                  WSM`Typeset`PackagePrivate`cellobj$, 
                   WSM`Typeset`PackagePrivate`cellEditDup$}, 
                  If[
                   MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["fc6dcb5f-af85-44ea-aac1-65173b601bff"]}]]], 
                   WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                   WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    WSM`Typeset`PackagePrivate`expandedsize$87513; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    WSM`Typeset`PackagePrivate`expandedrange$87513; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null), Appearance -> None, 
             ContentPadding -> False, ImageSize -> {Automatic, Automatic}, 
             Evaluator -> Automatic, Method -> "Preemptive"], 
            TraditionalForm]], 
          Offset[{6, -6}, 
           Scaled[{0, 1}]], 
          Scaled[{0, 1}]], 
         And[
         "normal" === "normal", 
          WSM`Typeset`PackagePrivate`appearanceState$87513 === "Expanded"], 
         InsetBox[
          BoxData[
           FormBox[
            ButtonBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]], 
             ButtonFunction :> (
              WSM`Typeset`PackagePrivate`appearanceState$87513 = "Minimal"; 
              Module[{WSM`Typeset`PackagePrivate`cellobj$, 
                 WSM`Typeset`PackagePrivate`cellEditDup$}, 
                If[
                 MathLink`CallFrontEnd[
                  FrontEnd`BoxReferenceFind[
                   FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["fc6dcb5f-af85-44ea-aac1-65173b601bff"]}]]], 
                 WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                 WSM`Typeset`PackagePrivate`cellEditDup$ = 
                  CurrentValue[
                   WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                 If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                   CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                   False]; CurrentValue[
                   FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = {182., 
                   121.75467289719626`}; 
                 CurrentValue[
                   FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = {{-91., 
                   91.}, {-68.62967289719626, 53.125}}; 
                 If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                   CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                   True]; Null]]; Null), Appearance -> None, ContentPadding -> 
             False, ImageSize -> {Automatic, Automatic}, Evaluator -> 
             Automatic, Method -> "Preemptive"], TraditionalForm]], 
          Offset[{10, -10}, 
           Scaled[{0, 1}]]], True, {}]},
       ImageSizeCache->{{0.5, 181.5}, {-63.24330324547313, 57.51136965172313}},
       TrackedSymbols:>{WSM`Typeset`PackagePrivate`p$87513}], 
      Which[WSM`Typeset`PackagePrivate`appearanceState$87513 === "Minimal", 
        WSM`Typeset`PackagePrivate`p$87513 = {
           InsetBox[
            GraphicsBox[{{{}}, {{{}}, 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{0., 30.}, {20., 30.}}]]}, {{{1., 0.}, {0., 1.}}, {
                 0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  
                  LineBox[{{20., -40.}, {10., -40.}, {10., -20.}, {
                   20., -20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  
                  LineBox[{{0., -30.}, {10., -30.}, {10., -40.}, {
                   20., -40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  
                  LineBox[{{40., -20.}, {50., -20.}, {50., -40.}, {
                   40., -40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{-79., 30.}, {-62., 30.}}]]}, {{{1., 0.}, {0., 
                 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{-79., -30.}, {-62., -30.}}]]}, {{{1., 0.}, {0., 
                 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{40., 30.}, {70., 30.}}]]}, {{{1., 0.}, {0., 
                 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{-40., -30.}, {-20., -30.}}]]}, {{{1., 0.}, {0., 
                 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  LineBox[{{-40., 30.}, {-20., 30.}}]]}, {{{1., 0.}, {0., 
                 1.}}, {0., 0.}}], 
               GeometricTransformationBox[{
                 JoinForm["Round"], 
                 CapForm["Butt"], 
                 RGBColor[
                  NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                 Dashing[{}], 
                 AbsoluteThickness[1], 
                 Arrowheads[{}], 
                 ArrowBox[
                  
                  LineBox[{{40., -40.}, {50., -40.}, {50., -30.}, {
                   70., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {{}, 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-100., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{
                    EdgeForm[None], 
                    InsetBox[
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    SurfaceAppearance[
                    "GradientFilling", "GradientColorCount" -> 21, 
                    "GradientType" -> 1, "GradientColorSpace" -> 0, 
                    "GradientOrigin" -> {0.5, 0.5}, 
                    "GradientRadii" -> {0.5, 0.5}, "GradientSpace" -> 0, 
                    "GradientSpreadMethod" -> 0, 
                    "Arguments" -> {
                    "RadialGradientFilling", {0., 0.07845909572784494, 
                    0.15643446504023087`, 0.23344536385590542`, 
                    0.3090169943749474, 0.3826834323650898, 
                    0.4539904997395468, 0.5224985647159488, 
                    0.5877852522924731, 0.6494480483301837, 
                    0.7071067811865475, 0.760405965600031, 0.8090169943749475,
                     0.8526401643540922, 0.8910065241883679, 
                    0.9238795325112867, 0.9510565162951535, 
                    0.9723699203976767, 0.9876883405951378, 0.996917333733128,
                     1.} -> {
                    RGBColor[
                    0.6274509803921569, 0.8431372549019608, 
                    0.6274509803921569], 
                    RGBColor[
                    0.6255167584207861, 0.8420734328177069, 
                    0.6255167584207861], 
                    RGBColor[
                    0.6197260176283217, 0.8388885253818514, 
                    0.6197260176283217], 
                    RGBColor[
                    0.6101144598573657, 0.8336021686078257, 
                    0.6101144598573657], 
                    RGBColor[
                    0.5967413435577433, 0.8262469546430333, 
                    0.5967413435577433], 
                    RGBColor[
                    0.5796891184384544, 0.8168682308274244, 
                    0.5796891184384544], 
                    RGBColor[
                    0.5590629171377994, 0.8055238201120642, 
                    0.5590629171377994], 
                    RGBColor[
                    0.5349899070457049, 0.7922836645614122, 
                    0.5349899070457049], 
                    RGBColor[
                    0.5076185062744768, 0.7772293941372368, 
                    0.5076185062744768], 
                    RGBColor[
                    0.4771174686117841, 0.7604538234227558, 
                    0.4771174686117841], 
                    RGBColor[
                    0.4436748430974416, 0.7420603793898674, 
                    0.4436748430974416], 
                    RGBColor[
                    0.40749681463854653`, 0.7221624637374751, 
                    0.40749681463854653`], 
                    RGBColor[
                    0.3688064328109635, 0.7008827537323044, 
                    0.3688064328109635], 
                    RGBColor[
                    0.32784223668451695`, 0.6783524458627588, 
                    0.32784223668451695`], 
                    RGBColor[
                    0.2848567841503039, 0.6547104469689417, 
                    0.2848567841503039], 
                    RGBColor[
                    0.24011509481731125`, 0.6301025178357957, 
                    0.24011509481731125`], 
                    RGBColor[
                    0.19389301607839837`, 0.6046803745293936, 
                    0.19389301607839837`], 
                    RGBColor[
                    0.14647552241939155`, 0.5786007530169399, 
                    0.14647552241939155`], 
                    RGBColor[
                    0.09815495845661548, 0.552024442837413, 
                    0.09815495845661548], 
                    RGBColor[
                    0.04922923653511846, 0.5251152957805897, 
                    0.04922923653511846], 
                    RGBColor[
                    1.1102230246251565`*^-16, 0.4980392156862746, 
                    1.1102230246251565`*^-16]}, {{0.5, 0.5}, {0.5, 0.5}}, 
                    "Fixed"}, 
                    Texture[CompressedData["
1:eJx10n1IU1EcxvFtrRFFQ9O1QAxDMZq2LRXCTE/RXJpkYIklIUtRkxz2MglC
CfMFlGVShqEVhqmzFzPQ0ijNETJSs2zkFjXd7t3crrWNNUkcVMv6nbCDBw5f
Hj5/Xe7ZkluSkb+KxWKx/Vfkv1z/DV46NPIt/j4Mgs1aOm60qG7oT+DSSL7W
6NvnYfAGd8bJNaN6CnVE9gxFGxi8wQ85y7T8GgpxzlWoTA8YvMGj1x89WLGJ
QrqGINWt0wze4NdTH+94q7YgztlAgy6cwRtcWixlpigzSlpwU8YRB97gz86k
b23bbEYbU+qT87IdeIOn5RaJipJmEMvWtT1g2v5v//VkJadPWGtCUvbTvW2Z
drzBBZkHoqLyPyGX4u7J+cFZvMGNUl61MvgjWvhQpfKGzOINXnXFlFbTPIWa
62Lv31Ha8Ab3PIxl5/j06KpaJg3os+IN/nrND48wYRIN39Bm5H2j8QafFGgL
hc/foLriwuGxbTTe4NwT5RVl73TogiJCU3eMwhu8N2vXi74hLSrQegeslRa8
wffMXXJ3hw2gJ7UbRJJ7ZrzBe0aNgdfiulBW/MumwfEZvMH/tHW3eXrp4L3c
VzpulFofH2MV9BIFLz2sKVzHe0UUfMzX2F5rHieK369DstM18p4oeF5Xd4el
3EAUnG2SRYn5n4mC3xTP29P7Z4iC52SXcsMnLETBnU6WfL+OJoq/L+Fiwe1W
G1HwYFcineR/1/8XXONtajlPOYji/7+6nadPmSMKroxODA2r/EIUXH45ZuJU
w1ei4D+PyIL4JU6i4BMh36s7Q11EwY/TksaIFhdR8EeKSPGQzUV0+ftbub8A
9WcOMw==
                    "]]], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0]}, Frame -> False, 
                    PlotRange -> {{-55., 56.}, {-30., 30.}}], {0, 0}, {0, 
                    0}, {111., 60.}]}, {0., 0.}], {}}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 65.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {15., 115.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 65.}, {0., 65.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-10., 30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-9., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "mass1"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-98., 0.}, {-60., 0.}, {-44., -30.}, {-16., 
                    30.}, {14., -30.}, {44., 30.}, {60., 0.}, {100., 
                    0.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {30., 30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {27., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "spring1"}]& ], 
               
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., -40.}, {80., -40.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{80., -40.}, {40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{40., -40.}, {0., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {-40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-40., -40.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {0., -10.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -110.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-160., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -110.}, {0., -110.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {0., 0.}], {{{0.1, 
                    0.}, {0., -0.1}}, {0., 
                    0.}}], {{{-1., -1.2246467991473532`*^-16}, {
                    1.2246467991473532`*^-16, -1.}}, {0., 0.}}]}}}, {0., 
                    0.}], {70., 30.}], {{{0.1, 0.}, {0., 0.1}}, {63., 
                    27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
                Annotation[#, {"WSMComponent", "fixed1"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-50., -120.}, {-30., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -120.}, {-10., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-10., -120.}, {10., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{10., -120.}, {30., -100.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -100.}, {30., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -60.}, {0., -101.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{-100., 10.}, {20., 10.}, {20., 41.}, {90., 
                    0.}, {20., -41.}, {20., -10.}, {-100., -10.}, {-100., 
                    10.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {-115., -47.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.16428571428571428`]}]}, 
                    PlotRange -> {{-150., -80.}, {-62., -32.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> 
                    None], {-115., -47.}, {-115., -47.}, {70., -30.}, {{1, 
                    0}, {0, 1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 
                    0}, {0, 1}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{
                    50., -54.}, {-30., -54.}, {-30., -46.}, {-60., -60.}, \
{-30., -74.}, {-30., -66.}, {50., -66.}, {50., -54.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], {}}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {-120., 0.}], {{{0.2, 0.}, {
                    0., 0.2}}, {-96., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-50., 30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-45., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "force1"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {FontFamily -> "Arial", FontSize -> 
                    Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., 68.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    
                    PolygonBox[{{-80., 90.}, {-88., 68.}, {-72., 68.}, {-80., 
                    90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {68., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    PolygonBox[{{90., 0.}, {68., 8.}, {68., -8.}, {90., 0.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxdUj1LA0EUPKztYiOCKGqIqEW8REMguolJLh+XeLebRrASTCX4A2zSaBWw
E2IlCFZik0asFgurs7K1iE0aGyHYiIV3O6OiD45jdt7Mm7t9s3uHcn/Msqxk
+ERvVEtbf+oXt6M6k/q8F9ZkUjwGYS37xHlh+LKnU3ZYTyVhRLqpTV+3Bj7e
gN+gAX23Dn3PQ/9MDfyFLyIbu1/RRnclRdQeuA7wmoLfsAT8oKDvFLXpe1YC
uba08RkpYXL18+C7CvNdAX2cep1Dnqqkfxb5D3z6ZeA351GfBu43yK/y+6rg
gxXox8viaOLGeblbQL8SQt5OH7/6U8B2WiR2T+/fEx+bJqcd4/k8fTaQs72E
nKIIXzfJuVXM7aSAey5zrUM/7pHPgl/0qc/x3iT6YwL+b5L9efopzB8WmEdR
XxTfe4L/W+K9Ke6FA/829ScV8JecN6pCP+Ae7dThf8282kX/qEm+ybx16reZ
z0GeT+6RVeDeSubNEPPegwRxS/zb9x/8BZixLmQ=
                    "], SplineDegree -> 2]]}, {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {3., -132.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-197., 203.}, {-182., -82.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    3., -132.}, {3., -132.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{{}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {110., 0.}], {{{0.1, 0.}, {0.,
                     0.1}}, {99., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-90., 30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-81., 27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "sine1"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-100., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{
                    EdgeForm[None], 
                    InsetBox[
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    SurfaceAppearance[
                    "GradientFilling", "GradientColorCount" -> 21, 
                    "GradientType" -> 1, "GradientColorSpace" -> 0, 
                    "GradientOrigin" -> {0.5, 0.5}, 
                    "GradientRadii" -> {0.5, 0.5}, "GradientSpace" -> 0, 
                    "GradientSpreadMethod" -> 0, 
                    "Arguments" -> {
                    "RadialGradientFilling", {0., 0.07845909572784494, 
                    0.15643446504023087`, 0.23344536385590542`, 
                    0.3090169943749474, 0.3826834323650898, 
                    0.4539904997395468, 0.5224985647159488, 
                    0.5877852522924731, 0.6494480483301837, 
                    0.7071067811865475, 0.760405965600031, 0.8090169943749475,
                     0.8526401643540922, 0.8910065241883679, 
                    0.9238795325112867, 0.9510565162951535, 
                    0.9723699203976767, 0.9876883405951378, 0.996917333733128,
                     1.} -> {
                    RGBColor[
                    0.6274509803921569, 0.8431372549019608, 
                    0.6274509803921569], 
                    RGBColor[
                    0.6255167584207861, 0.8420734328177069, 
                    0.6255167584207861], 
                    RGBColor[
                    0.6197260176283217, 0.8388885253818514, 
                    0.6197260176283217], 
                    RGBColor[
                    0.6101144598573657, 0.8336021686078257, 
                    0.6101144598573657], 
                    RGBColor[
                    0.5967413435577433, 0.8262469546430333, 
                    0.5967413435577433], 
                    RGBColor[
                    0.5796891184384544, 0.8168682308274244, 
                    0.5796891184384544], 
                    RGBColor[
                    0.5590629171377994, 0.8055238201120642, 
                    0.5590629171377994], 
                    RGBColor[
                    0.5349899070457049, 0.7922836645614122, 
                    0.5349899070457049], 
                    RGBColor[
                    0.5076185062744768, 0.7772293941372368, 
                    0.5076185062744768], 
                    RGBColor[
                    0.4771174686117841, 0.7604538234227558, 
                    0.4771174686117841], 
                    RGBColor[
                    0.4436748430974416, 0.7420603793898674, 
                    0.4436748430974416], 
                    RGBColor[
                    0.40749681463854653`, 0.7221624637374751, 
                    0.40749681463854653`], 
                    RGBColor[
                    0.3688064328109635, 0.7008827537323044, 
                    0.3688064328109635], 
                    RGBColor[
                    0.32784223668451695`, 0.6783524458627588, 
                    0.32784223668451695`], 
                    RGBColor[
                    0.2848567841503039, 0.6547104469689417, 
                    0.2848567841503039], 
                    RGBColor[
                    0.24011509481731125`, 0.6301025178357957, 
                    0.24011509481731125`], 
                    RGBColor[
                    0.19389301607839837`, 0.6046803745293936, 
                    0.19389301607839837`], 
                    RGBColor[
                    0.14647552241939155`, 0.5786007530169399, 
                    0.14647552241939155`], 
                    RGBColor[
                    0.09815495845661548, 0.552024442837413, 
                    0.09815495845661548], 
                    RGBColor[
                    0.04922923653511846, 0.5251152957805897, 
                    0.04922923653511846], 
                    RGBColor[
                    1.1102230246251565`*^-16, 0.4980392156862746, 
                    1.1102230246251565`*^-16]}, {{0.5, 0.5}, {0.5, 0.5}}, 
                    "Fixed"}, 
                    Texture[CompressedData["
1:eJx10n1IU1EcxvFtrRFFQ9O1QAxDMZq2LRXCTE/RXJpkYIklIUtRkxz2MglC
CfMFlGVShqEVhqmzFzPQ0ijNETJSs2zkFjXd7t3crrWNNUkcVMv6nbCDBw5f
Hj5/Xe7ZkluSkb+KxWKx/Vfkv1z/DV46NPIt/j4Mgs1aOm60qG7oT+DSSL7W
6NvnYfAGd8bJNaN6CnVE9gxFGxi8wQ85y7T8GgpxzlWoTA8YvMGj1x89WLGJ
QrqGINWt0wze4NdTH+94q7YgztlAgy6cwRtcWixlpigzSlpwU8YRB97gz86k
b23bbEYbU+qT87IdeIOn5RaJipJmEMvWtT1g2v5v//VkJadPWGtCUvbTvW2Z
drzBBZkHoqLyPyGX4u7J+cFZvMGNUl61MvgjWvhQpfKGzOINXnXFlFbTPIWa
62Lv31Ha8Ab3PIxl5/j06KpaJg3os+IN/nrND48wYRIN39Bm5H2j8QafFGgL
hc/foLriwuGxbTTe4NwT5RVl73TogiJCU3eMwhu8N2vXi74hLSrQegeslRa8
wffMXXJ3hw2gJ7UbRJJ7ZrzBe0aNgdfiulBW/MumwfEZvMH/tHW3eXrp4L3c
VzpulFofH2MV9BIFLz2sKVzHe0UUfMzX2F5rHieK369DstM18p4oeF5Xd4el
3EAUnG2SRYn5n4mC3xTP29P7Z4iC52SXcsMnLETBnU6WfL+OJoq/L+Fiwe1W
G1HwYFcineR/1/8XXONtajlPOYji/7+6nadPmSMKroxODA2r/EIUXH45ZuJU
w1ei4D+PyIL4JU6i4BMh36s7Q11EwY/TksaIFhdR8EeKSPGQzUV0+ftbub8A
9WcOMw==
                    "]]], 
                    
                    RectangleBox[{-55., -30.}, {56., 30.}, RoundingRadius -> 
                    0]}, Frame -> False, 
                    PlotRange -> {{-55., 56.}, {-30., 30.}}], {0, 0}, {0, 
                    0}, {111., 60.}]}, {0., 0.}], {}}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 65.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {15., 115.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 65.}, {0., 65.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-10., -30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-9., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "mass2"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-98., 0.}, {-60., 0.}, {-44., -30.}, {-16., 
                    30.}, {14., -30.}, {44., 30.}, {60., 0.}, {100., 
                    0.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {30., -40.}], {{{0.1, 0.}, {0., 
                    0.1}}, {27., -36.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "spring2"}]& ], 
               
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., -40.}, {80., -40.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{80., -40.}, {40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{40., -40.}, {0., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {-40., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-40., -40.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -40.}, {0., -10.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -110.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-160., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -110.}, {0., -110.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {0., 0.}], {{{0.1, 
                    0.}, {0., -0.1}}, {0., 
                    0.}}], {{{-1., -1.2246467991473532`*^-16}, {
                    1.2246467991473532`*^-16, -1.}}, {0., 0.}}]}}}, {0., 
                    0.}], {70., -30.}], {{{0.1, 0.}, {0., 0.1}}, {
                    63., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {}}, 
                Annotation[#, {"WSMComponent", "fixed2"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-50., -120.}, {-30., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -120.}, {-10., -100.}}]]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-10., -120.}, {10., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{10., -120.}, {30., -100.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-30., -100.}, {30., -100.}}]]}, {{{1., 0.}, {0.,
                     1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{0., -60.}, {0., -101.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{-100., 10.}, {20., 10.}, {20., 41.}, {90., 
                    0.}, {20., -41.}, {20., -10.}, {-100., -10.}, {-100., 
                    10.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {-115., -47.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.16428571428571428`]}]}, 
                    PlotRange -> {{-150., -80.}, {-62., -32.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> 
                    None], {-115., -47.}, {-115., -47.}, {70., -30.}, {{1, 
                    0}, {0, 1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 
                    0}, {0, 1}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[32, 51], 
                    Rational[43, 51], 
                    Rational[32, 51]}, {0.6274509803921569, 
                    0.8431372549019608, 0.6274509803921569}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    PolygonBox[{{
                    50., -54.}, {-30., -54.}, {-30., -46.}, {-60., -60.}, \
{-30., -74.}, {-30., -66.}, {50., -66.}, {50., -54.}}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], {}}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {-120., 0.}], {{{0.2, 0.}, {
                    0., 0.2}}, {-96., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-50., -30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-45., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "force2"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {FontFamily -> "Arial", FontSize -> 
                    Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 130.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {80., 180.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 130.}, {0., 130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-80., 68.}, {-80., -80.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    
                    PolygonBox[{{-80., 90.}, {-88., 68.}, {-72., 68.}, {-80., 
                    90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {68., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]}], 
                    PolygonBox[{{90., 0.}, {68., 8.}, {68., -8.}, {90., 0.}}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxdUj1LA0EUPKztYiOCKGqIqEW8REMguolJLh+XeLebRrASTCX4A2zSaBWw
E2IlCFZik0asFgurs7K1iE0aGyHYiIV3O6OiD45jdt7Mm7t9s3uHcn/Msqxk
+ERvVEtbf+oXt6M6k/q8F9ZkUjwGYS37xHlh+LKnU3ZYTyVhRLqpTV+3Bj7e
gN+gAX23Dn3PQ/9MDfyFLyIbu1/RRnclRdQeuA7wmoLfsAT8oKDvFLXpe1YC
uba08RkpYXL18+C7CvNdAX2cep1Dnqqkfxb5D3z6ZeA351GfBu43yK/y+6rg
gxXox8viaOLGeblbQL8SQt5OH7/6U8B2WiR2T+/fEx+bJqcd4/k8fTaQs72E
nKIIXzfJuVXM7aSAey5zrUM/7pHPgl/0qc/x3iT6YwL+b5L9efopzB8WmEdR
XxTfe4L/W+K9Ke6FA/829ScV8JecN6pCP+Ae7dThf8282kX/qEm+ybx16reZ
z0GeT+6RVeDeSubNEPPegwRxS/zb9x/8BZixLmQ=
                    "], SplineDegree -> 2]]}, {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {3., -132.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-197., 203.}, {-182., -82.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    3., -132.}, {3., -132.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}]}, {{{{}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]]}], 
                    PolygonBox[{{-100., 100.}, {100., 0.}, {-100., -100.}}], 
                    RGBColor[
                    NCache[{0, 0, 
                    Rational[127, 255]}, {0, 0, 0.4980392156862745}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {}}, {110., 0.}], {{{0.1, 0.}, {0.,
                     0.1}}, {99., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}}}, {0., 0.}], {-90., -30.}], {{{0.1, 0.}, {0., 
                    0.1}}, {-81., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, Annotation[#, {"WSMComponent", "sine2"}]& ], 
               TagBox[{
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[
                    GeometricTransformationBox[{{}, {{{{{}}, {}}, {{}}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-90., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[{0, 0, 0}], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -30.}, {-60., 30.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[64, 85], 
                    Rational[64, 85], 
                    Rational[64, 85]}, {0.7529411764705882, 
                    0.7529411764705882, 0.7529411764705882}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-60., 30.}, {30., -30.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]]}], 
                    
                    PolygonBox[{{50., -90.}, {20., -80.}, {20., -100.}, {
                    50., -90.}}], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[19, 51], 
                    Rational[127, 255], 
                    Rational[19, 51]}, {0.37254901960784315`, 
                    0.4980392156862745, 0.37254901960784315`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{-60., -90.}, {20., -90.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 70.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {20., 120.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 70.}, {0., 70.}, {400., 100.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[{0, 0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", SingleLetterItalics -> False, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -60.}, 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    ImageScaled[{0.5, 0.5}]], 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-200., 200.}, {-110., -10.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -60.}, {0., -60.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], {}, 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{60., -30.}, {-60., -30.}, {-60., 30.}, {60., 
                    30.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {{{
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {-100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {-90., 0.}}], {{{1., 0.}, {0., 1.}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{0, 
                    Rational[127, 255], 0}, {0, 0.4980392156862745, 0}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}, {{}}}}}, {0., 0.}], {30., -20.}], {{{0.1, 0.}, {
                    0., 0.1}}, {27., -18.}}], {{{1., 0.}, {0., 1.}}, {0., 
                   0.}}], {}}, 
                Annotation[#, {"WSMComponent", "damper1"}]& ]}}, 
             PlotRange -> {{-100.3152, 78.08879999999999}, {-50.1696, 
              40.2912}}, PlotRangePadding -> 5, Frame -> None, FrameTicks -> 
             False, GridLines -> None, GridLinesStyle -> 
             RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {Frame -> None, ImageSize -> {
                UpTo[130], 57.49532710280374}, Tooltip -> 
              Function[{
                WSM`Typeset`PackagePrivate`class, 
                 WSM`Typeset`PackagePrivate`name, 
                 WSM`Typeset`PackagePrivate`graphic}, 
                WSM`Typeset`PackagePrivate`graphic]}], {0, 0}, 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]], {162., 86.25}], {
            RGBColor[
            0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"8a6de941e12e\[Ellipsis]\"", FontSize -> 8.504672897196262, 
               FontFamily -> "Helvetica", StripOnInput -> False], 
              TraditionalForm], {0, -57.37733644859813}, 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}, {
            EdgeForm[
             RGBColor[
             0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
            FaceForm[None], 
            
            RectangleBox[{-90., -67.62967289719626}, {90., 52.125}, 
             RoundingRadius -> Offset[5]]}, 
           InsetBox[
            BoxData[
             FormBox[
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
                 "], {{0, 24.}, {24., 0}}, {0, 255}, ColorFunction -> 
                 RGBColor, ImageResolution -> {72, 72}], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {24., 24.}, PlotRange -> {{0, 24.}, {0, 24.}}],
               TraditionalForm]], 
            Offset[{6, -6}, 
             ImageScaled[{0, 1}]], 
            ImageScaled[{0, 1}], {24, 24}]}; Null, 
        WSM`Typeset`PackagePrivate`appearanceState$87513 === "Eval", 
        WSM`Typeset`PackagePrivate`p$87513 = {{
            EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
            FaceForm[None], 
            RectangleBox[{
              Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 1, 1], 
              Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 2, 1] + 
              1}, {Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 1, 2] - 
              1, 
              Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 2, 2]}, 
             RoundingRadius -> Offset[5]]}, 
           InsetBox[
            Evaluate[
             ToBoxes[
              ProgressIndicator[Appearance -> "Percolate"], StandardForm]]]}; 
        Module[{WSM`Typeset`PackagePrivate`md$}, {
            WSM`Typeset`PackagePrivate`expandedsize$87513, 
             WSM`Typeset`PackagePrivate`md$} = 
           WSM`Typeset`PackagePrivate`getExpandedGraphic[
            "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a", 
             "fc6dcb5f-af85-44ea-aac1-65173b601bff"]; {
            WSM`Typeset`PackagePrivate`expandedprimitives$87513, 
             WSM`Typeset`PackagePrivate`expandedopt$87513} = 
           WSM`Typeset`PackagePrivate`separateGraphics[
            WSM`Typeset`PackagePrivate`md$]; 
          WSM`Typeset`PackagePrivate`expandedrange$87513 = 
           Replace[PlotRange, 
             Flatten[WSM`Typeset`PackagePrivate`expandedopt$87513]]; 
          WSM`Typeset`PackagePrivate`expandedeval$87513 = True; 
          WSM`Typeset`PackagePrivate`expandedprimitives$87513 = 
           Join[WSM`Typeset`PackagePrivate`expandedprimitives$87513, {{
               EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
               FaceForm[None], 
               RectangleBox[{
                 Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 1, 1], 
                 Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 2, 1] + 
                 1}, {Part[
                  WSM`Typeset`PackagePrivate`expandedrange$87513, 1, 2] - 1, 
                 Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 2, 2]}, 
                RoundingRadius -> Offset[5]]}, 
              
              With[{WSM`Typeset`PackagePrivate`leftmost$ = 
                Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 1, 1], 
                WSM`Typeset`PackagePrivate`bottommost$ = 
                Part[WSM`Typeset`PackagePrivate`expandedrange$87513, 2, 1]}, {
               
                RGBColor[
                0.43137254901960786`, 0.43137254901960786`, 
                 0.43137254901960786`], 
                InsetBox[
                 FormBox[
                  StyleBox[
                  "8a6de941e12e\[Ellipsis]", FontSize -> 9, FontFamily -> 
                   "Helvetica", StripOnInput -> False], TraditionalForm], 
                 
                 Offset[{12, 12}, {
                  WSM`Typeset`PackagePrivate`leftmost$, 
                   WSM`Typeset`PackagePrivate`bottommost$}], {-1, 0}]}]}]; 
          Null]; WSM`Typeset`PackagePrivate`appearanceState$87513 = 
         "Expanded"; Null, WSM`Typeset`PackagePrivate`appearanceState$87513 === 
        "Expanded", 
        WSM`Typeset`PackagePrivate`p$87513 = 
         WSM`Typeset`PackagePrivate`expandedprimitives$87513; Null]; Null,
      ImageSizeCache->{{0.5, 181.5}, {-63.24330324547313, 57.51136965172313}},
      
      SynchronousUpdating->False,
      TrackedSymbols:>{WSM`Typeset`PackagePrivate`appearanceState$87513}],
     Initialization:>(
      WSM`Typeset`PackagePrivate`expandedeval$87513 = 
       Not[WSM`Typeset`PackagePrivate`expandedeval$87513]; 
      WSM`Typeset`PackagePrivate`expandedeval$87513 = 
       Not[WSM`Typeset`PackagePrivate`expandedeval$87513]; Null)],
    "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a"],
   WSM`ModelTag["UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a"]],
  Editable -> False,
  SelectWithContents -> True,
  BoxID -> "fc6dcb5f-af85-44ea-aac1-65173b601bff",
  ContentSelectable->False,
  DefaultBaseStyle->{
   "Graphics", FrontEnd`GraphicsHighlightColor -> RGBColor[0, 0.46775, 1], 
    ComponentwiseContextMenu -> {"GraphicsBox" -> {
        MenuItem["Copy Model", 
         KernelExecute[
          CopyToClipboard[
           ReleaseHold[
            MakeExpression[
             MakeBoxes[
              SystemModel[
              "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a"]], 
             StandardForm]]]], MenuEvaluator -> Automatic], 
        MenuItem["Copy Model Name", 
         KernelExecute[
          CopyToClipboard[
          "\"" <> "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a" <> 
           "\""]], MenuEvaluator -> Automatic], Delimiter, 
        MenuItem["Simulate Model", 
         FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], After, Cell], 
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell[
             BoxData[
              
              RowBox[{"SystemModelSimulate", "[", 
                "\"UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a\"", 
                "]"}]], "Input"]], 
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], Previous, Cell], 
           FrontEnd`SelectionEvaluateCreateCell[
            FrontEnd`InputNotebook[]]}]], 
        MenuItem["Show Preferred Plots in Model", 
         FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], After, Cell], 
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell[
             BoxData[
              
              RowBox[{"SystemModelPlot", "[", 
                "\"UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a\"", 
                "]"}]], "Input"]], 
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], Previous, Cell], 
           FrontEnd`SelectionEvaluateCreateCell[
            FrontEnd`InputNotebook[]]}]], Delimiter, 
        MenuItem["Show Model Documentation", 
         FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], After, Cell], 
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell[
             BoxData[
              RowBox[{"SystemModel", "[", 
                
                RowBox[{
                 "\"UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a\"", 
                  ",", "\"Documentation\""}], "]"}]], "Input"]], 
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], Previous, Cell], 
           FrontEnd`SelectionEvaluateCreateCell[
            FrontEnd`InputNotebook[]]}]], 
        MenuItem["Show Model Summary", 
         FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], After, Cell], 
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell[
             BoxData[
              RowBox[{"SystemModel", "[", 
                
                RowBox[{
                 "\"UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a\"", 
                  ",", "\"Summary\""}], "]"}]], "Input"]], 
           FrontEnd`SelectionMove[
            FrontEnd`InputNotebook[], Previous, Cell], 
           FrontEnd`SelectionEvaluateCreateCell[
            FrontEnd`InputNotebook[]]}]], Delimiter, 
        MenuItem["Open in System Modeler Model Center", 
         KernelExecute[
          WSMLink`WSMModelCenter[
          "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a"]], 
         MenuEvaluator -> Automatic], 
        MenuItem["Open in System Modeler Simulation Center", 
         KernelExecute[
          WSMLink`WSMSimulationCenter[
          "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a"]], 
         MenuEvaluator -> Automatic]}}},
  ImageSize->{182., 121.75467289719626`},
  PlotRange->{{-91., 91.}, {-68.62967289719626, 53.125}}]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.935751424358925*^9, 3.93575160962042*^9, 3.935751767002076*^9, 
   3.9357518171059637`*^9, 3.9357519842449417`*^9, {3.935752037940606*^9, 
   3.9357520667205057`*^9}, 3.935752121776699*^9, 3.935752518461727*^9, {
   3.935752568656934*^9, 3.935752582328841*^9}, {3.935752658221156*^9, 
   3.9357527215849113`*^9}, 3.935752772439618*^9, 3.935758349572137*^9},
 CellLabel->"Out[197]=",
 CellID->1096747367,ExpressionUUID->"7dfdcdc2-4d83-4fd3-b25b-03ed6ca74a9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"shmTimeRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"shmSim", "=", 
  RowBox[{"SystemModelSimulate", "[", 
   RowBox[{"shmModel", ",", "shmTimeRange", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<InitialValues\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<mass1.s\>\"", "->", "2"}], ",", 
        RowBox[{"\"\<mass1.v\>\"", "->", "0"}]}], "}"}]}], "|>"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935750665557424*^9, 3.935750688232462*^9}, 
   3.935751066325931*^9, {3.935751294132134*^9, 3.93575129889123*^9}, {
   3.9357516192877207`*^9, 3.935751629396309*^9}, {3.935752384903154*^9, 
   3.9357524188120813`*^9}, {3.9357524788695297`*^9, 3.935752479050455*^9}, {
   3.935752850405005*^9, 3.9357528539214907`*^9}, {3.935753052497982*^9, 
   3.9357530622909613`*^9}},
 CellLabel->"In[198]:=",
 CellID->1616838688,ExpressionUUID->"90fd95f1-43cf-41c0-80ee-7211ae104f5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SystemModelSimulationData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              RGBColor[0.368417, 0.506779, 0.709798], 
              LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQjQo+2M+aCQIn7dsN2ty/wPk37aPvvLxk8Pu9vTEY
PLZvP9c7ceaP91D5l/YztTa1KP1/bw8zx/6A3Ykm5g9Q9Z/tD5ttdQgG8tPT
QOCbvefNMwyJ/2D6f9o3rLy7lQlo3tkzIPDHvmG9coLkb5h5DA45N0Ue/WOE
uYfR4ZekcqwIC8x8ZgcH8Z2VoUB5iH4WhzymmMUsv95D7WNziGF/bl78A2Ye
h0Oh4tHXF//D7Od0eLy4YtpmuHu5HaYySWbJMMPM43HwemJ+Yc1fmHl8DmtP
rMh4+B1mnoDDPGbmfZt+w9wv4OA52+SZLxPMvYIOzTZpwhwsMP8LOXhvM837
wwCzT9hhNrfOk+6fMPNEHEo+njxyCB4eIg7RD4+ddoXHh6jDFNXMKdfh4Snm
kH9d8csdJph54g6P2jjt/v6BmSfhUM+5h/Pid5h5Eg4lE458DvkD87+kw+cX
/u4zmGDmSTn83fthzWd4eEg7eCw9mbYQaD/EPBmHcu+7Ugo/YebJOOgmBd8G
8SHmyTp0ze4TXcQAM0/O4alI5G2EefIOnZLZ+6YzwcxTcNit1bA9GOgesPI0
BYecqjRJhHsVHMJ4xdv//YGlP0WHB08mF92Fh6+iwwYb0XBQeEDMU3IICXGX
doXbr+TwtzdCHhGeSg72SSr7en7CzFN2YNF6KPkXHr7KDk+utRqB4gtinorD
9NhvwaD4BADzumJs
               "]]}, ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 1, 
             PlotRange -> {Automatic, Automatic}, PlotRangeClipping -> True, 
             Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Axes -> False, 
             PlotRangePadding -> {
               Scaled[0.02], 
               Scaled[0.02]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Model: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"W8a6de941e12e4366bf6fd270067bf11a\"", "SummaryItem"]}]}, {
              
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["10.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              RGBColor[0.368417, 0.506779, 0.709798], 
              LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQjQo+2M+aCQIn7dsN2ty/wPk37aPvvLxk8Pu9vTEY
PLZvP9c7ceaP91D5l/YztTa1KP1/bw8zx/6A3Ykm5g9Q9Z/tD5ttdQgG8tPT
QOCbvefNMwyJ/2D6f9o3rLy7lQlo3tkzIPDHvmG9coLkb5h5DA45N0Ue/WOE
uYfR4ZekcqwIC8x8ZgcH8Z2VoUB5iH4WhzymmMUsv95D7WNziGF/bl78A2Ye
h0Oh4tHXF//D7Od0eLy4YtpmuHu5HaYySWbJMMPM43HwemJ+Yc1fmHl8DmtP
rMh4+B1mnoDDPGbmfZt+w9wv4OA52+SZLxPMvYIOzTZpwhwsMP8LOXhvM837
wwCzT9hhNrfOk+6fMPNEHEo+njxyCB4eIg7RD4+ddoXHh6jDFNXMKdfh4Snm
kH9d8csdJph54g6P2jjt/v6BmSfhUM+5h/Pid5h5Eg4lE458DvkD87+kw+cX
/u4zmGDmSTn83fthzWd4eEg7eCw9mbYQaD/EPBmHcu+7Ugo/YebJOOgmBd8G
8SHmyTp0ze4TXcQAM0/O4alI5G2EefIOnZLZ+6YzwcxTcNit1bA9GOgesPI0
BYecqjRJhHsVHMJ4xdv//YGlP0WHB08mF92Fh6+iwwYb0XBQeEDMU3IICXGX
doXbr+TwtzdCHhGeSg72SSr7en7CzFN2YNF6KPkXHr7KDk+utRqB4gtinorD
9NhvwaD4BADzumJs
               "]]}, ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 1, 
             PlotRange -> {Automatic, Automatic}, PlotRangeClipping -> True, 
             Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Axes -> False, 
             PlotRangePadding -> {
               Scaled[0.02], 
               Scaled[0.02]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Model: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"W8a6de941e12e4366bf6fd270067bf11a\"", "SummaryItem"]}], 
               ""}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["10.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], ""}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["56", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"States: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Events: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SystemModelSimulationData[
  "/Users/gordie/Library/Caches/com.wolfram.SystemModeler/\
WolframSystemModeler-14.1/WL/wsml_WYaYdeYYYeYYeYYYYbfYfdYYYYYYbfYYa_lsim_\
74736_45552_556431737227373770904870432942_1.mat", 
   "UnnamedModels.WL.W8a6de941e12e4366bf6fd270067bf11a", 56, {0., 10.}, 
   "/Users/gordie/Library/Caches/com.wolfram.SystemModeler/\
WolframSystemModeler-14.1/wsml_WYaYdeYYYeYYeYYYYbfYfdYYYYYYbfYYa_lsim_74736_\
45552_55643173722737377090.sim", 1, {
   "damper1.d", "damper1.s_nominal", "fixed1.s0", "fixed2.s0", "mass1.L", 
    "mass1.m", "mass1.stateSelect", "mass2.L", "mass2.m", "mass2.stateSelect",
     "sine1.amplitude", "sine1.f", "sine1.offset", "sine1.phase", 
    "sine1.startTime", "sine2.amplitude", "sine2.f", "sine2.offset", 
    "sine2.phase", "sine2.startTime", "spring1.c", "spring1.s_rel0", 
    "spring2.c", "spring2.s_rel0"}, {
   "damper1.s_rel", "damper1.v_rel", "mass1.s", "mass1.v"}, 0, {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.935751622543511*^9, 3.935751630234447*^9}, 
   3.935751770974221*^9, 3.9357518200962687`*^9, 3.935751994378902*^9, 
   3.9357520748749237`*^9, 3.935752125600566*^9, {3.935752406376856*^9, 
   3.935752419150185*^9}, 3.9357524794228363`*^9, 3.9357525211614656`*^9, 
   3.935752587395825*^9, 3.935752628242732*^9, {3.935752661468422*^9, 
   3.9357527250546713`*^9}, 3.9357527774152718`*^9, 3.935752857918043*^9, 
   3.93575306269634*^9, 3.935758352147808*^9},
 CellLabel->"Out[199]=",
 CellID->184244407,ExpressionUUID->"b1ffdacc-2cc5-4994-9840-4d5a3d1ad2f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SystemModelPlot", "[", 
  RowBox[{"shmSim", ",", " ", 
   RowBox[{"{", "\"\<mass1.s\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93575875707311*^9, 3.9357588082622423`*^9}},
 CellLabel->"In[223]:=",
 CellID->983865276,ExpressionUUID->"3a24a2d1-c158-4d34-9070-a1e405893268"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[2], 
      StyleBox[LineBox[CompressedData["
1:eJxcnGV0lFfXhgcpxWkpDsVdihS3e3DXUCRYi0txd2hxLe7BvQkE90GCB4iH
uLuNu3zP2ft0rXd9/HnXvEmeeeScfe2Ze1+tM2XByOmFVSpV+UYqlfjf//dP
7bymCxkyZTi617txIsLjAb/+HVGxQ+d6K6/t6+c8XXpwFva8brdkl/u/ny9E
0lPvu7NdHqyp4NcvafVSJHuntjY5/vv9lfi9+MSCFnYPVmU1bF3837XIvNxd
95P1v7/fiCc9w7teMXnQNWHYnqPz/8K+Iye/Zej/O95mHF7Z5VN4gQePB5Qu
3GzbVpzvk1RjUe5/x9+O8fPHRjzK9KDz3ffLn5/ZiVK+/QrdSv3v/XYj4sd6
V70SPXhYc0vOiId7sf9Tg4iLMf+9/z+wx086eiHCg1MBtW8tnrUfN6K/WocF
/3c+B5D+V5/i1z95EGOjN8TYwTPC/N/8d36HUFDu4p8zNR5UbxlXv9imw2j7
qnfSx4f/ne8RrHryR69Yfw+8p3URR0TEkOyLJ6//d/7H8KLB+SolLnhw4jj9
Q+C2Orfrn/zvek7AvDd0S/4BD6K+WLxSLp3E0kqWqzN2/nd9p5Cccrr1nk0e
VC06umyL26exbKFv+ykr/7teH0yIj/uaNt+DsZ3ogHg6+HHFKtP/u/6z6Jh2
po7N24PBHXb0+D3tLBa0fl5mx/D/7sc5tJhcyfSujwe5I8QRz2HA6jWGe53/
uz/n0fje/gZeLT3Y9WeG45ruPFTrvlw9U++/+3UBU4NWnDxZ2YNm2yopl3AB
gb0u1uhX6r/7dxFPZ3UefN7txqdzfe4bXBeheqEd6Ktzy/t5CUMbDek8K9WN
ucrdqlL0MtY8utg1NMIt7+9l7OhZfVn+ezdKRl5Y2K3kFcSVv/D948dueb+v
IGKls0r7f924Li73h6v4vO3elymn3fL+X8WCQ02Gqfe6MVAcrtI1XNJufPll
vVs+j2v4MPvWkLIL3MgWt7vGdZR3rKzhmeSWz+c6wgfPHHNuqBvi7gXVvYFO
k0Ibm7q55fO6gYVFE5/Ym7vRZMK+V6bG/2LP7tVdb1d3y+f3L+ydvCOrl3Tj
g3K0ai190TbJ86iD1SWfpy9c0+6VL5buwuz9eWvRzg/rBu75YVuoSz5fP1xt
OyXl8QsXlJNTLvkm+i6OeHLO1yWf9000WOH1qcsJF0Ypi0d5pFg0rUTvHVtd
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
8nPJ81SMznsm8nPJ81S8G1FM5OeS58rPW8WJ/FzyPBWdy7cW+bnkeSoGN9kk
8nPJ81Q0HREr8nPJ81SYyiaK/FzyPBV79j0Q+bnkeSoWXqwm8nPJ81TU0wwW
+bnkeSpa5VQX+bnkeSrevE0Q+bnkeSrSV60U+bnkeSoG/jtE5OeS56n4smqI
yM8lz1Oxd3qOyM8lz1PhN6iWyM8lz1PxcsQ0kZ9LnqciNvyByM8lz1Mxd8Ix
kZ9LnqfCZ21RkZ9LniuvP60S+bnkeSrmvTWI/FzyPBXbHmeL/FzyPBU9fEeK
/FzyPBXxPU6I/FzyPBUbfK6J/FzyPA3+w5JEfi55nobsplVFfi55ngZNyzMi
P5c8T0P6zPYiP5c8T0OFtxVFfi55noaLRSg/lzxPQ611b0R+LnmehqNlKD+X
PE9DfGZ/kZ9Lnqfh6tKRIj+XPE9DsR6/i/xc8jwNC1b1F/m55HkaWp59IPJz
yfM0LI2KFvm55HkaWn9/S+TnkudpmDK/iMjPJc/TUNl7nsjPJc/TsO/pMJGf
S56noemXUJGfS56nYfn1DJGfS56noWFOF5GfS56noVqPHiI/lzxPw+ZSDUV+
LnmuXE9eqMjPJc/TUHxynsjPJc/TULXXJ5GfS56nYdfi1SI/lzxXrmfwI5Gf
S56nYYTaJPJzyfM0xHj3F/m55Hkaoj8tF/m55Hk6fpmfK/JzyfN07B/8WOTn
kufpUDU4JPJzyfN0TMn+LPJzyfN03Os9TuTnkufp2FTutcjPJc/T8TGilcjP
Jc/T8dfISSI/lzxPV+rJCZGfS56no77zrcjPJc/TEXV/hMjPJc/ToW/WXuTn
kufp2GKyivxc8jwdVp9LIj+Xnw/TMbBSoMjP5fdB6fi+xnqRn0ueK69vDxb5
ueR5Og5u7yPyc8nzdHyboxX5ueR5OrZfGyzyc8nzdJzY/EXk55Ln6fhwcILI
zyXP0/F+/AmRn0uep6O8zzuRn0uep2OR45TIzyXP06GZ2Ffk55Ln6fAZ8Vjk
55Lnyv3/eFfk55Ln6bCk+Iv8XPI8HZHnM0V+Lnmejp9v9xH5ueR5Bt7VmiHy
c8nzDNSufEDk55LnGdhx/IHIzyXPM7Ck3XSRn0ueZyDlSYDIzyXPM9DReFjk
55LnGTg4tInIzyXPM+B/yFvk55LnGZhyfJfIzyXPM3An3Ufk55LnGfCdoxf5
ueR5Bpx1vUV+LnmegcV724n8XPI8A+tS34v8XPI8A6sOnRD5ueR5Bp4POyby
c8nzDOSvnCHyc8nzDPw2/zeRn0ueZ8AvZLTIzyXPM1A/TC/yc8nzDBgWdRP5
ueS58v4vPon8XPI8A/3GjhT5ueR5BmKXHRf5ueR5BlqcqCHyc8nzDLR51EHk
55LnGQhdESfyc8nzDBwYVkTk55LnGZi6+XuRn0ueZ6D95ukiP5c8z0DY8zci
P5c8z8Tj5JqVi3lfec48z0Shm1tFfi7nZzIRsJLyczk/lYmS5Sg/l/Nzmbj6
6JnIz+W8RSZcmyg/l/M2majvWCjyczlvlYnWS+JFfi7n7TLRq0dtkZ/L+YxM
BP8ZLfJzOZ+TiZ+P+Yn8XM5nZSKoK+Xncj4vE7l354n8XM5zZGJX5kCRn8t5
nkxcDksU+bmc58pEQd8rIj+X83zK+x/7V+Tncv4jE8emnxX5uZz/ycSQfvEi
P5fzX5m4uXWlyM/l/F8m4medE/m5nBfJxKzl80V+LueFMtHFf5LIz+W8WCb+
rEL5uZwXzMS6x19Efi7nSzIRWaKsyM/lfFEmslraRX4u58syUWXyA5Gfy/nC
TKCeSeTnch4lE19uGUR+LueRMrGgzQ6Rn8t5tEy0q9hI5OdyHjELtbwSRH4u
51eyUO3pbJGfy/mlLHTv1kTk53J+LQsTG7YW+bmcX8zCs3kDRX4u512yUFlv
Ffm5nHfKwsHHG0V+LufdspDYNkfk53LeMQsjF5UW+bmcj8nCil8CRH4u56Oy
cMc5V+Tncj4uC9MHNBL5uZyPzML5VeVEfi7nabLQdOAtkZ/Leaos5M8oKfJz
OU+XhVmFKD+X85RZ8JveR+Tncv4mC3P3bhP5uZy/ysKMBwNFfi7n77KQk+8W
+bmcv8xC4KVjIj+X8zpZ+Kn7QZGfy3mtLIw5ZhD5uZzXy8KlMwNFfi7nNbNQ
LuyByM/lfE8WNKE5Ij+X811Z2JPcVOTncr4vC40WDhP5uZzvzMLlU4EiP5fz
QFm48OSWyM/lPFgW/g2/IvJzOQ+YjU6N3SI/l/Og2Ui7cF7k53J+KBtVZjcR
+bmcH8uGqtcXkZ/L+cFsfK29QuTncn40G0P33Bf5uZw3ysat+l9Efi7nzbKx
r7i/yM/lvGE2Oo4sJvJzOW+ajR//bibyczmflI1fDO1Ffi7n07JRsrtd5Ody
PjEbo3yLivxczqdmI+XcJZGfy3mmbJyx54v8XM6zZePvVQ9Efg7+/jcbVxue
Fvk5OO9R7of/9yI/l/NP2Zj7panIz+X8WzZmHCku8nM5/5iNQglLRH4u51+z
4TVwh8jP5bxUNkYUp/xczstlI/p+pMjP5bxkNurmHRH5uZyXVa53qV7k53K+
Khsv500S+bmcr8tGzdUakZ/L+cps+MbOFfm5nK/NxpIzzUV+LuexsjHvXneR
n8t5vBz4Vx8l8nM5j5mDP22HRH4u53FzcOn5WZGfy/mtHIT12Cfyczm/lwN1
rE7k53J+U3mOW8JEfi7nd3MwKOe5yM/lvFcOxuy9J/JzOe+Xg7XhnUV+Luc9
c5DdYLjIz+W8bw4OWJaL/FzOh+XAN9Nf5OdyPjAH5q9bRH4u50NzsPOzXeTn
cj44B7u8T4v8XM6T5WDomA0iP5fzhDkYXKWTyM/lPGkOzi3KFvm5nCfOQbeX
XUR+LufPcnDTMknk53L+MAfrzvwg8nM5f5qD1inHRH4u549zkLU/UOTncl4t
BxvqlhX5uZxXzEHve0NFfi7nVXPQv0I5kZ/LeeUcdLz9u8jP5XxbDu5dSRf5
uZxvVM7vZoTIz+V8aw5O1LKL/FzON+fgc6qfyM/lPFwuVq3IFPm5nIfMRXBI
K5GfS57notDsayI/lzzPhbtiaZGfS57nIv2Hf0V+Lnmei2cxy0V+Lnmei+ut
TSI/lzzPxRHDIJGfS57notdP3UR+Lnmei7drG4v8XPI8F3+4S4v8XPI8F5G/
7BD5ueR5LkqNjBX5ueR5Lsp2zRD5ueR5Lra3aSHyc8nzXKwJDBP5ueR5LsYF
XRX5ueR5Lrb9UFXk55Lnuajct4vIzyXPc5Gf9Unk55LnuWhauqXIzyXPlfvR
ZJHIzyXPc9GxUH+Rn0ue5+KvqT+J/FzyPBcVi8WL/FzyPBffj5gk8nPJ81x4
N7eI/FzyXLkfnx6K/FzyPBeTlv8h8nPJ81wsGjlJ5OeS57m43ChQ5OeS57kY
02ClyM8lz/Nw/2KiyM8lz/NwMKudyM8lz/PgleQt8nPJ8zxUS0wT+bnkeR4a
TKgj8nPJ8zyMuFJa5OeS53n4fHmCyM8lz/Pg3r5W5OeS53lYs2qvyM8lz/PQ
2+tPkZ9Lnueh1IirIj+XPM/DnSd7RH4ueZ6H6CN1RH4ueZ6HA4Pqifxc8lyp
+yPKiPxc8jwPs8Iqivxc8jwP2vEtRX4ueZ6HEn+WEPm55HketjX6UeTnkud5
aFKwSOTnkud5sLgrivxc8jwPT0tcEfm55Hke9oTsFfm55HkehgdYRH4ueZ6H
hds+i/xc8jwP6w4/E/m55Hkesj92EPm55Hkevpjni/xc8jwP12aNE/m55Lly
vWv9RX4ueZ6HkfXMIj+XPM/HhXlzRX4ueZ6Pc2Wri/xc8jwfk5LCRH4ueZ6P
CXNaivxc8jwfc8ZsF/m55Hk+FrmKivxc8jwfI8MOiPxc8jwfZ7QZIj+XPM/H
zDV/i/xc8jwfBY38RH4ueZ6PP66sFvm55Hk+VlV7K/JzyfN8VNjUUeTnkuf5
eNeoj8jPJc+V8/2pmcjPJc/z0XeOSeTnkuf5sMesEfm55Hk+ehebKvJzyfN8
bP5WQ+Tnkuf5iDJmivwcnPfmo2W5cJGfI5V4no+BA5+J/FzyPB//Hhgs8nPJ
c+V6LU6Rn0ue5yNWVUXk55Ln+fD+7oHIzyXP83FtzWuRn0ue52PtIIvIzyXP
8/G8epzIzyXP8/HVJ0jk55Ln+Tge646wenskzwuwf/UMkZ9LnhfgeKFvIj+X
PC/AwzpmkZ9LnhfgsaGdyM8lzwtwr2OCyM8lzwsw+2hpkZ9LnhdgYeQNkZ9L
nhdgbrX1Ij+XPC9AevkqIj+XPC9A107JIj+XPC9AL3cVkZ9LnhcgxBEo8nPJ
8wL8Ui9F5OeS5wUYlFVB5OeS5wXIXKgV+bnkeQG23P4m8nPJ8wI0P/+dyM8l
zwtQ12uzyM8lzwswvWoHkZ9LnhfAeTVc5OeS5wXo+GueyM8lzwtwfVOiyM8l
zwtQoVymyM8lzwtQsWZ5kZ9LnhfgweeeIj+XPC9AbLO2Ij+XPC/An32Wi/xc
8rwAS9suEPm55HkBvms+XuTnkucF0G4aLPJzyXPl/O83I7+cea7F5afjyT/n
/a7FId/NIj+XfNei8xz3PPH3vP+16G2bLvJzyXstFoWFiPxc1gMt4s60Efm5
5L8Wv9cdIPJzWR+0SO5yS+Tnsh/QYlZUpMjPZb3QwpX+ncjPZX+gxRaMFvm5
rB9ajDjxWOTnsl/Q4uhyO/nnXE+08C16h/xz7h+06FZmDPnnXF+0aBbxC/nn
3E9osfi7seSfc73RQrPpDfnn3F9o4R4O8s+5/mhxaekU8s+539Ci4PVZ8s+5
HmmR+FpN/jn3H1q0WDeR/HOuT1qYh6WTf879iHL9b3zIP6dyNUOL+pNrkn/O
/YkWx6YFkX9O5Wa+Fq38DOSfc7+iRf/5J8g/5/xQi+bWa+Sfc/+ixafN0eSf
c56ofE4w3Sf/nPsZLXIPniL/nL+P1MIn+DH559zfaFG8yE/kn/P3k1qMqraS
/HPud7T4ZfJe8s/5+0otAup/Iv+c+x8tVqxbSv45f3+pXE/uWfLPuR9S7l/F
DuSf8+cfLbrPzSP/nPsjLXZHDiD/nD8PabF+1jnyz7lf0mKpqTL551xPtbgS
cIb8c+6ftKj+i438c66vWlzvepv8c+6nlPUyuCH551xvtUi9uo78c+6vtCjb
wJf8c66/Wpy9v4z8c+63lM9ZpaaRf871WNkvPweRf879lxZN3saSf871WYsG
w1aQf879mBZNPaPJP+d6rcXqK07yz7k/0+J9i9vkn3P91mJvhZ3kn3O/pkWb
QpPJP+d6ruxPdSj559y/aXGw33Dyz7m+67CqfTHyz7mf0yHeK4f8c673ys93
PiH/nPs7HVKSLeSfc/3XIdSRRv4593s6tNq4j/xz5oEOM06+JP+c+z8dFs8t
Tf4580GHIYtekX/O/aAOJTwW8s+ZFzoMvPgX+efcH+rw1zHr//jnyut6t8g/
535Rh3dFNOSfM0906BRqI/+c+0cdDs82kH/OfNFheDcn+efcT+rQ+lUd8s+Z
NzqMf9uC/HPuL3Wo+PkS+efMHx2Kz/pI/jn3mzr02XuE/HPmkQ4PdM/JP+f+
U4dJI/3JP2c+6fBT0EHyz7kf1cHZqTf558wrHY5OGEP+OfenOqwdUoX8c+aX
Dg/vbSP/nPtVHdKqjif/nHmmQ3BtJ/nn3L/qYI3cRv45802H7ebP5J9zP6tD
x5rDyT9n3unwtFoP8s+5v1X+vuZm8s+Zfzqkqv79H/9ch25L7OSfMw+V9dFt
Mvnn3P/q4LdkBfnnzEfl76/sJv+c+2EdutY+RP4581KHXcV+If+c+2MdYo9e
JP+c+SnuZw7559wv61Cjjg/558xTHbZsVZF/zv2zDpoAJ/nnzFcd3hatR/45
99M6zF5zlfxz5q0OFfbMIP+c+2sdFhVEkX/O/NUh40Md8s+539YhP9S9RPjn
zGMdhi0OIf+c+28dfgk5Tf4581lZP0UKkX/O/biyPst2Jv+cea3DnnL1yT/n
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
wvz6xcg/Z54r79e1CfnnzHMTUj3FyD9nnptwo9di8s+Z58r1rt5O/jnz3ITI
djfJP2eem1A4OYL8c+a5CckVKT+X85zK55QTOvLPmefK9e+fSP4589yEzyef
k3/OPDfB6ZhD/jnz3ITFT5uRf848N6F8UDfyz5nnJpRo60X+OfNcud5ylJ/L
eVATJoecIf+ceW5Cd6+95J8zz02YkaMl/5x5bkLu/lDyz5nnynoxPSP/nHmu
3J8jd8k/Z56bcDimE/nnzHMTXjYZRv4589yEtrZl5J8zz034MfMW+efMc+Vz
3efN5J8zz03Y+t5G/jnz3ITxXqfIP2eeK+c3ZD3558xzE16X7kj+OfNc+fnU
LPLPmecmzPTvTP4581xZH2kTyT9nnpswdVc58s+Z5yaYA4+Sf848N+HYqk/k
nzPPlfMvXob8c+a5sn+ODSH/nHmuHN9Uhvxz5rlyf/ZPJv+ceW5CoS1p5J8z
z034e2c4+efMc5PS31vJP2eem1Dsqe//+Odm+A7OIP+ceW5G6cstyT9nnpvR
tfNV8s+Z52b0SStJ/jnz3Iy28dfJP2eem1HzyjLyz5nnZlRxGMg/Z56bUf3J
QPLPmedmxH3rQv4589yMdepG5J8zz81o86IU+efMczM+528j/5x5bkbtH2LI
P2eemzHcmkb+OfPcDG1uM/LPmedmlN8SSv4589yMn7ddIf+ceW7G328qk3/O
PDejr60T+efMczMmnvxI/jnz3IzQJy3IP2eeK68jF5B/zjw3Y7pvX/LPmedm
2MuUJ/+ceW5GuF8s+efMczOqWSeQf848N+NpsIn8c+a5cv8WPCD/nHluxoIq
v5N/zjw3I0k/gfxz5rkZS99+JP+c80Qzdr5aTv4589yMoeoE8s+Z52Yc+Lst
+efMczPerBpH/jnzXDn/5anknzPPzVivq0X+OfPcjFpdSpF/zjxXzrfTePLP
medmfKi6hvxz5rkZn4rvIf+ceW5G1aQ55J8zz81YGHeZ/HPmuRkX++4m/5x5
bsbvtWuTf848N+NGaB3yz5nnZugjS5F/zjw349G4CuSfM8/NSEtoQf4589yM
s/nfk3/OPDfj49Vy5J8zz82ouGAh+efMczOOrKtA/jnz3Iyy2y6Rf848N+P4
0D3knzPPzagEM/nnzHMzbKpA8s+Z52a8K/OU/HPmuRmeHu3JP2eem/Hvn/PI
P2eemzEubgz558xzZb0U3CT/nHmu/P5hI/nnzHMLIuJnk3/OPLfg/vqq5J8z
zy3wGh5K/jnz3IIu31qQf848t6BNwFbyz5nnFjSfXYT8c+a5Be7u+8k/Z55b
0Ns7nfxz5rkFxVI3kX/OPLdg775/yT9nnltQuOwq8s+Z5xbU2xhA/jnz3IJ3
ae3JP2eeW7B7Vy/yz5nnFvy6vAn558xzC9oHGsg/Z55bUKTbavLPmecWzJ/x
B/nnzHMLgjpUJ/+ceW7BMK8M8s+Z5xZ8/TOU/HPmuQU1rjwh/5x5bsHt/IHk
nzPPLbg60kH+OfPcgnHjK5F/zjy3oOrke+SfM88t8At7Sf4589yCwAsm8s+Z
5xaMXxJD/jnz3ILnpi/knzPPLYht4xL5ueS5Ba2DppF/zjy34OjoCPLPmefK
+y83kn/OPLdgU7+25J8zzy3I3hVH/jnz3IIy2SXJP2eeW7CjyXXyz5nnFjjm
riX/nHlugXFqJfLPmecWfNyRSP4589yC0UMrk3/OPFeex6BP5J8zzy0YuziJ
/HPmuQXfd/yJ/HPmuQWdNfnknzPPLVioiiT/nHluwYOCIuSfM88tGHH2L/LP
mefK+p7Rjvxz5rkF602h5J8zzy2YsyGH/HPmuQX/fI4n/5x5bsFd73Tyz5nn
Fiye/QP558xzZb9V6UH+OfPcAs3yNuSfM88tqPbPUvLPmecW6NfPI/+ceW7B
qOXjyD/n07OgUuBA8s+Z5xbMVDX9H//ciqNJ3uSfM8+t8Lb8Rf4589yKzDtO
kZ9LnlsR33Ma+efMcytcPweTf848t2JSVivyz5nnVsTO7Uf+OfPciolb/Mg/
Z55bkV43gvxz5rkVf7cqSv4589yKyjtGkX/OPLfCmPKQ/HPmuRXDXljJP2ee
W7FhqD/558xzK5qP+Y38c+a5Fd1qtyD/nHluxfVho8k/Z55bUTfwNfnnzHMr
DpzsRv4589yKeZrfyT9nnltRUPYM+efMcytqlAP558xzK268H0/+OfPcikcn
U8k/Z55bsezH0+SfM8+V879Rg/xz5rkV/f2/kH/OPLeinUNH/jnzXDn+k2Pk
nzPPrcjrc5X8c+a5FYaQb+SfM8+V8+11j/xz5rkVWcknyD/neSErStZ5RP45
89yK3JE/kn/O80NW3JqznPxz5rkVpW/tJv+ceW5Fg+UfyD9nnlsx+eti8s+Z
51aUwRnyz5nnyvOc1Y78c+a5Fd+e55B/zjy3QtOsP/nnzHPleT87Q/4589yK
tIGVyD9nnlvxvJoP+efMcyviNlvIP2eeW1Ht0C3yz5nnVgRdrE/+OfNc+ftC
a8k/Z55bcWH9DfLPmefK/fxhKfnnzHPlfGZMIf+cea4cf9UX8s+Z51aE140h
/5x5rhzv32XknzPPrVg38Tfyz5nnVlwq5iD/nHluRfCeW+SfM8+tWLlsO/nn
zHMrCk+dSP4589wK9/lg8s+Z51Z0vjGU/HPmuQ3lTxYl/5x5bsO8R1nknzPP
bSiie0T+OfPchrkDzeSfM89tmDQtlfxz5rkNr7L2kH/OPLehcLEX5J8zz22o
GVmS/HPmuQ2l41+Qf848tyHxTzP558xzG7r+tIn8c+a5DYeKW8g/Z57bcP+Q
H/nnzHMb6i5/Rv4589yGl32t5J8zz20YHK8j/5x5bkOXO3byz5nnNnh1qk3+
OfPchofdm5N/zjy3wb/vRfLPmec2pCe/J/+ceW7DnyUPk3/OPLeh0YJn5J8z
z22oFXyT/HPmufLz4QfIP2ee2zDjSU/yz5nnNkxM+I38c+a5DWeDK5F/zjy3
oXuXreSfM89tCD47jvxz5rkNDa/ZyT9nntvw5I+t5J8zz214uimQ/HPmuQ3J
14eSf848tyHhKsg/Z57bcNTvL/LPmec2FD1wnfxz5rkNKd/ZyD9nntugCplI
/jnz3IaZJZaTf848t6E5dpF/zjy3ofKjA+SfM89tcJ5tTv4581y5379eIP+c
eW7D99os8s+Z58r9e3GK/HPmuQ1LG3mqCf+ceW7DmJkO8s+Z5zaUuFaH/HPm
uQ0T6lwh/5x5bsOjttPJP2ee2xB47Bv558xzGxxLa5N/zjy3QbPRJfJzyXPl
ftYOJv+ceW7D33+dIv+cea48n3ue2cI/Z57bsOFVR/LPmec29H5Tl/xz5rkN
oa625J8zz22ISttE/jnz3IZ3Pe7/j39ux9TWVcg/Z57bUb/7VvLPmed2+Mxa
Tv4589yOuF9N5J8zz+24d/Mi+efMczuqbXpC/jnz3I5FWUXIP2ee25H2KZr8
c+a5Hc/9fyH/nHlux4vA9eSfM8/tOGONIv+ceW7HjMdx5J8zz+0oiXvknzPP
7TCPqUL+OfPcjpfLB5J/zjy3I+lyVfLPmed2nNgaR/4589yOmG7LyT9nntux
YOkg8s+Z53b83HcQ+efMczuqts8i/5x5rvx+7Z/JP2ee2/Gu6RTyz5nnyv29
c4/8c+a5HUW7HyH/nHlux+Yphck/Z57bkXBvBfnnzHM7vrunI/+ceW7HFt9M
8s+Z53acuzic/HPmuR3+3Y6Rf848t+OZzxXyz5nndswdlUD+OfNceX5tK5N/
zjy3Y2m30+SfM8/tqL66LfnnzHM7vsX+RP45zwfboauZRv4581w539OvyT/n
eWE7fmzThfxz5rkdjh/7kX/OPLfjz/PDyT9nntsRcmkC+efMcztOZ/Qm/5x5
bsftynfJP2eeK3/vHUn+OfPcjn/2/0v+OfPcjr6FVeSfM8/tWGaZTf4581y5
/1MHk3/OPLfj2vog8s+Z58p+mJZK/jnz3I4Mv47knzPP7ThStjv558xzO/5N
rkv+OfPcDsvnIPLPmed23BmQTf4581xZ7x3ek3/OPLcjfuEK8s+Z53bMG3Wf
/HPmuR2zRurJP+fyYkfO8j7knzPP7QjVLSH/nHnuwC8+WeSfM88d2L71Afnn
zHMHys7eT/4589yBFR0/kX/OPHcg79Ro8s+Z5w4ELnpB/jnz3IF+vX4h/5x5
7kCtD+PJP2eeO/DrH8fIP2eeO9ByWwD558xzB1oNHkb+OfPcgU2ffiX/nHnu
wJ9nzOSfM88daOB1gfxz5rkD0WEfyD9nnjuQlbqG/HPmuQODtwwk/5x57kD7
Gb3IP2eeO2AcmU/+OfPcgdKnBpJ/zjx34PymQPLPmecO9DrpTf4589yBmA1H
yD9nnjvwc+Rr8s+Z5w7cHHCc/HPmuQPFX/Yk/5x57kCLj/fJP2eeK89jrD/5
58xzB+xb/cg/Z547UGJ8GvnnzHMHHm7oSf4589yBs4Wnkn/OPHdgSbl95J8z
zx1oeuUu+efMcwdOj51C/jnz3IG5xpfknzPPHRjd8yD558xzB2rebkj+OfPc
gYQyY8k/Z547UKrxDvLPmefK612nyD9nnjuws76W/HPmuQNH9GPIP2eeO/B+
bGvyz5nnDkyNDiD/nHnuwKF7R8g/Z547sOHUIfLPmecOWLRTyD9nnjtQqfxI
8s+Z58r6PedF/jnz3IGSXwvIP2eeO9DnWGfyz5nnDlws/4H8c+a5Azu8hpB/
zjxX1tv7Q+SfM8+V/dC7CvnnzHMHmj35lfxz5rmyn4KiyD9nnjvg7+/cKPxz
5rkD2YcKkX/OPHfA67vx5J8zz5X9tebO//jnTrRs59W+sPeV58xzJ96vOEj+
OfPciVdr25F/zjx3YnJyDfLPmedOaGLpv98u5+GcaPWU/XPmuRNt49g/Z547
kemKI/+cee5EzBLKz+U8nBMV+1N+LufhnPCP8iX/nHnuxNORlJ/LeTgnvvj8
Sf4589yJT5cHkH/OPHciZUYC+efMcyf2+V4i/5x57kRWyHXyz5nnTtxY6kP+
OfPciflNY8k/Z5470a/7cvLPmedO3P+F8nM5D+fE5oaUn8t5OCfmDKL8XM7D
OZF86hT558xzJ8o1ofxczsM58XBKafLPmedO5C22kn/OPHdi2e575J8zz514
19lA/jnz3IkHt3XknzPPndhbcxv558xzJ17m1Cf/nHnuRO5PceSfM8+d+GPm
TPLPmedOBIc0JP+cee7E4su/kH/OPHeixbd+5J8zz52o0s9M/jnz3AmHbR35
58xzJ9InZZJ/zjx3InBLCfLP2QdyopTfK/LPmedObF80h/xz5rkTm+40IP+c
ee5Enagy5J8zz52w+viRf848d6KRf3Hyz5nnTljUh8g/Z54r6+tEL/LPmedO
fH24hfxz5rkTfSP7k3/OPFfWc1HKz+U8nBOnbx0h/5x57sTY7vvJP2eeO9Fs
r478c+a58v47+5N/zjx3wnX3HvnnzHMnOlzPIv+cee7Edb/G5J8zz5341noI
+efMcyeKj/pI/jnz3ImLs/zIP2eeK+tv5SXyz5nnLlx44SD/nHnuQpU2Z8k/
Z567UCyvIfnnzHMXXj/9RP4589yF0f8sJf+cee7CQ/0d8s+Z5y7kbfhE/jnz
3IWn4/zIP2eeu9D3eBHyz5nnLtR80Zj8c+a5C00atiX/nHnuwo8zLeSfM89d
GBdYiPxz5rkLRR+cJ/+cee5C4He55J8zz12IWn2X/HPmuQtVa54g/5x57kKq
T1Hyz5nnLuB2I/LPmecu/LXwO/LPmecuTLm5kPxz5rkL/r7byD9nnrsQNsOP
/HPmuQsHfqD8XM7DuVC852Hyz5nnLowI0JJ/zjx3ofqjCeSfM89dePbiGfnn
zHMXdtek/FzOw7lwNrYp+efMc+V68rqSf848d2HDsJHknzPPXdjV+CD558xz
Fxpl+ZB/zjxXrmfmHvLPmecubHMVkH/OPHdBcy6E/HPmuQtzi1B+LufhXEg7
d4f8c+a58vepHck/Z567ML/VUPLPmecu+LiWkn/OPHeha/ZN8s+Z5y5U+vw3
+efMcxc6vLWSf848dyF86Enyz5nnLrTst478c+a5C6FFOpB/zjx34ePYTPLP
mecuVL7Yifxz5rly/IgJ5J8zz114saos+efMcxeaPzpC/jnz3AXfqR/JP2ee
K/tHW4r8c+a5C6fWDyb/nHnuwoKo0uSfM89d6LZkEvnnzHMXDk1LJf+cea6s
71lh5J8zz13oF2Yh/5x5rtzPw//+j3/uRun66eSfM8/dmLHmF/LPmeduHCxz
hfxz5rkbp+6XIP+cee7GXt9r5J8zz91Yv3Qp+efMczc2vdWTf848d+PA5gHk
nzPP3Zh6tjP558xzNyoXa0j+OfPcjeS/S5J/zjx348itreSfM8/dKBYURf45
89yNUfdTyT9nnivHu9aU/HPmuRu/I4T8c+a5G4dxmfxz5rkbjddWIv+cee5G
db+O5J8zz92YPvQD+efMczd+mtec/HPmuRtDt80n/5x57kat8X3IP2eeu2F6
9AP558xzNyqMiyH/nHnuxrmz48k/Z567sWelkfxz5rkb3SrcJ/+cee5GypNJ
5J8zz924cWg8+efMczeOzvhA/jnzXHnefywj/5x57karuDjyz5nnbiTU/JX8
c+a5G4t/Gkv+OfPcjWrlUsg/Z5678d32muSfM8/dqB1Ugvxz5rkbuwPHkX/O
PHfj0Y1V5J8zz91oe3wX+efMczdKLJxN/jnzXDmfOZfIP2ffV7k/ITvJP2ee
u5F6vSb558xzNzQTapN/zjx34+TkkuSfM8/dsCeUJ/+cee7G62nNyT9nnrtR
c3Ex8s+Z525kNy1L/jnz3I24gvnknzPP3SjpKk/+OfPcjdbfXST/nHnuxoJP
u8g/Z567ceGxkfxz5rkbPdZ8JP+cee7G162PyT9nnrvx4VFb8s+Z5250TZlL
/jnz3I27I0eTf848dyN9qh/558xzN64VN5B/zjz34PrwWeSfM889mF5Qmfxz
5rkHyZpg8s+Z5x749m1O/jnz3IMdrbeQf84892B+eCHyz5nnHvxyfR/558xz
D2YFpJJ/zjz3oM6QjeSfM889uGi5Tv4589yDqstWkH/OPPegW/or8s+Z5x5k
DWxH/jnz3IPHBT3IP2eee7AoqhH558xz5Xx/0ZN/zjz3YIHPSvLPmecemN9O
Jv+cee7B6qNVyT9nnnvw8+008s+Z5x68+xhM/jnz3IMeRR+Tf84896DEoAHk
nzPPPWjnZyP/nHnuQe37Fcg/Z557UOvRHfLPmecemFq8IP+cee6Bt9NA/jnz
3IO2n6LIP2eee5Ax+DP558xzD8btcJB/zjxXjttwKvnnzHMP3t8II/+cee7B
vx/15J8zzz1YdbIN+efMcw8GJcSQf8489yC2awnyz5nnHnxac5X8c+a5B3ee
rSb/nHnuQaN7Fcg/Z557sDY6nvxz5rkHu30qkn/OPPeg+ckP5J8zzz04/zKB
/HPmubI+t/5I/jnz3IMbZfLIP2eeK8cfGk7+OfPcg9+7FSb/nHmu3Pe8jeSf
M8+V///Or+SfM8+V+9YzhPxz5rkH9z9lkX/OPPfgn6px5J8zz5Xfu5xK/jnz
3IP0u2XJP2eee1BqGsg/Z54r6/VlK/LPmeceJEQvJv+cea48pw9zyT9nniu/
/2IM+efMcw9GVRpA/jnz3IONAxv/j3+uUh8sRvk547qwSt2hxybyz5nvKrWf
y07+Oe9/lfrA7inknzPvVeoLM7+Sf871QKW2t2lJ/jkfUKVedK8P+edcH1Rq
/Zd/yT/nfkClXv9nGPnnXC9U6vqrC5N/zv2BSv06ZCT551w/VOrbLR6Qf879
gkpdp6SF/HOuJyr1vGM3yT/n/kGlbn/Oi/xzri8q9ew5zcg/535CpXYdH0X+
Odcblfp8pVfkn3N/oVJ3T+9C/jnXH5V6aMnJ5J9zv6FSF/c+Tf451yOVeql3
N/LPuf9QqXtU8Cb/nOuTSn0kI5n8c+5HVOpTE0+Sf871SqU2W6qRf879iUpd
1h1I/jnXL5V6VH8t+efcr6jUDUocJf+c65lK/fHgZfLPuX9RqVvWiST/nOub
Sn30wB3yz7mfUandrY+Tf871TlkPCx+Qf879jUqdfr4c+edc/1TqRk+Wkn/O
/Y5KXajQLvLPuR6q1KffvSP/nPsflXpCnUXkn3N9VKkP7z9N/jn3Qyp1uae/
kn/O9VKl3lo+m/xz7o9U6iIb+5J/zvVTpW5V3of8c+6XVOq5ZyuQf871VKXO
WniK/HPun1TqmzEm8s+5vqrUJ3L8yD/nfkql/t5Vl/xzrrcq9Q3v1eSf838P
QKUe9u0a+edcf1XqsXMXk3/O/ZZKvfbl7+Sfcz1Wric8kPxz/u8FqNQnN0SR
f871WTn/kkvJP+d+TKVOfuJF/jnXa5U6ZbqN/HP2D1VqXZ4f+edcv5X9FLGV
/HPu11TqtIDx5J9zPVepP3wXRP45+wwqta3sEPLPub6r1I89hck/535Opf6h
Vib551zvVeqzYx6Sf87zkSp16dtG8s+5/qvUlsBk8s+531OpZ3rtJv+ceaDs
z4XPyT/n+UnlenqWIP+c+aBSfxuoIf+c+0HlfKON5J8zL5T98tcG8s95HkOl
frbSRP4580PZH9/5kn/O/aJK/U/mE/LPmScqtfdjM/nnPK+hUlfz0pJ/znxR
7n8TG/nn3E8q6+1WTfLPmTcqdcMHTck/5/xHpZ724jz558wflTpk4jvyz7nf
VKkvbT1I/jnzSKW+nvuE/HP+Pkmltg7zI/+c+aRS9wn6h/xz7kdV6qSuPcg/
Z16p1K2njCL/nPtTlTr6t4rknzO/VOrPLzaTf879qkod2Ggs+efMM5V6d2sb
+efcv6rUh3I2k3/OfFPWQ+lP5J9zP6uszw5DyD9n3qnU5Tt0J/+c+1uVekj3
TeSfM/9U6hb1rpF/zv2uUk+OWcg/Zx6q1F1nTCD/nPtfhStnlpJ/znxUqddE
7CD/nPthpX6M3E/+OfNSpV7XpRn559wfq9Qlgs6Rf878/D+m7jpcyrLt4jDT
Hc9skFRAkJCSDolFI400iIQ0EsKL0t3S3S3doXSJdHdLg3R3fLfr2sfn9SeH
vOw9M8/cv2e9s09IgD+G3aY/l/vlBNhWfwr9ufQ0ATrsef/v5+fx988J4Pa/
oT+XviZA1Qqp6M/lfjoBvt/9G/259Nb048IP9Odyf50AKHaa/lz6mwBJU6Wk
P5f7bdO/LO/oz6XH5no6fJj+XO6/E+BZjin059Jn83w2+/Dv5+fx9+MJ0Pnn
vPTn0usECHVNTX8u9+cJ8MvanPTn0m/z/czoRX8u9+vmvHm/RvlzGwY++IT+
XHpuQ9b3/ejPpec2dMrYkf5cem7DvBdP6c+l5zY0+98c+nPpuQ3bSm+gP5ee
2/B8pZ3+XHpuww/jz9KfS89tyN4jC/259NyG3FO6059Lz214u+cM/bn03IZ9
Qy/Qn0vPbfgpbg39ufTchlZZE9OfS89t+LLSN/Tn0nMb6vdOQn8uPbfhix8u
0J9Lz23omaIj/bn03Ia46mXpz6XnNlzNUJb+XHpuHl+y2/Tn0nMb2ntS0J9L
z204EdeQ/lx6bkO96Wvoz6XnNjTKNE79++c2xL610Z9Lz23oO/9n+nPpuQ1/
L3hEfy49t2HEnFv059JzG25OrUR/Lj234ZN8E+jPpefm+Z8yj/5cem5D2aqX
6M+l5zYUy/0J/bn03IZdmEp/Lj23YX3PnPTn0nMbNlyP0Z9Lz21Il/E6/bn0
3IY2C3fQn0vPbTiMAvTn0nMbPGlK0Z9Lz23Yu7YS/bn03IbkR+vQn0vPbRiZ
uDj9ufTcvN7lV9GfS89tODPmJP259NyG6YcX0Z9Lz83zW/LDkn/9ufTchiRF
mtOfS89tuLe8rPr3z2346/Ah+nPpuQ2DN1ylP5ee27DZl5f+XHpunr82BenP
pefm+S2dmv5cem7DN3kP059Lz21IsO42/bn03Ibji3bRn0vPbUj0T0f6c+m5
DU2OrqE/l57b0PLEI/pz6bl5/d8Xpz+XnttwpXt7+nPpuQ2BbLfpz6XnNvRK
8Tv9ufTchqBzJP259NyG8Wf20p9Lz224W7Q6/bn03IanybfSn0vPzfX6JDP9
ufTchiHd69CfS8/Nr5NNoD+XntuwqeSf9OfScxsuRSrSn0vPbWg9Nof6989t
qNz6Of259NyGCulm059Lz234auke+nPpuXm9dnShP5ee2/Co2Tf059JzGzJU
LEZ/Lj23ITXu059Lz20YPvwb+nPpuQ05O++nP5ee25BtYm36c+m5DYX6jaU/
l57bUOTmdvpz6bkNjh8m0J9Lz835cwP059JzG269WkN/Lj23YfKo5fTn0nMb
DuxbQn8uPbdh3cJr9OfScxsSnwX9ufTchhtNG9KfS89tCPUYRn8uPbdhZarV
9OfSc/P7LzSgP5ee27Cg7zb6c+m5DS/Pj1L//rkNG2t8QX8uPbeh3OYa9OfS
cxu6Xh1Ify49t+F+pSn059JzG3559oD+XHpuw/cHa9CfS89t6JI2G/259NwG
a+MO+nPpuQ3tloylP5eem9dz4Wj6c+m5DWfjGtKfS89tcJetTH8uPTd9eViF
/lx6bs6bnA/oz6XnNkyL5ac/l57bkHL2bvpz6bkNqWaUpT+XntvQEKPpz6Xn
5vy7nYj+XHpuw9LB2enPpeemTwdO059Lz21IluD1v5+fx/fcvB8Kflj/rz+X
npvn/0M1+nPpuTnvTixQ/tyObk+OXv9Ye35h6bkdGWtOoT+XntvRd0c++nPp
uR3DM31Gfy49t2P/wa3059JzO8579tOfxw9+fPdB/Ln03I5cT/j5efzP09mR
sKD4c+m5HT9dO0N/Lj23I+Vofn4e//M3dmx5Vpf+XHpux94v+fl5/M/j2FE3
BT8/j//5Ozty775Efy49t6Pry7n059JzO465+fl5/M/r2JFj9DT6c+m5Hdty
nKc/l57b8fVXHenPped2rJk6g/5cem5HtcE/0p9Lz+2YO+c7+nPpuR3P/5lC
fy49tyNzqwP059JzO5ZPCtCfS8/tqDnjJf259Nw8/qVr6M+l53akqfKE/lx6
bsfLzY/oz6XndpRNOYD+XHpuR9MraejPped2LPtwnv5cem5HtHRT+nPpuR2e
BV/Qn0vP7ZjWLgv9ufTcjt4TStGfS8/taPb2Gf259NxcD3O60Z9Lz83r9f4m
/bn03I6bSb3059JzO6Y+2U5/Lj234+6KFvTn0nM7+t1PS38uPbdjaYifn8f/
PJIdXx5aSn8uPbcjyXkP/bn03I7RTcbQn0vP7fh7fTH6c+m5HQuP9aM/l57b
8c/d0vTn0nM7Bse9oz+XntsxbMM4+nPpuR0fi42kP5fPR+yYN+wR/bn03I5s
/UvTn0vP7bi4cA39ufTcjtOTbtOfS8/teDUxPf259NyOFInL059Lz83Xy7mX
/lx6bkeL4kvpz6Xn5vuvMJf+XHpurpdRb+jPpefm+no/nf5cem7+/NVf0J9L
z+2Y2X0f/bn03I6i5TvQn0vP7Wi3cBX9ufTcjiHZ99GfS8/tyOpeSn8uPbfj
KOz059Jzc740Sk9/Lj23o8+fOejPpefm+v34nP5cem7HxvoJ6M+l53ZUKDmL
/lx6bkfSEXfoz6XndnzycRX9ufTcvF7TJtKfS8/tqJLUQX8uPbdja/p09OfS
czscVxz059Jzc30lb0t/Lj03X+/KAPpz6bkdBycspT+XntsRV+Qk/bn03I6c
bcbSn0vP7fA/eEh/Lj23o+3luvTn0nM75tzYRH8uPbcjbdEW9OfSczsOv8tI
fy49t2NtgJ+fx//8p3n/tKxCfy49t2N10dH059JzO+5/nEZ/Lj03f363ofTn
0nM7pkf4+Xn8z4/ZMXnlUfpz6bkdD6Ob6M+l5+a8XrqK/lx6bq6P+3npz6Xn
dqTLW4H+XHpuh8/Oz8/jf97Mjib3ltGfS8/NeXagD/259NyOx3++pD+XnttR
ruxk+nPpufl66EZ/Lj2348yb3PTn0nM7VlW4RX8uPbdj9/h89OfSc3N97apL
fy49tyPWPER/Lj2348ffxtGfS89NHyrspT+Xntvx+rSf/lx6bkfLxuXoz6Xn
pkebA/Tn0nM7rlSrR38uPTfPf4lr9OfSczu6lDxOfy49N9fn8hf059Jz835q
s1j5cweavr1Ofy75dWBl5Sz059JzB+5d/o3+XHruwIOBXvpz6bkD17otoD+X
njtwtGgH+nPpufn9ox7Tn0vPHXBULEN/Lj134Hqz/PTn0nMHZu9PS38uPXdg
TGkf/bn03IHa7fvTn0vPHbg54gz9ufTcgfL/u0Z/Lj13oFiTjPTn0nMHFr8+
Qn8uPXfA92ou/bn03GH6nYj+XHruwNNGeenPpecOtLDtoT+XnjtQ8bNM9OfS
cwc25mlNfy49d+CMtwT9ufTcgVtNIvTn0nMHyjnO0Z9Lzx1I8k0d+nPpuQP1
Uz6lP5eeO1Bz/Rr6c+m5+fr169GfS8/N65mnDv259NyBde499OfScwf6fuxA
fy49N4+/ywX6c+m5Awk3ZKc/l5478OnSGvTn0nMHMs6/Qn8uPTd/3mef0p9L
zx3wN/HSn0vPHXhdvxb9ufTcgcmFOtGfS8/N65txCP259NxcTx+a0Z9Lz83z
82oO/bn03IER3w+mP5eeO9Ag96f059JzBw7c+Iz+XHpuXv9bXvpz6bkD+Zta
9OfScwcm/PMl/bn03IHRz53059Jz8/wsDdKfS8/N9dmuNf259NyBn7tZ9OfS
cwcq9J1Nfy49d6B4mSH059JzB7LmeUp/Lj13oM/zPfTn0nMHDn1cR38uPXdg
QPac9OfScwf21W5Jfy49d8C7pxr9ufTcfL9nltCfS88dmNT1Mf259NyBrjua
0p9Lzx0INviE/lx67kCzbEfoz6XnDkTXfkl/Lj134OL0vvTn0nMHFhRNQH8u
PXegVqLh9OfScwd6Zb1Gfy49dyDf7z3oz6XnDqypv5D+XHruQIYLHenPpefm
/Vx+O/259Nw83hU56c+l5w5cqQr6c+m5AwsLpqM/l56b82jkI/pz6bkDpz/+
TH8uPXfgl/Tf059Lzx1I8TIx/bn03IHL0ev059Jz8/7OcIT+XHpurr+G6+jP
pecO1Jlfmv5cem7ef75X9OfSc3N9R+Poz6XnDnwWt4r+XHruQN6BW+jPpefm
61d7Qn8uPXcgkOYM/bn03Px67n76c+m5A0f+fk1/Lj134HjXhvTn0nMHXiY4
Tn8uPTevR8rH9OfSc3O+PfyK/lx6bq73HOfoz6XnDswd4aE/l56b8/zQPPpz
6bkDDSOd6c+l5+Z8csfRn0vPHUiX6SL9ufTcPD8P4ujPpefm8d7ZTX8uPTev
b/QS/bn03FwvJyP059JzB6zv7tKfS8/N9T31OP259NyBd0MS0J9Lzx24UKAn
/bn03IFYghz059JzBxYNP0J/Lj134Fni2/Tn0nMH+jU5T38uPXcg8ZOr9OfS
c/P+TxCiP5eeO5BjeSH6c+m5eb8Es9GfS88dGP/FT/Tn0nPz/k3Ykv5cem4e
X6AG/bn03Jy3DUrTn0vPHRgyNp3y504MylSb/lx67oTr157059JzJ5qUfk1/
Lj13Is+pBvTn0nMn8q08SH8uPXeif7cs9OfScydefShOfy49d+KXJIvpz6Xn
Trh/P0Z/Lj13Ys2fCejPpedO1E9Rhf5cem5+/cta+nPpuRPXqz6nP5eeO1Hm
6lL6c+m5E9nuVqE/l547MWBNRvpz6bkTRa9/S38uPXci2nAb/bn03IkLXxWg
P5eeO5G6ej36c+m5Ewl/m0J/Lj13YvNvX9OfS8+d2Fe/Fv259Nw8nzmv0J9L
z534feEk+nPpuXl8JZLSn0vPndhbdj/9ufTciabjHtCfS8+dGFNjHP259NyJ
iVfm0p9Lz51o1PYk/bn03ImcV1bSn0vPnfD0nkB/Lj13IrJtLf259NyJM09C
9OfSc/P1Ah3oz6XnTtyvMpj+XHruRDDpLvpz6bkT33ZoS38uPXci8fUp9OfS
c/N8RnLQn0vPncjS9Db9ufTciRInStCfS8+dCDebSn8uPXfi7vMY/bn03Lx+
uyfTn0vPneiZ4xn9ufTciaTFl9KfS8/N9Vs9Nf259Nw8vtWd6M+l507cyb6A
/lx67sSGv9rRn0vPnZidoj79ufTcifdf7ac/l547Uf7Cafpz6bn53zdrT38u
PTfXX7Jv6c+l504k/+sl/bn8fKMTHyospT+XnjvRPG9/+nPpuRPb09WhP5ee
OzGy+SH6c+m5E0val6M/l5470aCxjf5cem7+e7+b9OfSc/P+3vI7/bn03IlZ
SZ/Sn0vPnRiR+wr9ufTcnBebh9CfS8+dqHt+E/259NyJKcs89OfScyfm/rGZ
/lx6br5+maf059JzJ4o87k5/Lj134vztp/Tn0nPzev2ymP5cem7Olzob6M+l
5048yPKc/lx67sTF3Q/oz6XnTqSb8ZL+XHpuzpv0n9KfS8+dGJ4tI/259NyJ
QIFZ9OfScyc2nfmL/lx67sQJ+2j6c+m5E+lbbqA/l5478eehJfTn0nMnfqg8
gv5ceu5EjS1F6M+l507YbnxLfy49d8J3Lo7+XHpuzodSfenPpedO7FxWg/5c
eu7Ew/Uv6c+l5+a86diX/lx67kTBiXvpz6XnTlTdWY7+XHruRPG/CtKfS8+d
eHOwJ/259Ny8vmvm059Lz815m+kF/bn03ImOb+rQn0vPnXidqwP9ufTciUOt
B9GfS8+duHlnBP259Ny8nicz0p9Lz5347MeZ9OfScydaZrpFfy49dyLRx0n0
59JzJ35s8Y7+XHruxPwlr+jPpefmen78Gf259Nw8ntZz6c+l506k7NeI/lx6
7sSCuyfpz6XnThTY/yn9ufTciT7n3tCfS8+dSNvjEP259NyJWtcm0Z9Lz53o
lPQ9/bn03Il2X+ahP5eeO3Hsq1T059Jzc961zkF/Lj13YnGtnvTn0nNzvq5b
rfy5C/MWJ6I/l567kGlTX/pz6bkLte50oD+XnrvQav0T+nPpuQsJ88+mP5ee
u1A7vJ7+XHruQrcuNvpz6bkLlxqcoT+Xnrsws2xm+nPpuQtTW3SjP5eeu/D9
pNP059JzFzLXP09/Lj134fitVfTn0nMXjjo/oT+XnrswMX0Z+nPpuQun6yam
P5eeu7C4yHn6c+m5C5+87UB/Lj13YVPub+jPpecuzAp8Q38uPXfh8Meb9OfS
cxeaP0hGfy49d+Gfd/Xpz6XnLowZvJr+XHpu/vwkY+nPpefmvxdNQH8uPXch
26SO9OfScxfWTX1Ify49d2HCpJv059JzF1KNq0h/Lj13oV+O8fTn0nMXfBN/
oz+Xnrvw5bcX6c+l5y7Uy5OI/lx67kLqElPoz6XnLtTon4P+XHruwpR7Fv25
9NyFCjmv0Z9Lz83rvXY7/bn03IWhlfLTn0vPXYjlKkl/Lj13Ie3eivTn0nMX
Or2rRX8uPTevZ+mi9OfScxc+772C/lx67kLxg8fpz6XnLuwILaQ/l5678HTg
u38/P4/vuQsbBjSlP5eeu1DtXRn6c+m5C69THaQ/l5678Gv0Cv259NyF0Y1z
059Lz114eLAA/bn03IW5i1PSn0vPXVg28yD9ufTchbLpbtGfS89dcH32F/25
9NwFZ8P/0Z9Lz13oUHE1/bn03IXWNR7Sn0vPXbjcrxj9uXgGF+b7fqI/l567
kGDbTfpz6bl5fletoT+XnrvgnzGc/lx67sL0Tnvoz6XnLthuVaU/l567kHTX
Zvpz6bkLW2dloj+XnrtwMXtt+nPpuXk+j4+jP5eem8fv3EF/Lj13Yfjx8vTn
0nMXitbLTn8uPXeh0tfP6M+l5y78/Hom/bn03IVB/XfTn0vPXbBmdqY/l567
sLRsGfpz6bkLn+YpSn8uPXehcpZ79OfScxfe9CpDfy49N9dzu33059JzF1KM
q0V/Lj0358Og0fTn0nMXsj/fSn8uPXdhcLdx9OfScxdK+IrQn0vPzfWSfjX9
ufTcPF/7ltKfS89dOBZeTH8uPXeh5asr9OfSc/N85ChCfy49d+HVvvr059Jz
F87e+5X+XHruQoHJK+nPpefmfG1Yn/5ceu7CmthW+nPpuQsHOo6kP5eeu1D3
bRr6c+m5Cxt/rE5/Lj03v546gP5ceu6CI9Fk+nPpuQtNd96nP5eeu5BhQXX6
c+m5CwcfZqY/l567kG7qNvpz6bk5b+aMpj+XnrtwYu1I+nPpuTmv8tSnP5ee
u/Bdn4r059JzF7IWrkx/Lj03v55wj/5ceu7C+KF56c+l5+b9k2MX/bn03Jzf
d0rTn0vPzfX+xwj6c+m5C0d+jaM/l5678KFWNvpz6bkLbXafpD+XnrswouJz
+nPpuQvlr7359/Pz+J67cO5tRfpz6bkLO7NOV/7cjcQH6o15X3v+Fum5GzMK
zqE/l5674XUVpD+Xnrux4n8p6c+l527s3bKN/lx67kapavz8PP7n4dz4/bOf
6M+l5250vin+XHruRkmn+HPpuRsje/Lz8/ifh3MjbVnx59JzNzaM5+fn8T8P
58aW31vRn0vP3fhmdBn6c+m5G6nS8/Pz+J+Hc+OHovz8PP7n4dxYX2Ah/bn0
3I0kK6bSn0vP3VhY4Bz9ufTcjYyf/4/+XHpung8/Pz+P/3k4N6rfa0V/Lj13
Y8nbuvTn0nM3nHn5+Xn8z8OZ52vpfvpz6bkbJ4/46c+l524M3f+C/lx67obj
8Gr6c+m5G92aPaY/l5670XjvQ/pz6bkbh1P2pz+Xnpuvf/pz+nPpuRst/jlH
fy49d+Nuuib059Jz8/u7p6U/l567sb1AZvpz6bkbB2qUpD+XnrtxaflT+nPp
uRt9KnSlP5eeuzFn6g36c+m5Gy+XuunPpeduFMvLz8/jfx7OjayPmtOfS8/N
95uen5/H/zycG3mKBenPpedu1Hy/hP5ceu7GPSc/P4//eTg3IkNG059Lz831
fbYo/bn03I3e9/rSn0vP3WiXgJ+fx/88nBs7P39Lfy49d6P7zrH059JzN+aX
HkF/Lj13wz3sIf259NyN8j1L0Z9Lz831N301/bn03I2Og2/Rn0vP3RjSNx39
ufTcXC/vytKfS8/deBq3h/5cem6uz8+W0J9Lz91YkGYO/bn03I1BDV/Tn0vP
3Ri1Zxr9ufTcja86p6U/l567MaLwXvpz6bkbUW97+nPpuRupG6ykP5eeu5Hm
2h76c+m5G8tXLaY/l567gdsJ6M+l525cc6ajP5eem+u/QXb6c+m5GxMmPKM/
l56b6//ph0v/+nPpuRtjj8+gP5eeu9EwyT/059JzN5r1XUl/Lj1343aKCfTn
0nPz/I+x0Z9Lz93IPy0t/bn03I0xVez059Jz8/0NaE1/Lj03r39Cfn4e//Nw
bvy5Zwn9ufTcjemtT9CfS8/dqDp5DP259Ny8nxLz8/P4n4dzY6uHn5/H/zyc
ef79/Pw8/ufh3Fj2Q3P6c+m5G29T8PPz+J+HM++3jF/Tn0vP3ag3oDL9ufTc
jUN1RtGfS8/N+fUJPz+P/3k483yO/JX+XHruxubUD+jPpedutNx+hP5ceu5G
+8820p9Lz837b91K+nPpuXk9XuShP5eeu3G0UHn6c+m5Gz+5O9CfS8/dGP5g
Kf259NyNqwd6059Lz92Ytf0F/bn03DzfJSfRn0vP3ViVvyv9ufTcjZuPc9Gf
S89NX4rdpD+XnrvRaXBe+nPpubk+/6hDfy49d6NtjSD9ufTcjbmjxtKfS8/d
OJF3D/259NycN1t99OfSczeKlC1Lfy49d+PhTD/9ufTcjX55vqM/l56b7z/N
Vfpz6bkbLz4/Rn8uPTfn4a/P6c+l527kKrNI+XMPth67Rn8uPffAlS4z/bn0
3IPCa+bSn0vPPUBtD/259NyDvOXn059Lzz3IFGlPfy4996BqvUf059JzD/6X
uDT9ufTcg8bZ8tGfS889yDMqDf259NyDggEv/bn03IPkufrRn0vPPfir0mn6
c+m5B2VzXKU/l5578EPqDPTn0nMPnqw+TH8uPfeg84o59OfScw++/yeO/lx6
7jHvtzz059JzD1qu2UV/Lj33oN/hjPTn0nMPMt9sRX8uPfdg4O/F6M+l5x6c
scL059JzD3ovPUN/Lj33YPzjWvTn0nMPMu56TH8uPfeg7fer6c+l5x6st39H
fy499yDdmVr059JzD47P20V/Lj334M209vTn0nMPLn9ynv5ceu5B5epf0Z9L
zz3YUao6/bn03IP8RS7Tn0vPPbCvTU5/Lj334P1rN/259NyDRk9r0J9Lzz3o
cfhn+nPpuQfP1w+iP5eee7BrWFP6c+m5B6v7z6Y/l56b5+vOQPpz6bkHl7Ym
pz+Xnntwrs2n9OfScw9utPHQn0vPzfV3L0J/Lj33oHWbjPTn0nMPvJ0d9OfS
cw/SZAvQn0vPzeN53Ir+XHruwZW3Efpz6bkHzWyz6M+l5x5Yfw2iP5eem8ez
8jH9ufTcXF9td9OfS889ONDpD/pz6bkHVRZmpz+Xnnvw7ZHm9OfScw/qFqpK
fy499+DL8ovpz6XnHkx48JD+XHruQclcTejPpecerDySkP5ceu7BnemH6M/l
7yPwoFeajPTn0nPz5wf70J9Lz83jX/ohz7++Tnpufn+vofTn0nMPpky8Qn8u
PTfvz5Td6c+l5+bx755Pfy499yB38f/Rn0vPPai3aiv9ufTcg1SJctCfS889
cK4rTH8uPffg4oy09OfScw+SPn1Afy49N+dVw47059JzD54N/I7+XHruwYYa
n9CfS889mNP2Kv259NyD+QMO0Z9Lz835seV3+nPpuQe/OUrRn0vPPfi6yQv6
c+m5BzNbWfTn0nPz/bVeQX8uPTfX5+VN9OfScw+aLH1Efy499+B8l1P059Jz
c96+3Ut/Lj03r2+eV/Tn0nPz9Y7Wpz+XnnuQusZR+nPpuXl/d3hIfy4996B2
8Wz059Jz837uf4b+XHpu3i9XXfTn0nPTh1S/0Z9Lzz2INfyF/lx67kGXmhb9
ufTcg6Ndz9OfS889uFk4Rn8uPfdgXIFd9OfSc/P+a3CB/lx6bs7TtGH6c+m5
ef4X/UN/Lj33oOudo/Tn0nMPJp/5sOpfnyw9N/0Y1J3+XHruwavyX9GfS89N
b84foj+XnpseNb5Jfy49N19v5Vn6c+m5Oa8KXaE/l56b87hcgP5ceu5B/Tdf
059Lz833UzML/bn03Lyf27WlP5eeezD2++b059Jzc95Xr0Z/Lj334I9FJenP
pefmz7uUVvlzL3pVrqX8uRfnTnRX/tyLNKNeKn/uxZWU9ZU/9+Lkm/3Kn3uR
dFcm5c+9GFCmmPLnXrgaLVT+3ItJH48of+5FxdDHs//5c/P7m1ZS/tyLhNtX
K3/uxfJpT5U/9yJL5iXKn3uRI3dl5c+9WPQhvfLnXgzNWkX5cy8GLd6i/LkX
fbvmU/7ci3cz6ip/7kX6R5OUP/ci+Di/8udefLe4hvLnXhTq+bfy516cfj5B
+XMvDo1MrPy5+f4m7FX+3LxeV+8pf+6Fb+4Y5c+9aJNtjvLnXkzbfFz5cy9O
ZVuh/LkXSY6MU/7ci5GRNcqfe3GkWFD5c/N6fPeT8udeXJw9UPlzL3q33Kn8
uXk9/2qt/LkXM/JMVv7ciwKNvlL+3Fx/628qf+7F4AzFlT/34tHGycqfe9G2
nKX8ufnzPp2k/LkX1QY/Uf7ci6mTFyt/bp6vpSmVPzfPb/AX+nPpuRejf52n
/LkXn6dqq/y5Fwd/qaf8uRcPh+6lP5eeexHIf0r5cy/K/tVO+XMv5nWqrPy5
F7XSvqA/l56b12fZYuXPvfhhYl/lz72YPaiW8ude1Nl/gP5ceu5F3VPfKH9u
vp+9H4v/58+9qHDnuvLnXhxLu5b+XHruRfbej5U/9yLz9L+VPzfvp3SDlT83
f36pjfTn8vcPmdc/mVv5cy86pt2k/LkXY39/rPy5F8UadFP+3Iv3tZ4of+5F
j9sLlT/3osnBdcqfezFw1lPlz72YW/C+8udepE70QvlzL25MT678uXl/z0+v
/LkX61bPUP7ciyVVdyp/7kWo50jlz83zcWud8udejK+wWPlzcz0fGab8uXm+
ixRW/tyLM82qKH/uReHvY8qfe/F8f2/lz73Ynru68udeVC/2QvlzL/J97K38
ubm+0+xR/tx8/1XKKn/uxc9Vv1b+3Dyeej2UP/diSMl5yp978XbzM+XPvVgx
vLby515s2/eT8udepHUNVP7cnC99hyt/7kWndhmUP/civ3eG8uemR3tvKH9u
3v/TJyp/7kVL/1vlz831V+ml8udePBv3qfLnXtSLm6P8uRfHMzVU/tyLuHEn
lD/3osHPKZQ/96LxwNfKn3uxO/NB5c+92DpmovLnXvy2/63y5140v5RL+XPT
w5ufKX9uzoe02ZU/N+dBrIfy515M6LBK+XMfdjdPqPy5D5m69lH+3IcCi9sr
f+5D9m6PlT/3Ycf7mcqf+/DsxB/Kn/vgLp5A+XMfamU6rfy5D9HEmZQ/98GV
r6vy5+bPb3FK+XMfhmY/p/y5D7k3rVT+3Id85xMqf26+foLSyp/7UCnPJ8qf
+/BVinPKn/uw5Gx75c99aPJJGeXPfaj/oLTy5z7Mu35D+XMf6pxMqvy5D29u
fK/8uXm+/7dK+XMfErrHKH/uQyz7xyn/+XMfTg/5n/LnPgwb+UD5cx+mjLih
/LkPNYdVUP7ch4eZxyl/bh7f2LnKn5vnu8oF5c99+CVvQuXPfehcerLy5+bP
G5Jd+XMfOj2LKn/uQ/tCV5U/96Hcjm3Kn/tQ4vt8yp/7kKRkCeXPfeh6oYLy
5z4cSF9T+XMfxv1SRPlzHw6vXab8uQ9z3MeUP/fhQrn5yp/7sHffG+XPffj2
UGPlz31YVaa08uc+pG6/X/lzH/o0/Vv5cx/qbs2p/LkPI7Lkpz+XnvvwWfQz
5c998PkPKH/uw+CxN5Q/9yHzqD/pz6XnPiQ+2175cx867l+p/LkPjc7cV/7c
PF+BovTn0nMfho9rq/y5D7cq31D+3IeGZVYrf26u1/zD6M+l5z60SLJb+XPz
/Q/9VvlzH3K226T8uQ/3Kn9Jfy49N+fBjZrKn/tQe9hY5c/N67Fjm/LnPmSb
UI7+XP6+QR/OfPGV8uc+FPI9Vf7ch5EHZih/7sOReruUPzfnRfdOyp/78F2W
0sqf+2D/DMqf+9Au2V3lz32o0aG08uc+dGm+V/lz83yNqqn8uQ83ho5U/twH
p3OL8uc+PBo3Rvlz837IUkj5cx+K1lip/LkP+Z1LlD/34Y9vFyp/br5+qcvK
n5v//msh5c99uJ/1e+XPfehfd4jy5+b9ErdC+XPzeG/UU/7ch1mzNit/7kOv
yAjlz304P+Nz5c/N9ZGimvLnPlys0V/5cx/enZ2o/LkPecfeU/7ch1N9qil/
7sPNDV8qf25er+5blD/34fGkkcqf+1B6x3Dlz32YVque8ufmfNlQXvlzH74c
WlH5c/P9v72j/LnplTuP8uc+LNq+U/lzH+7kLqn8uQ93sw5T/tyHXVkt5c99
uJQ+i/LnPhTbcVz5cx8yTn2s/Ln5/YNeKn/uQ4KXZZQ/9yFP/zHKn/uRMEug
6Nv/9+d+jPxisfLnfpT+pojy536s2JJK+XM/5q3Yrvy5H2lmaX/uR/ciPyl/
7kfm89qf+3H9wGfKn/uRPIX25340smt/7sejfNqf+3GvWCvlz/1o7y2j/Lkf
JQZeVP7cj36/zlH+3I8zbRYof+5HvkNTlD/3Y3+xs8qf+1ElYQflz/3Y3Wm6
8ufm61dqpfy5H0er1lX+3I+c/SYrf+5Hz4f7lD83j9/rV/7cjysvnyt/7keL
R6uUP/fjWfdHyp/78fTEA+XP/eiYqp/y5378dSC18ufm9T1xVvlzP/5xN1b+
3I8vvk2j/LkfXlcm5c/9KPhJCeXP/eja+Iny535UfNlZ+XM/Zn19XflzP7IU
cyl/7sebrtuUP/djQLbmyp/70bBhGuXPzfP7c0D5cz8mZF6i/LkfJ7K6lT/3
Y+ayUcqfm+vjFZQ/96OVu6/y534EEpVS/twPK8cb5c/96HVojPLn5vsrP1z5
c/N8DH2g/Lkf3TqXVP7cj4VjVil/7kf6zjfpz6XnftjafKH8ubl+r3yj/Lkf
757uUv7cjwSvF9GfS8/N8/96lvLnfthzvFL+3I+rY6Yqf+5HnSJp6M+l537s
/Lhb+XM/Xv7ZTvlzP+5+skL5cz+Ojd1Nfy499+Pn+ouUP/djz4iPvf7z5+br
zU+r/LkfxT5koz+Xnpvn46unyp+b82DA+0v/+XNzvTecrvy5H3/OukV/Ln+/
sHl+PCuUP/ej7tRxyp/78XU4gfLnfhyMpVH+3I/COxIof+7H5CetlD/342Hp
/sqf+7Hr9WLlz837fepx5c/96LFrtPLnfvQt+kD5cz9SZKuj/Lkfg7JtVP7c
vF8HNFP+3Pz5hTIof+5HvdIFlD/34+KsSsqfm/Oiw0jlz831m2Wq8ud+RH8b
ovy5Hzdz3lf+3Lxfjh5W/txcb5k3KH/ux5Q/Vyh/bp7vj7mVP/djYIlyyp/7
cc3fXvlzP7Y9WqL8uTmfD/RS/txcL1ufK3/uR8miE5U/9+N9ji7Kn5tf386p
/Lnf7JUbyp/7zT7No/y5H4fm11b+3I+TJQLKn5tedR+j/Lkfj1PvVv7cjzvz
vcqf+5Hyq2+UP/fj934+5c/N65ekrvLnfpR3XFH+3FwvCY4qf+7H/KbPlD83
52nqhcqfB5B20VXlzwNo/PZL5c8DmDxwjvLn5tdfupU/D2BC8nnKnwcw6kI7
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
5c8j8NhPKX8ewZJiNZQ/N78/7qHy5xGsW7BC+fMIFnxTW/nzCLYlr6H8eQSp
bv2p/HkEtvNtlT83//vKZ5Q/j+Dqr1mUP48gdZdvlT+PoF3bi8qfR5DkahLl
zyN4lcap/HkE3ySrpvx5BLWfdlD+PIL95/orfx7BjMU/KH8ewfiZM5Q/N6+X
vb/y5xHcO5FE+fMI/L2TKX8eQaEeTuXPI3j/Kqj8eQRZO6VT/jwCX68Eyp9H
0DKnV/lz83540lz58wiOvAkqfx7B6vfTlD+PYOeW/sqfR3BiwQPlzyOo1Xin
8ucRXG65RvnzCO5MzKr8eQSdNzdR/tw8/xkqK38eQf9cC5Q/j2DSiXvKn0fw
LHEj5c8j+GSVpfx5BKEe+5U/j6B5gnTKn5vv72YP5c8j+HHAW+XPzfdbYzD9
ufQ8gqc/XlL+PIJBjzsrfx7BiwlzlT+PoIX1E/259DyCmT02KX8eQau/syp/
HkGzXl8rfx5Bg6ap6c+l5+b6+uOu8ucRJEzbXvlzc718U1v58whin8TRn0vP
Iyif5W/lzyOYWmy/8ucR7O20Wvlz83puKkZ/Lj0330+Kp8qfR5AzdVj58wgy
pl6q/Ln5fsaspz9fz55HMPz7+8qfm/fDl8eVPzev98Jdyp9HUOraM+XPI/i2
+3fKn0cwNMEh5c8jeJjinvLnEVS+m0n5c9ODzCeVP4/AGmRX/jyC3TtnKX9u
Xl/n/5Q/j+DG65Dy5xEU+PSM8ucR1Pw7rPx5BInO7VD+3Jz3H84ofx4BdviV
P4/gu9I3lT+PYNSAQ8qfR3C3w1vlzyNY9XkX5c8juHAzs/Ln5nz5337lzyM4
9O6q8uemT9+cUv48glwnLyp/bq7Xqx7lzyPYMzKf8ufm9byfUfnzCM65flT+
PIL1Txsrfx5BvjuVlT8351WRYsqfmz+/fWrlz6P4ZXIN+nO+321RjGrehf5c
+h7FkrTP6M/5/ndEUXJ1Xfpz6X0UKYbvoT+Xv041ioq1M9CfS/+jWHW+MP25
/HUrUeR4/hv9udwPRHFg9EH6c54XvihGz3xLfy73B1E0f12O/pznRyCKKdVW
0J/L/UIUDbM/oj+X/zs3iiTbFtCfy/1DFPX2lqc/l+M+itRj0tKfy/1EFFX/
rEB/zvPGimIeNtKfy/1FFEErN/05z5+4KB7lrkV/LvcbUYwYMJ7+nOdRoihe
DcxDfy73H1EcKVaV/pzHXeIoSiW+QH8u9yNRdBk+lv6c51XSKGJfJqQ/l/uT
KAZk30V/zvMreRRZuv9Dfy73K1G0KzKS/pzHxadRzN0/g/5c7l/Mr+scoT/n
2z1lFFsOLqE/l/uZKP5uM5r+nOdd6iiKLF9Bfy73N1H0uualP+f5lyaKFe9b
05/L/U4Uv5bsR3/Ot8sX5voIb6c/l/sf8/22bEl/zss9fRQLLoynP5f7IfP6
+rLQn/O8zBhFvkbX6M/l/iiK7MeK0J/z/MwcxbmmE+jP5X4pilkvQ/TnfDmy
RrF/3zj6c7l/iqJMvof053y4X0VhL7eA/lzup6JA/RT05zxvc0Sxe2sH+nO5
vzLPL+bQn/P8zWVej1Ot6M/lfiuKbdnq0J/zPM4TxZBSu+jP5f4rikrPjtGf
8/YlXxSl+7SmP5f7sSiq5a1Af87zukAUO64/oT+X+zNz/bZbQH/O87tgFP/7
rhf9udyvme+nYnX6c57nhaPIOmYv/bncv0WRcmYp+nOe74ji0Nh39OdyPxeF
a90V+nOe98WiGPRsJf253N9FEaj6gP6c53+JKBK1v0B/Lvd7USx615/+nD0o
Za6fz9bRn8v9XxS/P7PTn7MPZaL43Lae/lzuB6PoPO4B/Tl7UdZcD0U705/L
/WEUfQo+pD9nP8pHUf/QPPpzuV+MYsbatfTnPP4rmutn6CP6c7l/NK9Pxjv0
5zy+K0dx3PmU/lzuJ6OwRiWhP2dvvo1i4dS09OdyfxmFZ/FU+nP2p1oUkyps
pz+X+80oxnQdRn/O46pmFHdvrqU/l/vPKHpWWkB/zuOgdhRlTw6hP5f7UXNe
lv6a/py9qvvv81uR/lzuT6P4vlWE/pz9qhfF0/M96M/lfjWKCWW+pT/n5VI/
inS1ntKfy/1rFE8S96Q/58vR0Jx3Rf6iP5f72ShOtS1Nf87e/RBFoY756M/l
/jaKcX260p+zf01MH1rPoT/n7W7TKHL985j+nD1sFoV7cw36c7n/jeLrd23o
z9nHFuZ8zN+P/lzuh83X3/gr/Tl72SqKdYu/oD+X++MozpSaSn/OfraOInng
Gv25/HvEUZy8No7+nD1tG0XGqq/oz+X+OYqWU57Rn7OvP0Xx241k9OdyPx1F
t6Yz6c/Z2w5RNO7zPf253F9HUfjhUfpz9rdjFJ+eSEp/Lv9ekjlvbr+gP2eP
fzHn66h99Ody/x1FuXfj6M/Z585ROPK9pj+X+/EoWlTMQX/OXneNonidFPTn
cn8exRdTs9Kfs9/do2gwrCv9ufz7DOa8eLL8P3/ey7zf7lr053L/HsUNWy/6
c+ayTxTvcrejP5f7edNf/0P6c/a8n3m9Rk6nP5f7e3N/0Got/Tl7PsCcNxff
//v5efzfHxnFw70n6M/Z80FRzFyfgf5c7v/N++NSJ/pzHldDohiW8AT9ueyB
KBpdPk1/zp4PNc9v2+X057IPovhudIz+nD0fHkXdjSXoz+Xvq4riwfM4+nP2
fGQUL/8+TX8u+yGK2bPa0Z/zchltXq+rJenPZU9EkWBrSfpz9nyseXzrr9Gf
y74wvVqWmP6cPR8fxfw/v6M/l78fI4p7NVbQn7PnE6MYeW8k/bnsD3MeJH9P
f86eTzbv9y7t6c9lj0TRqt89+nP2fKp5vQZeoz+XfRJFwSHl6M/Z8+nmfifr
GPpz8bhR7Jw8m/6cPZ9pnv+65+jPZb9EMbFUjP6cPZ9tru+6E+nPZc9E8eOc
bPTn7Plc0y+Ln5/H7xvTz/qX6c/Z83nm/Xh7C/25/Lyw+XqD89Cfs+cLzOvX
sRj9ueyfKLJZ/Pxcer44imRTqtKfyx4y59Gzr+nP2fOlpkcFF9Ofyz4y94/j
D9Gfs+fLTe9vzKE/l59PiqJrm5f05+z5SvP9dG1Ify77ybzfPxanP2fOV5v+
5txDfy57ypyv2S/Qn7Pna831M+Yr+nPZV1FUCOahP2fP/4ji7Ktk9Ofy/59G
8eLdHvpz9nx9FDVGXaU/l/1l7q8mbKM/53G60by/77SlP5c9Znpycxn9OXu+
OYp+7+/Qn8s+i6Ly14Xpz9nzreb6Ofwj/bnstSiSjrtKf86eb49i2fgV9Oey
38z5N3oI/Tkv5z/N9dl1J/257DlznryuRH/Onv9lzpNb6+nPZd+Z++nj6enP
2fPd5v3cvjr9uey9KOakHU1/zp7vjeKHxlvoz2X/md4X/4b+nH/cfnO+X8hC
fy570Nxf7ntEf86eHzT9mTiN/lz2oXn+c+2kP2fPD0fR4/uf6c9lL0ZRJ2lJ
+nP2/Kj58xIWpj+X/Wjul5L/Q3/Onh839989S9Kfy56MIlPP3fTn7Pkpcz+4
ujr9uexLcz7fGEp/zp6fiWLXTxvoz2VvRvFZspH05+z5OfP87cpPfy770zx/
rmX05+z5BXN/sncB/bnsUXN/k2Ue/Tl7fsn897wX6c9ln0aRe3QB+nP2/HIU
98vWpT+XvRpF/uED6c/Z86tR3Kq7lP5c9qvpc/G69Ofs+XVzviTaSH8ue9bc
D04aSn/OnN+MYipS0Z/Lvo2i+7Eq9Ofs+e0ofGn60p/L3jX3T5vH05+z53fM
r4fdoT+X/Wv2zahv6c953N8z57crPf257OEobj7dQH/O4/RBFIkLD6M/l31s
7mdG/0p/zp4/Mj2uVof+XPayud+8/g39OXv+xNzvXSlHfy772dxfdrtNf863
2zPz/K7NSX8ue9r8etoO+nNezi+i+Fi6KP257OsoLk8cTH/Onr8y58mjEP25
7O0ompbi5+fS8zfm9c/Hz8/j93cUX+bn5+fS83fm9bjwlP5c9ngUqZzF6c/5
x32IItx5iPLnFk4sTLPsde35hWWfWxi1Yhn9uexzC9OmiD+XfW5hVV7x57LP
LfTqzL+/XX6exmWh9qJ99Oeyzy3EHralP5d9bmF0tgv057LPLRTbm4L+XPa5
hV+2naQ/l31uIe+8xfTnss8t7FtRm/5c9rmFI8Nb0J/LPrdwLF0p+nPZ5xYe
dDpPfy773MLaSrPoz2WfW8jgmUd/LvvcwtICk+jPZZ9bSNj7FP257HMLB9O1
oz+XfW7h83tT6c9ln5s/b0kL+nPZ5xbKTK5Nfy773EJwzUT6c9nnFgb59tKf
yz63UCvopT+XfW4h842n9Oeyzy083b2C/lz2uYUdRR7Qn8s+t1Cq1z36c9nn
5vGu7U1/LvvcwvhyKenPZZ9b+LnQafpz2ecWutdpSH8u+9zC++Gp6M9ln1uo
kjkD/bnscwsJMhSlP5d9bn5//Yf057LPLby+8DP9uexzy9xfX6E/l31uocg7
G/257HML1Q9toT+XfW5h7s9N6c9ln1s4Ny01/bnscwsLF/joz2WfW/hf1UX0
57LPLdwu66Q/l31unq+tI+jPZZ9bOPuhMP257HMLney96c9ln1twuUvQn8s+
tzAsySv6c9nnFvotGkV/LvvcwphPh9Kfyz4313/Ve/Tnss8tVMxdnP5c9rmF
ZCVX0J/LPrdQONV1+nPZ5xZy+9PQn8s+t9CqQ2n6c9nnFqZ23Ul/Lvvcgu3n
BfTnss8t3Gw1g/5c9rkF7+Tn9Oeyzy1sejyJ/lz2uYXImFT057LPzfurzF/0
57LPLdyzt6E/l31u4XC5pfTnss8tVN26k/5c9rmFPT3n05/LPrew87d39Oey
zy00WZ2a/lz2uYVGCbLQn8s+t3Ax/SP6c9nnFgr97w39uexzC29LTqE/l31u
YUHX6/Tnss8tPDq9hP5c9rn53zcaTX8u+9zCj/ve/fv5ufy81rcWqv2Vkv5c
9rl5v7d8/+/n5/LzW9UsNB7VnP5c9rmFoaP70p/LPjfvpyKL6M9ln1v44uJR
+nPZ5+Z8s/Pz8/if57Swu9M9+nPZ5xZWNKxFfy773Lyf662nP5d9bqH08ib0
57LPzXndMB39uexzC8+b5qM/l31unr9NFejPZZ9bSDNkOP257HMLqYtMpj+X
fW7Or1WD6M9ln5v3e8G79Oeyzy18evIg/bl8HmWhfqZ19Oeyzy18v2UZ/bns
c/N4nuekP5d9bq7nPN/Qn8s+t5DtVVv6c9nn5vw9u4j+XPa5heIre9Cfyz63
0HDGU/pz2eemXynG05/LPrdQ0t+J/lz2uQXHpuz057LPLbjd1+jPZZ9bGFwq
F/257HPz/LWuSX8u+9zCIreP/lz2uYXeX4+iP5d9bqHs+Z3057LPLXxZz01/
LvvcQvkrpejPZZ+bnmb30J/LPrcQt70W/bnscwuZFlyiP5d9bs6DWYfoz2Wf
W2jgeEJ/Lvvc9GXDvP/8eS8L1wtfpj+XfW76OjQD/bnscwvNE86iP5d9bmHc
agf9uexzcz7OnEN/Lvvc9LReG/pz2ecWcsy7R38u+9xCnzrF6c9ln1s49GMu
+nPZ5+b83JuS/lz2uXm+Cjnpz2WfW5jVoBf9uexz87//+Tj9uexzC9urXqI/
l31uzodCaenPZZ9b+Gnffvpz2ecWfts+g/5c9rkFPI/Qn8s+N9ffZznoz2Wf
m36s3UF/LvvcwuT9X9Cfyz4318/FZvTnss8t5F9QmP5c9rm5Hj/46M9ln1vw
jztBfy773FwPJ6rRn8s+tzBvzn36c9nn5n4g73L6c9nn5vk8VZP+XPa5Oa/n
V6M/l31u4Va7HfTnss/N4/uhDf257HMLPU6foj+XfW6hkpWZ/lz2uXk9PlSm
P5d9buHF4/P057LPzfXyQ2L6c9nnFlbOsdOfyz43PZ74Lf257HML5dq1pz+X
fW6hQ41+9Oeyzy3Y0zWiP5d9bs6rpNPpz2WfW8jZpS/9uexzC+3KJaY/l31u
Ht+LJPTnss/N6/fETn8u+9zC8lYB+nPZ5xbW/ZOW/lz2uYXWjz7s/9efyz63
MGS2m/5c9rmFjw2a0Z/LPrewsVmA/lz2ubmfaDGV/lz2uYWWGfvRn8s+N/e7
sfv057LPLZw6sIP+XPa5hTrHVtGfyz435/fHzPTnss8tnP+8Mf257HMLfYdW
pD+XfW7h7oR59Oeyzy148t6lP5d9bqFp5wb057LPLcyORenPZZ9bWH9xL/25
7HMLKeqnpT+XfW76X6I7/bnsc/N4r72mP5d9bu5fVg+kP5d9bs6bPRfoz2Wf
m+upfCf6c9nn5np5PJv+XPa5+f5atqU/l31uYf+pDfTnss8tXMmThf5c9rmF
rKfz05/LPjd93pSS/lz2uelT6A79uexzC1s6taM/l31uIcm0mvTnss8t9G9h
0Z/LPreQqNdF+nPZ5xaOj91Lfy773Dz+fSvpz2WfW2gTKkp/Lvvc3P/8+Jj+
XPa5hVw/BenPZZ+bx99uMf257HPzfF/9g/5c9rnp59K79Oeyzy380eko/bns
c3N/8nIn/bnsc/N++eop/bnscwsF99WhP5d9bs6PCgfoz2Wfm/vJFnfoz2Wf
m/Mn75f057LPzfnb6Tj9uexzC98cT0B/zp7fNNd/ZCb9uexz836r1J7+XPa5
hZolgvTnss/N/WizU/Tnss8t1MgYoj+XfW7uv9Nspz+XfW76VeY0/bnscwtb
Az76c9nnFn4feZ3+XPa5haOHD9Cfyz43r9/m1/Tnss/N/WSrTvTnss/N9ZQt
E/257HNzHm3eS38u+9z8/pJX6M9ln5vXd/QJ+nPZ56a/n12gP5d9bt5Pmdz0
57LPLZw5m4f+XPa5uV/Jk4H+XPa5eb9Uakl/LvvcQqjQD/Tnss8tLMlZif5c
9rm5Px4E+nPZ5+Z+clNK5c9jaLe1Ov257PMY/ljVif5c9nkM/rZP6M9ln8fw
9/va9Oeyz2N4eWYX/bns8xh+nJuO/lz2eQzJ0xeiP5d9HsM/mEt/Lvs8hpOX
9tOfyz6P4dG91/Tnss9j+LxUWfpz2ecxrJ21jP5c9nkMl3o8oD+XfR7Dh9B8
+nPZ5zGsSFyO/lz2eQw3rnxOfy77PIZhsfL057LPY6gzcj39uezzGAo1zEl/
Lvs8htkDatCfyz6PYd/psfTnss9j2HI2F/257PMYvhhXhf5c9nkM2Vqeoz+X
fR7Dmyuj6c9ln8eQpUeM/lz2eQwlBuykP5d9HsOIY7foz2Wfx9B93HD6c9nn
MdT7fDr9uezzGKKrDtGfyz6P4coXi+nPZZ/HsHn3SPpz2ecxXPAupz+XfR7D
5UIe+nPZ5zGcqfUj/bns8xh6zOpDfy77PAZvq63057LPY9i5uzn9uezzGJJ8
PY7+XPa5eT2bZ6I/l30eQ7MdV+jPZZ/HUDJnYfpz2ecxnNozjv5c9nkMQ+sE
6c9ln8ewIOtY+nPZ5zEknXaf/lz2eQwHV8yjP5d9bq7vXcnoz2WfxzAmfXv6
c9nnMRRbOIv+XPZ5DI3Qkv5c9nkMCyfXoj+XfR7DwFU76c9ln8fwQ8Oj9Oey
z2P4+VEr+nPZ5zHMmVeO/lz2eQw5qz+mP5d9HsOLK/Poz2Wfx5DvcA/6c9nn
MXTeUZX+XPZ5DNW9e+jPZZ/H0PWTkvTnss9jaBp8S38u+9y8f766TH8u+9x8
P21W0J/LPo+h9aF79Oeyz2PY8eAc/bns8xh+69KP/lz2uXk/Tfud/lz2uXk/
dbTRn8s+N+/nvn/Qn8s+N69nkvv057LPY0i36xf6c9nnMczfcZ/+XPZ5DA+q
/0Z/Lvs8himF19Cfyz6PYd4nD+nPZZ+bx7P2Nv257PMYso5+TH8u+9ycRykT
05/LPo/BniUN/bnsc3NeFJxCfy773Jwvl7fSn8s+j6FvdCj9uezzGFp2X0N/
Lvs8hlG35tGfyz6P4UmbwfTnss/N+/lqfvpz2ecxPA1XoD+XfW5eH1+Y/lz2
eQyJu3WnP5d9bq7HO5Xpz2WfxzDj7WP6c9nn5vrf3J3+XPa5efw3/6Q/l30e
Q/MkpejPZZ/HMDhlXvpz2ecxTM/ahf5c9nkM3yWfTX8u+9w83xMf0Z/LPjf/
vU11+nPZ5zHUXd6a/lz2eQw3H/ShP5d9HsP49kPoz2Wfx1ChcVr6c9nn5v1v
m0J/LvvcPN7dV+jP5edNzXk1ayz9uezzGHLEvaQ/l30eQ616T+nPZZ+b98PC
pPTnss/N+Z55Bv257PMYEpWtR38u+9ycl+uO0J/LPjfn1Ywk9Oeyz83j/f05
/bns8xjKNdxLfy773FzfB8fSn8s+N6934BX9uezzGN6myU5/Lvs8hovZk9Of
yz6PYU/HLPTnss9jiLXoQn8u+9xcf0eW/efPe8Xw6/4o/bns8xiOXutBfy77
PIYEydrSn8s+j+H+o/v057LPTU86TaM/l30ew9nqa+jPZZ/HENr3jv5c9rm5
PtYdpz+XfW7Oo0Xp6c9ln8cw8egv9Oeyz8354TtOfy77/N9+nqI/l30ew7rm
y+jPZZ/H8NVwi/5c9rm5XtcXpz+XfR5D/hcx+nPZ5zH0vnqK/lz2uTm/5rWl
P5d9HsP5f0rQn8s+j6HmnhL057LPY0j/11X6c9nnMYzd9An9uezzGK4er0t/
Lvs8hk4tltOfyz4391M2fn4ev89jSJXzHf257HNzvY75if5c9nkMVWfepT+X
fR7Dl/Ou0p/LPjf9XVSW/lz2uTm/q4ymP5d9HkPmbbPoz2Wfm8fb9yz9uexz
07t2Fv257PMYnIMm0J/LPjev17Gs9Oeyz2NwFw/Tn8s+jyH3mL/pz2Wfx5An
JT8/j9/nMXTYkZv+XPa5eX1WFKU/l30ew+OK5ejPZZ+b93vyb+nPZZ+b67tz
Afpz2eemj7sW0p/LPo8hbbqD9Oeyz83512U2/bns8xhee17Qn8s+jyFjsgb0
57LPzft7TjH6c9nn5nw9v4v+XPZ5DKn/Pkd/Lvs8hmOlstGfyz439187c9Gf
yz435/fapPTnss/NebN1N/257PMYfq91hf5c9rnpQeOt9Oeyz837fWMb+nPZ
5zH02ryU/lz2uTm/z/5Dfy77PIaZKQrRn8s+N/dfa1vRn8s+N33odYX+XPZ5
DCsHLqc/l30ew7JBg+nPZZ+bHvzyJ/257HPz/npTkf5c9nkM5+6voz+XfW7O
y0vp6M9ln5vzuG81+nPZ5+b8LzCK/lz2eQzre26mP5d9HsP+H8rQn8s+N+9v
Oz8/j9/n5us9f0h/LvvcvD57ptKfyz6PoUHLP+nPZZ+b539SR/pz2efmfrpO
Cfpz2ecxbKhTiP5c9rk5L5vdpj+XfR5D+SMl6M9ln8cw+eQu+nPZ5zEki/Dz
8/h9bu6/5v9Kfy773Hy9Iuvpz2Wfm/fjk+H057LPY7i3MB/9uezzGDI8XUJ/
Lvvc/O93zKc/l30eQ+Psv9Gfyz43779SF+jPZZ+b52Nxfvpz2efmvG1bh/5c
9rnpxeYB9Oeyz2PoM34J/bns8xh2D6pDfy77PIafmm6gP5d9bu4Xn/9Kfy77
3PR6Xkr6c9nn5n6oBD8/j9/nMQyf0Yf+XPa5Od9L8PPz+H0ew9SU/Pw8fp/H
4MvGz8/j97npVY109Oeyz80+rMvPz6XnD2LYu34o/bns8xh++YKfn8fvc/P4
39emP5d9bvbdHH5+Hr/Pzf36H/z8PH6fm1415+fn8fvc7Nff+fl5/D4359Ma
fn4ev8/NeT+Hn5/H7/MYJqQSfy773PRxrvhz2edmb6XLRH8u+zyG0yWO0Z/L
Pjf3Uwsf0p/LPjf9m/uC/lz2uel1yW/oz2Wfm73w3UTlz+OQolC057///rns
8zgsCk6nP5d9Hoe5k/LQn8s+j8OW75PTn8s+j8PMMhvpz2Wfx+HNjd3057LP
43Dow4/057LP49A67iz9uezzOJTsnZT+XPa5+frlj9Gfyz6PQ9tTC+nPZZ/H
Ic3+mvTnss/jUHlMM/pz2edx6JGoBP257PM47K9ylv5c9nkc9sRm0J/LPo/D
L2vm0J/LPo9DkWPj6c/l9i8OD+0n6M9ln8fh+ejW9Oeyz+PQaMIU+nPZ53EY
V/7/mLrLKK2upWvYuPt2bSy4BgIJBJi4BA0OwV2DO8Hd3d09uLtLcHdv3F2/
Onu/38P8yWj6lrVrVdUcnCunaeDPw3yuIDJrtcCfh/lcwa38kwJ/HuZz+ftD
Dgb+PMznCub2iRX48zCfK9hU7lXgz8N8rmBf2lWBPw/zuYLr458E/jzM5wpW
HXkU+PMwnyto87ZX4M/DfK5gSW8v8OdhPldwt8m5wJ+H+VxByW51An8e5nMF
Web7gT8P87mCJ7nSBP48zOcK4qUrEPjzMJ8r6F75aeDPw3yu4MXBDoE/D/O5
gjGPrwf+PMznCn47/T3N//x5mM8VGOu2B/48zOfy/lUbBf48zOcKsnZNHvjz
MJ8rOPZPnMCfh/lcQePUSwJ/HuZzBSv16IE/D/O5gjoDRwb+PMznUj+78gX+
PMznUi87egX+PMznCvJsLxT48zCfK1hw5F3gz8N8rqBf1dGBPw/zuYKe+4cG
/jzM5woevX0U+PMwnyuwzhQM/HmYzxVcvrYy8OdhPlfwYe3twJ+H+VzOe3KK
wJ+H+VxByq9FA38e5nMFVaLsDfx5mM8V7H27MPDnYT5XsO7+jMCfh/lcwf3E
bwJ/HuZzBSvqTw78eZjPFejf/cCfh/lcwetVewN/HuZzeR6NWgb+PMznCnIt
WRb48zCfK7hp7A38eZjPFfQ5syDw52E+l/p88ynw52E+V9D/a0Tgz8N8rmBr
0YyBPw/zuYJOTZ8F/jzM5wrMfz8E/jzM5wr8nlMCfx7mc6mflbcDfx7mcwWr
Yy4L/HmYzxVUHDY68OdhPldw9dmnwJ+H+VxB6nte4M/DfK4gysDPgT8P87n8
eXHjwJ+H+VzqeVrfwJ+H+VxBjmJLAn8e5nMFM2+dDPx5mM+lHmOMDvx5mM8V
7OzyOPDnYT5X0KJO1cCfh/lcwcFqmwJ/HuZzBWMXNwz8eZjPFSyq9lPgz8N8
LvVUM3fgz8N8rmDcqtKBPw/zuYJl3UYE/jzM5wp6Z54S+PMwnyuoO3NQ4M/D
fK6gUZpHgT8P87mCRNuPBf48zOcKfk66MfDnYT6X+pm7IvDnYT5XUO7Cz4E/
D/O5zA+tRODPw3yuYN651oE/D/O5gmTrlwT+PMznCqYN7Rn48zCfy/l1ehX4
8zCfKyj0anzgz8N8rmDQtU6BPw/zucyXEdkCfx7mc+lv524F/jzM5wpOKTkC
fx7mcwXFfqsS+PMwnyuIdTJ24M/DfK7gcbTRgT8P87mC/bP3Bv48zOcKNieP
GfjzMJ8reDO3aODPw3yuoN7LmIE/D/O5/PyfqoE/D/O59LeG1wJ/HuZzBU1r
/hf48zCfK1iz9UXgz8N8ruBAmwU//HlvBaNfXw/8eZjPFSQvkDbw52E+V9Bj
/6zAn4f5XMHt+tECfx7mcwV/lJ0b+PMwn8v5x20V+PMwnyvIV/5x4M/DfK7g
TLRCgT8P87mC5kqOwJ+H+VzmZys/8OdhPlcw8Ga0wJ+H+VzqJ1qvwJ+H+VzB
Bv104M/DfK4gxqurgT8P87n8+XLKwJ+H+Vzmd6MjgT8P87mCpDVnBv48zOdS
jyMSBf48zOcKuqzLFvjzMJ8rqF1qd+DPw3wu87V26sCfh/lc+n3rxoE/D/O5
gmq/5gv8eZjPFUQdESfw52E+V5A55ZnAn4f5XMHZOhUDfx7mcwXXMj8J/HmY
zxWc3rki8OdhPpf7W6tK4M/DfK7gY6aKgT8P87mC9m93Bf48zOcKmt1vGfjz
MJ8rKFH9XODPw3yuYPeYDIE/D/O51EPPcoE/D/O59J+/Lwf+PMzncj9vaIE/
D/O5gjt+1MCfh/lc6itZhcCfh/lc9qEHbQJ/HuZz2Uf+6xv48zCfK8g5vW7g
z8N8rmD4yOmBPw/zuYIvT/sE/jzM5wri7tACfx7mc7nvTYzAn4f5XOZr/aiB
Pw/zuYJzl+MG/jzM5/J9qqYK/HmYzxXUqPX1f/9+/v/+9+2yryWKGfjzMJ/L
8z7aKPDnYT5X0PZU3MCfh/lcQYrTUwN/HuZzBUnG9A38eZjPFXzt8jjw52E+
l8/38+7An4f5XL5P7tWBPw/zudRLg4yBPw/zufS/AfUDfx7mc6nHZ6UDfx7m
c6mXD/MDfx7mcwXqpIeBPw/zufT3i7UDfx7mc+knbRIF/jzM5zKP8h4K/HmY
zxXs2Zoy8OdhPpffn9098OdhPpd5kP9D4M/DfC77RcKBgT8P87mCIymuBP48
zOcKDs/vFPjzMJ/L/C45J/DnYT6Xfri7VeDPw3wu+3/mzYE/D/O5gvPDMwb+
PMznCrpm+jXw52E+V6Ak9QN/HuZz6Y/1HgT+PMznCtIfax348zCfS39+Xjnw
52E+l/68NXHgz8N8Lv3y1JXAn4f5PMgrgT8P87mcr/Nv4M/DfK5gRK0CgT8P
87n8edvzwJ+H+VxBrV3xAn8e5nOZlzuXBP48zOeyb2bbEPjzMJ/Lffn0MPDn
YT5XkO7AicCfh/lcQekiewN/HuZzBQV7vgz8eZjPZd/Qqwf+PMznCuJPORL4
8zCfy76w7kHgz8N8rmBo33SBPw/zucyfvacCfx7mcwWO/73E//xsmM/l/WvM
DPx5mM8VDJvSJvDnYT6XfjsyXuDPw3yuoPrqs4E/D/O5Aq19/MCfh/lc7kOr
nYE/D/O5ghNjzgX+PMznChJUjh348zCfy7576Xbgz8N8ruCheTTw52E+V2DH
+hD48zCfS32t6xT48zCfSx7okj7w52E+l/qNdSjw52E+V7Bw5I3An4f5XEGF
K6cDfx789yHeyes3uRz48zCfK5jSIUbgz8N8Lvttyl8Cfx7mc7kPvdIE/jzM
57I/TG4a+PMwn0t9DKwX+PMwnyuI6Fkm8OdhPpfncTp/4M/DfK6gbCyf/LmK
ZncrkT9XceVLJ/LnKppsfkH+XEXnEtXIn6s4lWo/+XMVw5+nJn+uol+7vOTP
VcwcPpf8uYrrGY6QP1dR/rcP5M9VXB1bgvy5ihPPlpM/V1Hz2BPy5yru1FxA
/lxFlMYlyZ+rWJQtBflzFfvqlSJ/riL+zY3kz1W0Xp2d/LmKKhcqkT9XET39
OPLn8n0z5iB/rqJ7ZDny5yrM7RfJn8vPfxlD/lxF6dNJyJ+riHplD/lzFa/T
3id/rmLo4+Hkz1UYXaeTP1fRM+5/5M9VxPxnCflzFVOTjyJ/rqJL/RXkz1UU
mByT/LmKb2ubkz9X0eZrb/LnKg4f3E7+XEX1n5qQP1cxcMo48ucqvh9MT/5c
xeiUN8mfq6g0/nfy5/L8M4wnf66i/fZ45M9V9B47lvy5isioT8ifq5igLyB/
Lq+XySJ/LvU0qg35cxVJk80mf67i96VNyZ+rGBuzKvlzFX39veTPVXQ6foL8
uYr5tZuTP1fxXCtF/lzFnP3PyZ+rGFZxAflzFR8L9iR/rqJprj/Jn8v97HmA
/LmKs8MLkz+X3+/3kfy5in+XXCd/rmLzg5Xkz+V5lnxM/lz6RYtL5M9VTP/Q
l/y5ivPuevLn8n5vv2f64c9VODE3kD9XkWX6Y/LnKm6W6kT+XMXBEk/In8v3
uzaP/LmKcQfXkD9XkWjOU/LnUg8FI8mfq+gf8YL8uYptKzXy51Jv21OQP1ex
9fgU8ucq/uqwg/y5ilYLhpI/l/6jrCV/rmJGrwXkz1WMjzOY/LmKYz1/JX+u
4r9lf5A/V1FtcQLy5ypyuz3In6vIOLwc+XMVyqwX5M9V5Kvfg/y5ihgj9pA/
V/FmVxHy53IfDv9C/lzF3MtdyJ+rSH54duDPw3wuz6/Ec/LnKlZEVCJ/Ls+r
fkvy5zIv5vUhf66iQvoh5M9lHripyJ+rWLV1CvlzFYv73Qz8eZjPpT/WHUf+
XM7nzFvy5yqKRLwify7zpZVJ/lz62csZ5M9lHiT9i/y59PO+J8ifS39uYQT+
PPzvPcn96PeG/LmKc9kOkT9XUXvWOPLnKqwb78ifqxjyMSv5cxXt4trkz+W+
lctE/lzFriJdyZ+rKLhyBflzqc9licmfq9iyvyf5cxXRvrUif64i7oUn5M9V
bKw7nfy5ilxYS/5cxcgNn8mfqyi66DT5cxV/TEtD/lzFpH2dyJ+rePHtFPlz
FRlOnCN/rqJs/RXkz1V8GZKE/LmKvzcWIn8u8/NdUvLnUt/3zpE/V/Hzstbk
z1XcfVGY/LmKJacKkz9XsfvkLfLnKnoc0cify/y+W4P8ucyv7ivJn6soqY8i
fy71Vuoz+XMVDVa0IX+u4pdtj8ify/Ped4v8ubz/0ZLkz1U07DCG/LmKEfdm
kz+X11t2kfy5is9Tk5A/l369biL5c3n9qFnIn8v875CQ/LnsEwevkz+XfaPy
dvLn0l8+5yR/LvvVY5A/l/MdXor8uXyeaeXJn6tI/f1X8ucqTpZfTP5cxT/r
j5I/V9Ex0Rzy53K/5rwhfy77zKba5M9V7ChWkPy59P/++8mfy3wZfon8uczz
j5nJn6tI0SMH+XMVz9qZ5M+lf/U5QP5c+knETfLnsk9n20H+XO7DiFbkz6Wf
jF9O/lzmxfoH5M9lnn7NS/5c7tv05uTPZZ9qeZP8uYrJXVaSP5ff/2cw+XP5
/u32kD9XcetTGfLnsi+83kj+XO7Dw5/In6u4OK4i+XOph/KjyZ/LPjN1G/lz
mV/9i5M/l/pLl4n8udynFM/Jn0t++DiN/Ln8/uw95M9VlDjXgfy5igdTC5M/
l/47+3fy5zJv10SSP5f7kaII+XN5nhkPkD9XcaF5JfLnKko1H0r+XEWdBJvI
n0s9HhlB/lzm1/Dc5M8lf9xaRv5c3m/LQvLnsq/8Mp/8ueSjSlfIn0t/2/8r
+XOZH+Orkz+X+nk6gPy57Lsnl5E/l/t1vDr5c5lXGzaTP1exrHzw7+f/L5/L
/E4QQf5c9qH15cmfq7jt9CV/ruLp0Qnkz1W8W/2Q/LmKRscqkD+X/rjoJ/Ln
ch67Nwf+PMznKpbmGk7+XPbbTUPJn8s+srA6+XMV++uzP5f+OZz9uYriFdmf
y760if253N9joT8P87nku8/sz+X9Fg0lfy7nVTUx+XM5r5iZyJ+rKFb+DPlz
FbPNV+TPVSRs+ZH8uYqu/cuRP5f9K89C8ucaqnc4UDZqjf/fn2sY2WoE+XMN
caZmJn+u4e1Anfy5hkfmBvLnGrKm3E/+XIOZuDn5cw3n358jf67h3G86+XMN
zS4dJ3+u4UGsxeTPNey8V5n8uYbEkxuRP5ffj1GI/LmG+xkukD/XYJyfTv5c
Q4z6c8ifa0jYfDz5cw3RB5wify7n9b05+XMN2wtNJX+uwX/amPy5hrn7q5A/
13Dq8ATy5/L7cQ+QP5fzfh+D/LmG2ltekD/XsHLQCvLnGpI8ekT+XM5fe0j+
XEPBX/4hfy7vv94hf66h8dgz5M81ZJpai/y5ho6bXfLnGqYXTE3+XEOGdPnI
n2tI9Mdj8ucaPq9pR/5cg33sKvlzDSUWf03zw59ruD1lG/lzDbtzNyR/rmFE
pQjy5xreV4pN/lxDvbeLyJ9r6Hk7KvlzDTHLjCB/ruFkn9/Jn2tI2/0f8uca
OncoSP5cw8Eeb8mfaxgeYxT5cw1tWw0hf67hyOSH5M81PG4D8uca5nRaQf5c
w8bit8ifa1iUNjn5cw3XBhYhf65BG7Cb/LmGIR0XkD/XMLDedPLnGg4NeEX+
XOrzzETy5xpStfDIn2twjD3kzzV0Otic/LmGebGWkj+Xemmzm/y5hkJp55M/
l+9b+CP5cw3Livvkz+X9hqUnf65BXfKE/LmGD4/fkT/XUHTdJPLnGobevEn+
XEOHHEvIn2tosW4k+XMNZZWP5M+lv8VwyZ9r+GXOR/LnGmbsaEj+XMPE+X3I
n2t4XXox+XMN1v0T5M81RMYaRf5cw+Yuj8ifa0hXqwr5cw2lKm0kf67h+pwG
5M817CiXmvy5/Ll8LvLnGorP/YP8uYacLYaTP9dww5lM/lzDpKEDyZ9r6JLk
IflzDVEWHCV/Lvfp/Xry5xqODVhO/lzDk03ZyZ/L83pbjPy59OO1rcifS32N
Xkz+XMPLBj3In2v4WOZl4M/DfC71fXAc+XOp7387kj/X0L92VvLnUh/zb5I/
16Dfyk7+XMO4GJXJn2uoNSUW+XMNFY6MDPx5mM+l3zTeQ/5cvt/d6OTP5Twb
FiF/rsFbHYP8uYYTv1chf64hY/Kr5M81DNaOkT/X8Kn988Cfh/89Zw1/pZ1P
/lxD9sXXyJ9LPb78ify5nEenmeTP5b4ni0r+XPrV59nkzzVUW9+C/LmGfJ8e
kj/X4C4D+XP5fJuzkz/XcDyZR/5cw/p+Ucmfa9gwryf5cw1jNpwkfy7vN/oK
+XOZP51SkD+XfhvlMPlzDe3eTCd/ruFW6oTkzzX8Wyor+XMNsW/sJH+u4c7L
lOTPNeSP0oj8uYZWh/KSP9cwwYlN/lye/6pT5M81tH9cgfy5vN+mR+TPpR5L
LCd/riHNvUrkzzVcXlOB/LmGF113kj/XMKBZC/LnGmJdOUP+XMNPydKTP9eQ
+UsZ8ucauj29SP5c6u8vlfy57EdTvzf64c+lfw4vR/5c9sV6f5M/15CnaB/y
5xoqJqtD/lzud/Rp5M81rKnXm/y53L9sKvlz2ccuaeTPpX5Of5/+w59LfykZ
h/y5hk37U5A/1/Dbkc/kzzWk7xad/LmGrrkakj+Xfp03Dvlz6ad5ppA/17D4
Q2/y5/J5bzwkfy7zePJO8ufy96etIn+uYemB9OTPpb88qEv+XPap8n+QP9ew
q/o88ucakr2PJH+uYXXuWuTPNeQ6kYD8udyXyQfIn8t9NlOQP5d99ktX8uca
uk95R/5c6rNJf/LnGvJ2v0T+XP7+1w7kzzWsnTOL/LmGL2ZL8ucavvXbSP5c
w5bb6cmfa1jXJxf5cw1LGrnkz6We198nf66hX0Qr8ucaVhSqRP5c+l/CROTP
Zd9NdZn8ueyrsgz/8OeyD7VYSf5cw+QV+cify36S4Bn5c+k/ieOSP5e8kGgx
+XPZV/9ZR/5c6rPEA/Ln0o+V4+TPNRQZs5v8udz/w8/Jn8v+Xr8q+XMNb+4e
In+uoU6USPLnGs7+l4b8uYb6iU6SP5fXb/q1xA9/ruHo/Onkz6V/32lN/lzO
+2Ic8ucybz6fJn8u9botLvlzDd83bCd/LvV95Qz5cw3FZsYM/HmYzzXES3WL
/LmG5/UOkz/XEL/cO/LnGqZ97UD+XPbR3WnJn8s+Ve4A+XPZTy9cI3+uIXXq
U4E/D/O5nOeqi+TPNfTaHo38uZxnixzkzzWcOZSa/LmGprcakz+X+3eiDvlz
DX0O/EH+XPKtky/w58E8/yb7VXmX/LmO6nErkT/X8axYR/LnOlZHf07+XMe3
sVXIn+uY0nov+XMdk/OkIn+u4+L238if6yh0cTb5cx1nOx0if65j+oB35M91
9L9RjPy5jvN5l5E/13HQekz+XMfGJfPIn+souK44+XMd1XpFkD/X8ejfEuTP
dSzPuoH8uY7hUbORP9fxPm1F8uc6MnUbQ/5cR66e2cmf69j+W1ny5zpeJL5A
/lzH48GjyJ/L50uTmPy5jpVZd5M/11G0513y5zoGFhxG/lzH7hNTyZ/ruFT3
KPlzHfr5ReTPdTTuOoL8uY4Y25aRP9cx8lV08uc6tMTNyJ/rqFi9F/lzHT1S
byN/ruNW30bkz3Xcez+G/LmO39OmI38u37fvdfLnOqq+zUP+XMfW4WPJn+so
kzwu+XMdf7wbTf5cx+LGj8if6yjfYx75cx2Dxxnkz+V83rcmf67jdLeZ5M91
xFabkD/X0bJNZfLnOv4eupv8uY6ueY+TP9ex51hT8udSPwNKkD/XETXXM/Ln
OpLtn0f+XMeydd3Jn8v3XVqe/LmOYa/2kT/XERG9EPlzHb0/vyd/rqNjymvk
z+Xz1V9B/lyHtf8h+XMd0R9cIH+uY0CnPuTP5fNOX0v+XMfQTt8y/fDncn6D
1pE/19El4hH5cx0jTnQgfy71e/wR+XMdrxrOJX+uo2f51eTPdTTL+IT8uY4K
/90jf67jv+XPyJ/r6JNPJX8u/axMcvLnOvrVnUz+XMeK2NvJn+somWcI+XMd
ZZeuJn+uY5oxn/y5jvRzB5I/1/HZzE3+XP5+iVLkz3UcKhaf/Lk8723dyJ/r
eJi5LPlzHd0LPSd/rqNy7O7kz3WcyLGb/LmOTs0Kkz/XEa9DTvLn8nkGdiZ/
ruNyp1nkz+U83j8lf67j9ck/yZ/L/dJakD/X8W+13uTPdUS7OYj8uY6G51KQ
P9eRqNNk8uc6bhe4Qf5c6tMfS/5cx8/j3pA/15H61gvy5zrM7Ab5cx1rNk4n
f66j6aUa5M/l9UsfJ38u8yyXHvjzMJ9L/6nwmvy5jkpRDpI/13G1zVjy5zIf
17wlf64jwYks5M9lvt40yZ/r+JouI/lzHfWTdwn8eZjPdZwctpz8uY5UwxKR
P9cxaVEP8uc6Pt5qSf5ch7f9MflzmUclppE/l/ubYQ35cx1x5n0if67jwYRT
5M91GMN/In+uY8zGjuTP5TzfnCR/Lv3jwFny5zqu11xO/lzH/gGJyZ/raLe+
IPlzHdveJSF/Lvc18iz5c132rVbkz2Xevy9E/lzH28uFyJ/L/L16k/y5jtoX
VfLnct/fVCd/Lv105Ary5zr8jCPJn+voVu8T+XMd9w/8Tf5ch3LxIflzHfNv
3yR/LvX6pAT5cx31Jo0mf67jabzZ5M91fDp9gfy5jnT7E5M/15Hj1gTy5zp6
ZctM/lz6yYIE5M+lXj5dI3+u4+awbeTPdcTKmZP8uXy/NCB/Lp/3SEny5zpq
ueXIn8v59c9N/lz645WF5M91XChyhPy5jjNzZ5E/17Evz2vy5zriV61F/lxH
/kcFyJ9LfWbeR/5cR5s8F8mf66iyPBP5c+lPOX8mf67jeVaD/LnMz8L7yZ/r
KBZ5nfy5jtJft5E/15G7Tkvy5zrcFsvIn+uYNSaS/Ln0vxt5yJ/rWN+3Gflz
6XfVbpA/l/pvtoL8uXz+joPIn0t/brWb/Ln0h8+lyZ/L+X7cQP5czvNtavLn
OtrO/5P8uY72jUeRP9eRccNW8ufSH+YXI38u+3zZjOTP5b6Vfkb+XJ5/hmnk
z3X8eX43+XMdc5N0IH+uY96VQuTP5T7fz0v+XPrNt/vkz6U/titM/lxHkb77
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
yJ8bmJT6NPlz+XlkdPLn0k9b3iB/Lvdh2UHy5wYSTX5D/lz2h2LtyZ/LvhEv
DflzOY/J+8ifG6ic/Cr5c9lfW50gfy556MN58ufSr2JFJX9u4NK67OTPJU8l
TUX+XOZrhkbkz+XnZm3y5/K8Epcify79rVHewJ+H+Vz61xSb/LmJ8lkqkj83
kXRMe/LnJuKXfUr+3MT4a5XIn5tovXk3+XMT6wakIH9uIl/cXwN/HuZzEy9T
zSJ/buLCngPkz018OPWG/LmJPJmKkj838XjwEvLnJtDkIflzE5PezyF/bmJU
tGKBPx8d5HMTynGP/LmJiCjFyZ+bqNFrHflzE5sqZCF/bmJBlwrkz03UOTqK
/LmJd8ezkj83kWB4afLnJk7XP0f+3ESjqyPIn5to0y0h+XMTTfrvJH9uYt7p
2+TPTYyYNIT8uYnOaaaQPzdRcNNh8ucmcmRZSP7cRIHTw8ifm5iuLSV/buJB
6Wjkz03kat6E/Lmc//qe5M/lefXZQv7cRLubDcifmyhbZTT5cxN9BqYhf27i
3O2r5M9NNKjyG/lzE/8+G03+3ESWfrHJn5vwa4wify7nefQB+XMTyW7PIX9u
ouQnjfy5iUu1W5E/NzHtznTy5yau9GxE/txEuSsVyZ+baPhuJ/lzEwMWHyN/
buJhnibkz+V83hQjf26i+cIn5M9NzM01l/y5icZpu5E/N5HTL0f+3MTiJnvJ
n5to3xXkz00kbv+O/LmJwtOukD83cerqMvLnJtriAflzqf+G58mfm+jwphf5
cxOVnDXkz02kfv+F/LmJj3HWkj83cWTuA/LnUk+V2pM/l35R6SH5cxMdn8wm
f26i5aVV5M/l9dY/In9uIm31u+TPTbh5npI/N1HmWDLy5yYir/nkz01UfjWR
/LmJWNO2kj83kfnEIPLnJvbgX/LnJuasmkv+3MSBvAPIn5vItu4X8ucmWt0r
Qf7cxO/34pI/l/r6qyv5cxNLT5Qmfy71de8p+XOpr+VdyZ+bmH15J/lzE1+S
FiJ/bqKUn4P8ufTTnzuRPzcxMfVM8udy/xY9IX8un7dvBfLncn8ONSN/bmJs
wl7kz01smDiQ/LmJJyOSkz+X+ZJtEvlzE96Xa+TPpf6vjiZ/LudZ8TX5cxNx
5j0nf27i3huN/Lnct57TyJ+bSDSnOvlzE6u1/8ify/lH08ifSz/3X5E/l/51
Yj/5cxM1C40hf27CHPiG/LmJMfMzkz83MWyTQf5czj9aBvLn8n2+dAr8eZjP
TQxutoz8uYmnzROSPzfRaUh38udyn/a3IH8u82DeI/LnMg+zTyV/buKWupr8
uYl+oz4G/jzM53Ie/U+SPzdxp0dq8ucmhiztQP7cRKGHJ8ify+tvP0P+3MTf
lZeRPzcxsk8i8ufSz9Yi8OfBPB9l4uy7xOTPTUR7dIb8uYn161qSPzfx4ltB
8ufyee4WJH9u4nnkDfLn8vP7CvlzE91jVCd/biLGnOXkz028LTCC/LmJRV0+
kj+XfnWzNflzE69ePyB/buJmlJvkz2WfSlCC/LmJ2ltGkT+X/pVtFvlzE7s+
nSd/bqLq80Tkz00cSziB/LmJ/nUykT83UetCfPLnJq5muUb+3MQve7aSPzdx
smUO8ufSb+sXIH9uwolTkvy59L/pZcifm7gdNxf5cxODGi0gfy77xtlD5M/l
/XPPJH8u/efsS/LnJnq/rUn+3MTuEfnJn5tYeW4P+XPZFx6cJ38un7dORvLn
Ju4+zkb+XJ7XE438ufS3mPvIn5uYsPIa+XMT+w9vJX8u55mtBflzuY8Fl5I/
l3ppdZ/8uYnSu34jfy7zpllT8ufSzwpfJ38u87HGcvLncl4tBpI/l37XbBf5
c5nXX/4gfy77zff15M+lHqKkJn9uIsn6CuTPZT/rMZL8udzfU1vIn8t+t78o
+XPZFzpkIH8u+2znp+TPTZyoMZX8udRvgt3kz2X+lm5P/txEM7cQ+XN5npnz
kj+XfajkffLnJqy9hcify/tf3Ef+XL5PyorkzyUvPB9E/lzqdeF68ueSD7oN
I38uz+PPX8ify3zYtoT8ufT75fPJn5sY+Ptc8udSD20vkT+Xev2Qi/y5iazX
qpI/l/oo3Z/8uYkzRZeSP5d+WL0a+XPZ76tuIn8u8yH2UPLnUj+XPPLncl6T
y5E/N7FE7UP+XL7/5fHkz+V+n39A/lzyRWz251I/JVOTPzdxfNQm8udS/9mG
kT+X/nR9CPlzEzc+VCN/buKnWyXIn8v8y8X+XPp9evbnJj5vYX9uothn9ucy
f1cXIn8u9bRhGPlz2Ud2JCF/bmLNvszkz00MbXKO/Ln0g/fvyJ9L3vv8jfy5
zK/ofwX+PMzncv63dpM/t3Cw4uNncf7Pn1vomakl+XMLrac45M8tbDifgPy5
hVOblpE/t1Bk6k7y5xb+ytow8OdhPrfQY+8J8ucWFi5NTP7cwtRXB8mfW9jS
ZD75c3k/+0/y5xbazKlH/tyCfzsf+XMLX66eDvx5mM8tZKo9mfy5hW/bppM/
tzB0yijy5xaSDjlG/txC9IuNyJ9baDJlEvlzCz9laUj+3ELClxXJn8v3vTGW
/LmFGPH2kj+X53ErKvlzC7NGPSV/bqFb8aXkzy38PT6S/LmFtEvvkT+3cGNd
N/LnFpzkJvlz+fyRJ8ifW3hyqTr5cwtR7prkzy18rJKc/LmFRul+I39uIVuu
SPLnFhINaU3+3ELGERfJn1uoU+kj+XMLXRttIX9u4cGHeuTPLZSI75E/t1Am
akzy5xaqTVpA/tyC2+17nB/+3EL5y0PJn1s4GSMP+XMLt193J39u4dXt/OTP
LcS99Yr8uYXptYeTP7dQZftA8ucWhl+/T/7cwqjl+cifW8i6eCn5cwu5/r5O
/txCRFGP/Lm8/tSC5M8tjB+5g/y5BbPjXPLnUu9Vp5A/tzCi7XPy5/J51o8j
f26hQGGb/LkleXEH+XMLcYY3IX8u93n3QvLnUq8pdpA/l3o+Ppv8uYWBt96S
P7fw6YpN/tzCdS0N+XMLFTM8JH9uYXuD1+TPLUxKOZ78uYX2Ra+RP7fwdeQC
8ufy+WINI39u4Ze/3pI/tzCliEn+3MLsC2/Jn1u4/Lgu+XML8zb0In9uoW2N
heTPLSR5/h/5cws14o8gf25hRZcH5M8tzK1Wify5hXJ/rCd/bqHj+Hrkzy08
zZeS/LmFIXlykj+3sG5QSfLnFoqVHkr+3MKMDxPIn1uI3aA/+XP5/nfvkz+3
cK/DYfLnFpbvWUv+3ELeMkvJn1vI0CMr+XMLVdcVIX8u/a91C/LnFgoWX0j+
3MIcvRv5c3neX56RP7egtRtD/txC2artyZ/L94mamfy59PPC18mfW1jcPSv5
cws5p/1J/lxeP1MM8ucW0lQfTv7cQvWXO8mfSz9sEZX8ufSvyILkzy0syBaN
/LmFCZsqkj+X9598ify5hStDDpM/l+d19wn5cznP8XPIn8v8SnqF/LmFVVVT
kT+3sOziNPLnFra2+Rb1hz+X+q4yk/y5hYcJmpE/l/tYNjLw52E+l375OR/5
cws5Ymclfy7P7y+b/LnUw5Fv7X74cwtn73cjf26h3rv/yJ9b2HfsIvlzeb9V
fuDPw3wu/TfXAfLnFkqlnUr+XPpdpXjkzy382jkT+XML7eJsJ38u/ddMTv7c
Qt9U9cmfy/k9+DXw542CfC7z4dcY5M8tDDt8nPy5hcPRypE/l/50LJL8uQW9
xhLy5xYuvq5A/lz2nx1lyZ/Lfem3jfy5hfN/NyV/Ludx/ST5c+nXShry5xYa
fipF/txCgofnyJ9bSFk5KflzC41HfyF/bgG9S5M/l379Z0vy5/J6Of8hf25h
9bea5M9l33g6ify5hfwle5I/t7BbS0r+3ELk1mTkz6U/rP1C/lzuS7qY5M8t
7J3jkz+X/jv/A/lzC+cqRCF/biFqgnrkzy30TxST/LkFI8FE8ucW3hzsSf7c
wtXl98mfW2jQYBv5c9kXGy0nf27BHpmG/LmFxytqkT+XfU0pQf7cwnxnNvlz
mecb75I/l33kXXXy51IPw+KSP5f6r7iX/Lncx1Me+XOpp3WdyJ9bGF3uNflz
6ZduH/LnFvJlOU/+XM5vVVvy5xb2V5hO/lzm48Gm5M8tFMq+jvy59MORacif
yz6XKQf5cwsfElnkz6W/1LpD/lzm6YFm5M8tVH5Qnvy5hQ5r4pE/t3DowHny
5xZqXtpD/tzCnQTLyJ/LeZbJQ/7cQu1lj8ifW9izIib5cwstls0nf25BdVaT
P5f7dPcu+XML9VceIX8unyfjDvLnUt8NnpA/t9Dpc0Xy5zL/e+wnf25h/aQ7
5M/leTZMRf5c6mH+MfLnkie+fSR/Lq/32xTy57KPd2lB/tzCzpYxyZ9L/Y06
Qf7cwu/lY5E/lzxUagv5cwuxWp8kf27hZrZo5M/l/NZfI39uIfmb/eTPZR7f
ekX+3MKgUW3Jn8vnrZia/LmFlzf3kD+X/aTZZfLnFp6t/4/8uYWjBc+RP7fQ
stz3jD/8ucyfr1nJn0t/rZmC/LmFE+0bkD+X/lb/L/Ln0n+rlyB/Lvv6qt/I
n1sYcMckf27jj4p/kj+38duVtuTPbbSY/Jj8uY3s6SqSP5ffj7GL/LmNcycj
yJ/bWFIpV+DPw3xuY9nfM8if27iTaD/5cxvV/dfkz22871KY/LmN2OcXkT+3
sXtdJPlzG32KziZ/buNe+SKBPw/zuY1Lrkv+3EaNckXJn9tIdGIN+XMbj+dk
In8uf/9wOfLnNqa7I8mf29iWPAv5cxv1r5cK/Hkwzw0b69efIX9u40HW4eTP
bYw6Hp/8uY20l7aTP7cRJ90t8ufy/k8HkT+3kaPnJPLnNv5NfIj8uXz+gfPJ
n9tInnEo+XMbef9eTP7cRqlFUcif26i7vxH5cxu/JO1B/tzG92ubyJ/bSJC/
Pvnz/z2vkeTPbZy6l5r8uY2Yha+QP7fRZWNu8uc2VpUfRf7chn0/JvlzG1+3
jyB/bqNotkjy5zZuF59N/tyGUU8lfy71eqAF+XMbbUtPI39uY2tkA/LnNvIV
+5P8uY1G9XeQP5fnox0lf27DWdKI/LmNvQ2Kkj+3cV1/TP7cxu+LZ5M/t5Fx
ahfy5zbSjS1D/tzGiau7yZ/L+T7PT/5cvt+jN+TP5fOol8mf23haZSn5cxun
t94nf27jz1tnyZ/b+LvdP+TPbcyd+i/5cxuHOn8mf27j49DV5M9tpEkTSf7c
xreLbcmfy/O5Ekn+3EaMDrPIn9toVn8l+XMbufGQ/LmNuPdukz+30fXgY/Ln
8v41k5I/t1GgtUf+3MbP/SeQP7fRPMsW8uc2vIYDyZ/bKHhhJflzG+uKzyF/
Lud1rh/5cxsdy+Ukf26jfN/i5M9t7OwXh/y5jeFfOpM/t9Gt7R/kz200HPKE
/LmNGRW6kD+30bPPDvLnNsZsAflzG1MOZSd/Ls/zegfy5zYanJ5O/lw+X5XH
5M9tjMtRnvy5/Lx7U/LnNvrv6Un+XD5/mQHkz20MLBZB/tzGjUcTyJ/LPNp0
lfy59KOpo8ify31UXpE/t/Gp4TPy5zZ2bVLJn9vIVngq+XMb+5pWI39uo9qN
o+TPbUQ9rpA/l/p78oL8uY3Gs/aRP7fxRBlN/lzmX/XX5M+lv3fLRP5c7vNo
nfy51OPVdOTPbey40JH8uY1yxZeSP7dxsFQC8uc2mrboRv5c+uOS5uTPZd4O
eUj+XOrHmkL+3EbJ76vIn9tI0uND4M/DfG7Dan+C/LmNPa1SkT+3MWFGe/Ln
Un/Xj5M/t1F2/Wny5/L65ZaSP7fRpGdC8uc2Bq8uEPjzMJ/b+Ol9IvLnUn9P
TpM/tzFocwvy5zI/YxUkf25jzlOQP7cx6fV18ucy394kI38u812tFvjzMJ/b
aL12GflzG1cqDSd/LvvNqA/kz21E+dSK/LmNW4kfkD+3kSniBvlzG7UzFyd/
LvV2bWTgz/OECwLGVp5J/lzOO+V58udyHlYi8uc22ucZT/7cxsSRGcmf27gW
Jz75cxvH618lfy794cMW8ucyTxb8TP7cRucZ+cmfy7wtWoL8udSTV5r8uXy/
UTnJn8v5vJhH/lzmfYOD5M9trDk6nfy5jbWtXpA/t5F0fA3y57J/Zc9H/lz6
xT+7yZ/buD/hHPlzG1+SZiB/Ls9vXlby5zYSL1XJn8t5HdxD/lx+v+NV8uc2
qkzcQv7cxuRozcmfy++bS8ify/0teY/8ufTfOb+SP7expVwT8uc2VmS9Rv7c
Ro8/lpE/lz/XG0D+3MbbhjvJn8v8+1qK/LmNNzHXkz+X/SR+KvLn8uf95cmf
y/0cO4L8ufTPJ5vJn8u+cr8I+XOpj6npyZ/Lvjj3Cflzua/DppA/t9Gq0C7y
5/J9BrUjf24DtQqSP5f9tn0e8ueyv064R/7cRgq1EPlzG2rWfeTPpd/+8yf5
cxsLVw8kfy77T4d15M9txKo4lPy5DT1XTvLnNh4uXUz+XPb7BfPIn8t+iTnk
z20c7n2R/LnsB8lykT+X14talfy5zLfu/cify37Tewn5cxuzZ1Ylf24j5+KN
5M9txG8whPy55Ct45M9lXsUtR/5c5uuY3uTPZf7UH0/+3EadZg/In0t9zy9P
/txG1ampyJ/bSPV+I/lz2ddWDiV/buNd2yHkz23Um1uN/LmNzbNLkD+3MT4B
+3PpTxr7cxsHtrE/t5Fa2Uv+XPaLhIXJn9tImX84+XPpr+2Skj+38Xl+FvLn
Nl62P0/+XPavph/Jn9uYtS/qlh/+3Ma0YvXJn9sYffAE+XMHf1UdtivB//lz
BzsG1CR/7iDmxGTkzx3E/Rqb/LmD3IMWkj93MPDcNvLnDjbkr0f+3MHbhcfI
nzsoVj8B+XMHzf7ZR/5cPs+kueTPHbzPWZ78uYMtC+qQP3cw7mRe8ucO5q4/
GfjzMJ87iJ1iIvlzB2rzqeTPHdzONoL8uYN/4x0hf+7gReEG5M8dDC0ykfy5
g47H65M/dzBi4J+BPw/zuYPULcaQP3fwbshu8ufy5ypRyJ87SPTpMflzB1kW
LSZ/7qDlw3vkzx20fXOH/LmD7m+6BP48mOcRDk5X1smfO1iX9Dj5cwdTP1Yl
f+4g6Ued/LmDTvV88ucOyqbLTf5cvm/Ge+TPHdxr35L8uYM+rc6TP3eQJ8N7
8ucOMv6xmfy5g7qX6pI/dzD8vkP+3EHtC9HJn8vrNZ1P/tzByaLf4vzw5w6u
zh5C/tzBLwd+JX8uz+ffbuTPpT6m5iN/7iDxuJfkz+X5xx9G/lyeT6MB5M8d
VOhzj/y51Hup38mfO7iMJeTPHVyJdo38uYPdZxzy51L/qUD+XL6vsp38uYMD
b2aTP5fzPzWJ/LmDKpFPyZ87aJFmLPlzBz+vMsmfO+hZejv5c7nvzxqRP3dw
wl9A/tyB020b+XMHrVLOIn8uzyvbG/Lnch/TWOTPHfxUMzX5cwcXmkeSP3fQ
b9ZL8ucOFlYfS/7cwdHOV8ifO1i8bR75cwezsg4hf+5gdO/X5M8dVGyokz93
sP3Va/LnDupFq0P+3MGMnf+QP5fPX28B+XMH/7w+Rv7cwaCEw8mfO5jWJZL8
uYNKVSqSP3dwsNg68ucO1o+oS/7cwYecKcifO6ifNQf5cznvbiXInzvY9/sQ
8ucOXt0fT/5c7kO5fuTPHSw5fo/8uYP//jpE/lz63eI15M8dPMy2hPy59O9a
WcifOzg/rjD5cwdt/mhO/tzBzJQLyJ87ePm8C/lzub9nnpI/l+dVfDT5cznf
DO3InzsocDoj+XMHfyS7Rv7cQWSJLOTPpV82rkD+3EGTt9HIn8vrJx9G/tzB
sQ07yJ87eJwlCvlzmYdLQP7cQZ0XUcifS//u9Cf5cweZKl0kfy7Pt/Ah8ucO
7kx/TP7cwaFSs8mfO0h34BL5cwe946Ukf+5gzZCp5M8dfIn4Sv5c+kOMGeTP
HSzY1IT8uYM/P9wjf+4gzfzfyZ872LMiM/lz6R9RLfLnDqq1+truhz+X9xvc
lfy5g98nHiN/7uBj8wvkzx10Lu0F/jzM5w7Gn9pH/lzqdddk8ufy+k/ikD93
8HfCjOTPHdgztpI/l/u3zCd/7sBcX5f8ufSDLrkDfx7mcwf9D0Yjfy77RpX/
yJ9L/YwsQ/5c+kWV++TPpX/eXkT+XOZP9/Lkz+XvFylD/txB39hbA38e5nPZ
D143Jn/uoGbdE+TPpf+OS03+3EGHriXJnzs40vgs+XMHY04lJn8u8zb+Z/Ln
DiI+lSJ/LvflaHPy5zJPlvUgfy73vUMN8ucOKtefSP7cwedt3cmfOyg3ODH5
c7mvmZOSP3fQS9LxD38u+8ek6OTPHexM7JE/l/6R5D35c+n/278d+uHPHWzu
VIf8uYNsXaKTP3ewqcN48ucORmXtQf5c9iHlHvlzB98PbSF/LvPp8FLy5w4O
v0xN/tzBoiR/kT+XfbNjMfLnDob1mEn+3EF24w75cwdZK1cjfy7P51Fs8ufy
ef7dTf5c+mEWl/y5gzOJO5I/l/156Uvy5w7KdOpF/lz2+UFnyZ872Ba7Dflz
B/uXTCV/7uCp34T8uew7g9aQP5fzvJua/LmDkX2ykz93MKGBQf5cvv/qW+TP
HWy1mpI/d+DnLUf+3MHSGHHJn8u8Mc+RP3fQNcNu8ucOutVaQv7cwZMZv5I/
l/380wPy5w5ufYlO/tyB9mku+XOpz2aryJ87yPnzHfLn0r8/HyJ/LvO6yzby
57L/rHpE/lzqu/if5M8d3Dy0l/y59Ls7t8ify7xYlYL8uYNJz4+QP3eAkh/I
nzto138S+XMHe/c0I38u+WFDdPLnDh5d/I/8uTzvKTHInztYMW4T+XMHzTce
J3/uIFW3KOTPHYz9doX8uezT+faRP5c8kuEl+XP5vBf/Jn8u/W96SvLnMp/T
7yZ/Lvv8movkz+U+fjtK/tzByqFnyJ/L603+mvGHP5fnXSwL+XMH7vwI8uf/
62f1yJ/LvrCsBvlzySNzi5E/l/r8kJv8uYOCmQ3y5y7QpQL5cxdVf2pD/tzF
ntsPyZ+72NuuAvlzFxHldpA/d/HM8cmfu4g/Oyf5cxc1t04jf+7ifo295M9d
rG3+kvy5i+X7C5I/d+GkWkj+3EXuaPfJn7uoO24m+XMX2WYVIn/uYmILm/y5
ixEzC5M/d7HNX03+3IX+KgP5cxdx7LLkz12cbjWc/LmLnu0ykT93sS5bycCf
h/ncxdQ4p8mfu2jcbyj5cxeLU8Yjf+7iduZt5M9dNO15g/y5iwWFB5I/d/H4
zATy5y7sJgcCfx7mcxd/X59L/tzFp36DyZ+7OHdoIflzF4uifn/zw5+7GJC8
IflzF2ladSN/7mJXno3kz13MmVY38OeJg3zuIqUygvy5C7doKvLn8rzmXSJ/
7mKImYv8uZzPmhHkz11ELRmD/Ll8/hTDyZ+7UCbcI3/uYsmKmeTPXVw9mIz8
uYt2WZqTP3dRcP0U8udSPxXqkz+X77+6PPlzF/WObyN/7mJV38Pkz12UNBqS
P3eR+Exh8ucuygx6SP7cxVlrFvlzF08TdCZ/7sKKVZr8uYvXFXaRP3eRqXE+
8ucu8td/Tf7cxfPhF8mfu4hxajH5cxfZc98jf+7ic60z5M+lHl/0IH/u4om1
ivy5i2YfPpI/d/E2wb/kz130XnKP/Lncv1ptyJ+7+K3effLnLkZ/nkH+3EWD
x8vJn7uYfySS/LmLR21ukT93cabSI/Ln8n0eJiZ/7mL8N4f8uYsE+njy5y6O
7t5E/lz628f+5M9d7Gi1gvy59Msbs8ifu1D/7kv+3MWaRz+TP3eRMaIY+XMX
eVPGJn/uYuX0TuTPXRRWSpE/d3El02Py5/L+7zqRP3dRJd128ufSvxsUIH/u
4la7bOTP5b4MbU/+3EWG3tPIn0s9x3pE/lz6+d2y5M/l82RpQv7cRevOPcif
u8gVoz/5cxfmd4/8ubz+gvHkz12s7nCF/Ln0o2ojyZ+7KHbmBflzF5FpnpI/
l/vbQyF/LvclzhTy5y46ZatK/tzF18VHyJ9L/56SjPy59M/Nz8mfu3jVei/5
c3m9eyPJn8u8yvyK/LmLTeUykj93sbuJRv5c+v/6tOTPXbRZ24H8uYskPy0h
f+5ieob45M9dVCzTlfy59MuRzcifu+j29wPy53J/ok4mf+5i6cOV5M9dTGj6
nvy5i/31jpM/dzG5dkry5y6mjG5H/tzFv2f+I38u83H5KfLnMu9LLCF/LvXf
NQH5c3l+q/KTP5fzeJ+Q/LkL7/kp8ucuKu1oTv5c6ishyJ+7+PiuAPlzF3m+
XyN/7iJ1tGTkz+Xvp64a+PMwn7v4sn8p+XPpX82GkT+X/rzoPflzFyOVVuTP
XRzOGEn+3EXbfNfJn7uIVrYY+XO5P1GCfz//f/lc+le3GeTPpR+WOkf+XF6/
cELy5zIPm4wjfy7Pe3sG8ucuquWJR/7cxeaJV8ifu/iQJfj383CeL3JR7np2
8ucy/y/mI38u+0m/4uTPpR/NKEX+3MUpNQf5c/l+3eaSP5f+9Ho/+XOZt3Wn
kT93kTn2c/LnLib9XJ38uYt3Z/OSP3cRO+0u8ucu5hY+S/5c5sO+dOTPXZyv
mYX8uYtUTRTy5y6SDd1N/lzOL98V8ucurtXfTP7cRdmzTcmfu9j3fBH5cxc3
f7pL/lzmc9/c5M9lH8nVmPy51Itzlfy5i39+X0r+XJ5H1f7kz110r7uD/LmL
N19Lkj+XeZZgHflzOW8jJflz6Wfny5E/l/m+eDj5c9nP42wmf+7iQqwi5M9d
dN2Vjvy55IHjj8mfuyiwbTL5cxd9u+wkf+7ixZ625M/lPs8E+XPpD5t/I38u
+/DNu+TPXaRvVJD8uYtBA/aSP5d99HIF8ufSfzoMIH8u/bngWvLnLipnHEL+
3EUJKwf5cxffJi8ify77y8y55M9d/FVkNvlzF7NGXSB/Lu+f6Rfy51KvaaqQ
P3excFlf8udy/lsXkz+Xfna3CvlzF0c+bCB/LvNix2Dy53J+C13y5y5+7V6W
/Ln8fsLe5M9d3Hg4jvy5zNPPkeTPXXQsVJ78uYtxj1OSP3fRovZG8ueS3zIO
JX/uokZM9udST3+wP5f7UJf9uey7t0uRP5fnE5X9uYt+O9ifS/1n2Ev+XPJH
s8Lkz2X/OzCc/LnkmTTJyJ+7+GlAVvLnct69L5A/d9Hk0mfy57I/jIix5Yc/
d3FvcFPy55K3ll8jf+4hZs2HY5L8nz/3kOBmKfLnHlKPi0v+3MPsVNHJn3u4
W3kO+XMPz5JsIX/u4Zeytcmfexg/9DD5cw8J7bjkzz3Uibeb/LmHcwdnkz/3
kK1cWfLnHuyltcife0i+8zfy5x5qjzxO/tzDxzvjyJ97KGxMJn/uoeKhoeTP
PTQffpD8ufz+qrrkzz1sfD6e/LmHU63rkT/34LgVAn8e5nMPkW9HkT/38Cru
LvLnHrIe+zbghz/3MLjhI/Lncr6xFpE/99Ah/13y5x4O5b9N/txDqpydA38e
5nP5fENV8uceEv1+jPy5fH+rCvlzOe9EGvlzD19buOTPPRRJ9wv5cw8fkt8h
f+7hSO3mgT8P87mHRWXPkj/3kDLKW/LnUk/ZNpE/93Bzcx3y5x4u7LbJn3vo
vCIa+XMPP/02j/y5h1FJv5I/99C2yWDy5x4WDMpN/lx+3rIr+XMPBSv8Tv7c
Q0TRF+TPPfTdNIT8uYckCfuTP/eQIvVd8uce4jzIQ/7cw7hLi8ifexg28Qr5
cw+t69vkzz3MX5Gf/LmHJ5O2kj/30KvDLPLnHpaWnkj+3EPGWk/In3uoNGk0
+XMPORyD/LmHqWu3kj+XeivfkPy51EePeeTP5TxPbyF/LvXXaQb5cw9Fe70i
fy79pY1B/txDj9kpyZ97aLnsHvlzDzWuPCd/7mH/6NHkzz38uvQS+XMPjR/N
IX/uYXW1QeTPPXyZ/5L8uQe/v0r+3MPjhK/In3t4Z9Yif+5h5qGe5M893Ggy
n/y5h7fvj5I/97At8TDy5x7GdrlP/txD4kp/kj/3ULLQWvLnHqIMqkP+XO5v
puTkzz0US/0z+XMPyVoVJ3/uoXTmweTPPZQ/N478uYdWefuSP/ewfdNd8uce
dhU5SP5cPt/I1eTPPcxRF5M/l/5bIDP5cw912xcif+7hfrpm5M89RP82j/y5
h1KHO5M/95Bh2RPy51Kf7ijy5x6Ofm1D/lzu57wM5M89jLl1hfy51K+emfy5
h+PZy5M/l/raEZX8ufTryCHkz+X799hO/lzu36tviX74cw/ZWxQgfy796d/v
CX/4cw8VclYgfy73L8kF8udyf74dIH/uIVflR+TP5XlHnUX+XOZlt4vkzz3U
256c/LnMhzxTyJ/L5z/xmfy59NvV08ife2jTsDH5c3l+c++SP/fQvXRe8ufy
80qZyJ97aLbQIH8u8z/JF/LnMg/TdyF/LueT6yj5cw/5454nf+7BfeiQP/cw
veVe8ucejBqTyJ97yNI/NvlzD+vnpSd/LvMw+xby5x765PfIn3vYWawO+XM5
nzi5yJ97SFslKvlzD4fvHCV/7kG3S5M/l/l18y75cw+TWiwkf+6hd7Ry5M9l
fh35g/y59IfhmwN/HuZzD3k6NSJ/7iH97f/In8vnVVKRP5f6/1Cc/Lk8j7un
yZ/L65dNRP5cvv/Aj+TPZV/rUDLw52E+94Aizcife7iYsjv5c5l3j6uRP5d+
c2E8+XMPe7N1I3/u4eGnhOTPPWyZmZj8udTvuI+BP78b5HMPI2NFI38u59/T
IX8u37/nW/LnHrqm/3rohz+X+3qrFvlzDw9uRSV/LvPj2ljy5x5+m9SN/LkH
r9sd8ucelmTZTP7cQ5UsS8ife+hfORX5c9k32tcgf+5h+IUi5M/l812bTv5c
zrvzLfLn0l/XVSF/Lq9XIhb5cw/dEu0ify73bahN/tzD8hbtyZ9L/475gvy5
1MfJnuTPPeS9dZr8ufTXuq3Jn3s4E3UK+XOZ950akT+X+3X9X/Lnst/mSUX+
XObn+azkzz0U2qSRP/fwe8yb5M9ln2nVmPy5zOcRZcife3hRJTb5c7mvzc+Q
P5d9pftO8ueyr61cRP5c9rlnucife5hRKpL8udyX0tHIn8v8KDGH/Lnc740r
yJ97SNr7FvlzD/lKHiR/Ls9v/xby51IPXx6QP/dgjS9P/lz2ZXUP+XO5b1lv
kj/3UPxzBPlzD+vyHCZ//r/Xe0f+3EP8ExPIn0ueStiU/LmH91GikT/3cDXl
MfLnsl/diUb+3EOJaxvIn3u4HuU/8ueyv+/9du2HP5f7Xfwy+XMPZQbuIX8u
ear9c/Lnsh+naE3+XPabe8nJn0s+a7eT/Lnkl0/nyZ/LPCh+hPy55Nszp8if
e6h+6zP5c8lfozKRP5fn99Qjfy55N1Zd8ufyfd9UI38u8/ZJEfLncj6FcpE/
9xCvs0b+3MfvM8qTP/fR5+/W5M99pMr8gPy5j/rby5E/9/F9yjby5z6SNXHJ
n/vo8vhn8uc+tNhTyZ/7eL1wN/lzH/rG5+TPfTRLBvLnPn5rM5/8uY/N5e6S
P/dR6tZ08uc+Bj4F+XMftbaY5M99HH5akPy5j7atV5E/l9crlJ78uY+dzUuT
P/eReOdQ8uc+iu3LQP7cR4J+xcmf+xhQ8yT5cx8Pzw8mf+7jUKc45M99zOu7
hfy5j+Onr5E/97FuSn/y5z4WZxhP/tzHoB37An8e5nMf43PNIX/u4/LVgeTP
fbRLuYD8uY+4f31988Of+1jZvT75cx/O4S7kz+W8J60nf+4j78fagT8P87m8
f9th5M99NJ+fgvy5jzrRL5I/9zGja07y5z4WqcPJn/t4uiwa+XMfawcMJX/u
4/7HO4E/D+Z5Nh9NlRnkz+W8siQlf+4DE5uSP5d69SeTP/fRYWtd8uc+FLcc
+XMf9fJsJX/uY//zg+TPfXQbUJ/8uY+6hQqRP/ex+30k+XMffw+bQf5cnnev
juTPfSTpVor8uQ/v4A7y5z5GXM1L/lye96WX5M99HIt5gfy53Pc/FpE/9zFh
zR3y5z6WXT5F/txHk9bdyZ/7yDdlBflzH0m7fiB/7uPdyJXkz33czHSX/LmP
f263Jn8u5xl5l/y5j5T9ppM/l593WEb+3Ida+T75cx8nvtwgf+4j++0H5M99
XOiSiPy5j5cjbfLnPp4sGkv+3McvlTeSP/fxdUQ/8uc+CsRYTv5cXr/zTPLn
0j/i9CF/7uPjgOzkz30k2laE/LmPXbtikj/3cf73juTPpT7XlyB/7qPayYfk
z308n9aR/LmPnCe2kj/3sT5+fvLnPrJ5Wcmf+9iQqx35cx/vM08lf+7jyvoH
5M//d3/KkD/3EeV2I/LnUu+ZupM/9/F5S1/y5z7WbHTJn/vYVmcc+XOZN9ku
kz+Xv6+PIH/uo8q45+TP5fM9eEz+3Ed7JCN/7mPr8Unkz31k+VCZ/LmPhe0O
kz/3kadRUvLnPsYOekb+XPp7/j3kz33E2TiC/LmPo1Fekj/38edPGcifSz0X
UMmfy/0dlYb8uY8Mo9qTP5f7HG0x+XMf3ePFI3/uo0TWLuTPZV61a0r+3MeC
ypHkz308eziR/LnM47MryJ/7SFv5HflzH73K/0f+3EePcinIn/tY0q8t+XMf
Lw4dI38urzf/JPlzH5UKLSZ/7sPuGJ/8uY9VK/KRP/dx4H0C8udSDy9Pkj/3
kXFvM/LnPnKoBcif+6gRpQD5cx/34l0jf+7DTZKU/LnU9y9VyJ/LPLu4hPy5
zJN/hpI/l9ff8Y78uXzfzC3Jn/vYXvw++XPp/zWvkT/38W/rouTPffRMNYL8
uY/Ws6eTP5d9rt1Z8ucyv1snIH8u7zduLPlzqf8n6cmf+7jWIi75c5n3Ry6T
P5f53Ghz4M/DfC71aGQnfy79Xs1H/lw+3+5i5M99lPRLkj/3UW5qdvLnPh7F
mEP+3Me0vvvIn8v8fzMl8OdhPpd9bvZT8ufyeU5VJX/uY3KXPOTPpZ+c2EH+
3EfLl6fJn/vY2Dkt+XMf55TM5M99FE6djPy5j6qld5E/97EvxmXy57JPZt1E
/lzu38Im5M9lnh9YSP7cR7Rod8if+yjeMBf5cx9n3Ebkz33kj32F/LmPIZmX
kD/3Eb9sP/Lnso/+tZ38ufSjbyXIn/vIlGwt+XMfY1KmIH8u/TGyLPlz6ac7
hpE/99E51Sby5/J50hYmfy754n5a8ufyPD4+In/u49OTSeTPfUxfuYP8ueyL
39qQP5f8cL0A+XN5Xt9/JX/uY1Smu+TPZX5vAPlzH1+u7CF/LvPolwrkz32c
ytWf/LnMz8RryJ/LfY8+mPy59MMv2cmf+7AGLSR/Luc5aQ75c+nPJWaRP/fR
deZ58uc+YhXLSf7cx19/VCZ/LvPuSh/y57IvvF1E/tzHxfRVyJ/LfCm5gfy5
j6z2YPLnPtIldMmfSz56Uob8uY+aQ3uRP5e80HYc+XMfg0dGkj+X/fRmOfLn
cp6/pyR/LvvH/g3kz+X+LR5C/tzHnsmDyZ/7KPO2KvlzyUsR7M9lHmwsRf5c
9o+nkeTPfRTcxf5c7msh9ueyn+5jfy71VWYE+XOZZ5eTkT+X/tUoG/lzqe/h
F8mf+0hf6hv5cx/DqsQmfy7z9Whr8udyfmMekz+PwLuJvzZQ/8+fR2BGnjzk
zyPQbHQU8ucRKFPqW+wf/jwCC1NPJ38egXqlN5I/j8DuWjXJn0cArQ+QP4/A
rVMxyZ9HoNHE7eTP5fO9n0n+PALtm5Umfx6Bvitrkj+PwNoVucmfRyBVk2Pk
zyPwZuEY8ucR6LZvAvnzCPxXZzD58whkSrSf/HkEEri1yZ9H4MnUceTPI5Aj
cV3y5xH4d3U58ucRWN17JPnzCLwdsoP8eQT+Lvh1wA9/HoH4Jx6QP4/AhsYL
yJ9HYMC42+TPI5B2yE3y5xE4374j+fMIXNqZjPx5BNo2PkL+PAL6b5XIn0eg
aiqF/HkERneyyZ9HoHi6HOTPI9BGv0X+PAJbSzYN/HmYzyNgZD1N/lze7/wr
8ucRmKdvJH8egaZTa5M/j0CGGRb58whM7heV/Lm8Xry55M8jUOna58Cfh/k8
Ai2zDCJ/HgGrZC7y5xHYm64L+fMIdIiTl/x5BHK/f0b+POL/6+q+434u37CB
E0JGZrbv53NdCVmRPU97UxSJ7FEhsvkhe8ve2Vsksm57j+xNxG1vMpOM53Sc
nqfj9fx5vco9PuM8z+s6vm/kh2aDyJ9H5J8VfcifR+Tpzovw51HYn0fkowGF
yJ9H5JN288ifR6TUh3+QP49IeD81+XO9HwWKkT/X65V+LfnziBR/NJX8eUQ6
7RpL/jwicY7eJH+u3y/eCPLnESk0MCX5c71/adeSP4/IyuWNyZ9HZNzpmeTP
I5InWxT584ic2zOF/HlEch/4i/x5RMquTUn+XJ/XKwH5c/15b18ifx6R/Knu
kj+PyLVdP5I/13p09iT584i8n3oG+fOIbO/dn/y5Pl977pE/j8jN2cnIn0ck
bda/yJ9HZHiuuuTPIzLzcHfy5xGZ8t1s8ucRaf38d/LnEbmfdAj584gM6nKF
/HlEdn/6KfnziOwqtpz8ub5vveqTP49I4CPkzyPyQZrc5M/1eW5Qjvx5RA5l
GEj+PCKLto0mfx6R6Zl7kz+PyL5Zl8ifR2Rx9p3kzyOSusOv5M/1fXs6j/x5
RP4OspM/j8ilGiXJn0ek1ttfkz+PSJPTs8ifR+SnWZ3In2u96nOL/HlE/rg/
nPx5ROIebkP+PCIbOmQlf671/dc/yJ9HpN2lbOTP9fd5UY38udaHQTHIn0fk
86WDyJ9HZGPJ9eTP9fuvepH4P38ekcPZi5M/137X5mWi//y51rMH1cmfRyTH
vuPkzyNSes0O8ucR6ZHoBvnziKxdPZX8eUS65DpJ/lzfl7YR8ucROXJrAvlz
fZ57PiN/rv27wWTy51qvkjQjf673p8ol8ucR2fGoEPlz7WfPPiR/HpFKld8j
f67P92/PyJ9rv9jbify5vu8n9pA/1/48/xj5c60//dOSP4/IpLhbyZ9H5H8P
x5E/j8jzdG+TP9f3r1AW8ud6PXeuIX8ekVmH05E/j0idU1+RP9d5ZGJe8ud6
/y+/qv+fP4/I5ba/kz+PSNTcSuTPI/J2y0vkz/V5ejSH/Lnen8FVyZ9HpPMn
lcifR2RUkjXkzyPy5T9NyJ9H5FaTfeTP9fqPDcmfR2RO53Lkz/X7Nz5M/jwi
vX9PSP48ItdjPiV/HpF7d8rDn9v+PCLR61uQP9f+Mbkr+XN9fhrVJn8ekZJV
xpA/1/ltThfy5xHp2joh+fOIRJIkJn+u1y/2U/hz259HZEHHGOTP9Xm8lYb8
eUS23nxI/lz7zbh/yZ9HpEiVeuTPIzK2cgzy5xGJX24U+fOIHH/ZBf4c/XxN
RA5EXyB/HpFyY1eTP4/Is9HzyZ9rf4wKyZ9HJNeJL8ifR+SrQqXJn0ekRfEp
5M+1Hpw8T/5c71fyz8mfR2TNvNjkz/X+tdxI/lz//2upyZ+/ng++J38ekRkN
75I/1/r/YXfy5zrPFj5M/jwihaNakT+PyME6E8ifR2To/ibkz3X+y7eU/Lm+
/yND8ucRyZg9J/nziJxNmIL8uc5fdc6RP4/IkM1NyZ/r+xhdmfy5zv8L45A/
1/q/7jD584hs3reB/LnWl5dzyZ/rny+ej/y53r/JV8ifRyTblBjkzyPSccJ0
8uf6/eIsJn8ekTP7z5M/1+s9fgf5c+1vyaLIn+v+o+I18ucRaRBdjfy5Po8N
N5M/j8j8bufIn2t9LJeR/Ln2w/67yJ/rfHbuEflzne/TjCV/rvu/2s3Jn+t+
pHIM8uf69Vr9Tv48Ik1zxCR/rv3vg5Xkz3XerLSX/LnWx4Qv/vzPn0fk7shT
5M8jUvfgZvLnEUm5/g7584h88W0r8ufaT3NGyJ9HZMS6DeTPI3K09HHy5xH5
ceRu8uf6fqQ/RP48ImU+fEb+XOfDUx+SP49ItfzpyZ/r/alen/y5zp/Fa5M/
1/1fvtLkz3XeHZqX/LnWq83JyZ8H8tHW6vDneN91/VNUK/hz268H0qHzVfhz
vP+6vhO3Gvy57d8D2XN5Lfw56oGu0y9PC39u+3n97/lzw5+jPuj6txoT4c9t
fx/I6Qeb4M9RL3T9Say78Oe23w/kaf3i8OeoH7rOuGEW/Lnt/wN5+dNF+HPU
E13fyzkF/hzbu7iBjCtSAv4c9UXXB+Olgj+384FA5hUV+HPUG11v27AE/tzO
CwKJNToz/Dnqj64fr60Ef27nB4Fsf3cw/Dnqka5bp8wKf27nCYGsPVYW/hz1
SddblhyAP7fzhUCmZx0If456pevkv78Nf27nDYH0OLEG/hz1S9f5Mp+FP7fz
h0DW3+0Df45yoevKvUbDn2O8fzeQYym2wZ+jvun6f8Onw5/b+UQgzfP2hz/H
66rrFd1mw5/beUUgl1b8C3+O+qfrMscbwp/b+UUg3/vO8Oeoh7ru8eA3+HM7
zwjk38++gj/H467r8MBg+HM73whkVswA/hz1UtetGp2AP7fzjkA6nsoDf476
+V4gJToMgT+3849AmiWMCX+O25EqkJjXBsGf279nF0iGehfhz1FfUwfyXacp
8Od2PhLI8NHvwp/bP4cXSOp/m8Of23lJIKv6joc/R/1NG0gS1wD+3M5PAvm1
b1X4c9TjdIEcmhUFf27nKYEUrrMT/ty4fSDX7zWEP7fzlUCilgj8Oep1hkCy
N70Kf27nLYH8+XQK/Dnqd0b9+e62hz+385dARt2oAH9u2/lAFhfYAH9u7T2Q
ktUKw5+jvgd6f6r8BX9u5zOBTOp6HP4c9T4MJNg8F/7czmsCGZrlIvw56r8L
5NSnh+DP7fxG36erXeHP0Q98IHOTLYY/t/OcQNY9fAJ/jv7wfiCH31kCf27n
O/r+L7wIf45+kUnfp4at4c/tvCeQC80vwZ9jO/hBIH/HmgJ/buc/gTR+shD+
HP0kcyC1Tl2GP7e/j1Cfz97n4M/RX7IEcrfFNfhzOx8K5NmrhPDn6DdZA+mZ
Kg38uZ0XaT3MPQr+HP3nQ/360Svhz+38KJCxafvAn6Mf6Trm6EXw53aepO9z
3Knw5+hPum446Qf4cztfCuRaqo/gz9GvdN23emn4cztvCmTO57Hhz7Ed0HWF
o+3hz+38KZDzVcrDn6Of6XrSN9fhz81zBLI7fwf4c/Q3XddsuRb+3M6nAmm3
sCj8Ofqdrn9cnwP+3M6rAml0si38Ofqfriscmgh/budXgZyscw3+HP1Q1yOL
VIE/t/OsQN4a3BT+HP1R10+PdYU/t/OtQBI16w1/jn6p655N0sGf23lXIJkS
jYY/xzio62zRp+DP7fxL7/+uofDn6Ke6/qXsXfhz+7zK6/5wE/4c/VXXsZ4k
gT+38zHtVwPGw5+j3+q68bLP4M/tvCyQ6jl2w5+j/+p6fZgE/tzOzwK5X/YO
/Dn6sa4bvdwMf27naYHs7DIM/hz9WddVt9+DP7fztUC63MwCf45+resObyeH
P7fzNq2HX2SCP8c4oOunddrBn9v5WyBfHJz3nz+XQPadigd/budxgYx51Qn+
HP28ZCC3SreAP7fzuUB6Zb0Kf452VCqQ/ZvGwZ/beV0gw35eDH+Ofl5an8ec
j+HP7fwukLjZ98Gfo5+X0XqePYA/t/O8QKIbt4U/R7kqG0jKRXvhz+18T9cD
D8Kfo5+XC6Ru5vnw53beF8h79d6BP8frVl7nifFF4c/t/E/71cUE8Ofo5xX0
fT13EP7czgO1/i7/Gv4c/byi9u/YxeHP7XwwkHIPi8Gf43ZUCuTVqzPw53Ze
qPXi7STw5+jnlbX/5fwc/tzOD/V6H10Af45+XiWQqf8bDH9u54mBDNnwGP4c
/bxqIN/mbAl/bueLgdyudAX+HP28ms5jjc7Cn9t5o/78ncrAn6OfV9fnJ8cw
+HM7fwwk9+Ip8Ofo559o/e51FP7cziMDKdIzAfw5+vmngWycOwr+3M4nA0kY
E/m59fMagfTpEw/+3M4rA8ly6TT8Ofp5Tf1+vdbAn9v5pdbDvB/Bn6Off6b9
6eOi8Od2nhnIkYtl4c/Rzz8PpFuz8vDndr4ZyPgrueDP0c91/fSz6fDndt6p
897JrfDn6Oe6flZ1Ivy5nX8GcvTFLfhz9HNdhx/Xgj+381C93ucLwp+jn+u6
ceEN8Od2Pqr9pOFh+HP0c11nuZ0J/tzOSwN5f1g2+HP0c133mpkE/tzOT7Ue
HdgIf45+ruuTQ07Bn9t5qtaztavgz9HPdb0hX3P4cztfDeTnL+fCn6Of6/rl
5Avw53beqvNszHzw5+jnuu63qQn8uZ2/BnJ1yWn4c/RzXZc+PR/+3M5jAznz
sjf8Ofq5rk8nWQ9/buezgSxfUx7+HP1c1x8dXgZ/bue1+j5dicCfo5/ruv7S
qvDndn4byDdDh8Cfo5/r+vSjVfDndp6r7+/LkvDn6Oe6jt7yAfw5+nlzfZ7/
uAF/jn6u67eOjIc/t/NefV4mboA/Rz/Xdd87beDP7fw3kMxHisOfo5/rusLT
AvDndh4cSNkPL8Gfo5/rOuGaEvDndj4cSJpLW+DP0c9b6vNR6hP4czsv1v1O
7T7w5+jnrfR9Lfwr/LmdHwdStNAA+HP089aB5CryEfy5nSdrfz00B/4c/fw7
nX9uToc/Rz/XdaF5U+HP0c/b6H4lznH4cztv1vq4Og/8Ofp5W30+d9WEP7fz
Z+23DXrBn6Off6/PV7958Od2Hq31aNtn8Ofo5+30ft5aAX9u59OB5N81AP4c
7bx9IDF2pIU/t/NqfZ+WVIE/Rz/voPXs857w53Z+rfu5cqPhz9HPOwaSqvVV
+HM7z9bnf081+HOU+056/30Af45+ruthW1fAn6Ofdw6k+JqB8Od23q3fb/0A
+HOUqy5aj3PWgj+38+9ARn9bDv4c/bxrIG1SV4Q/t/Nwne+bXIU/Rz/vps9X
hTzw53Y+Hkjb6C3w53ic/6fXN3tJ+HM7Lw9k5skh8Ofo5911/zHS/v1zOz/X
+b80/v526+c9dH4aib+//c15eiAFFj2DP8ev2zOQKvHMn6Of63rmOfPn6Oc/
BDL4avR//ryX/n6XS72T7Mv5xdHPdZ2keCn4czt/D2RC3Njw5+jnut605NXr
/PzN5+UCeZhrKvw5+rmuGyxFfv7m83OBLByL/Nw+X6PrZF2Rn7/5PF0gcdYi
P7fP2+i6XQ3k528+X6f9Ygvyc/v8ja7fC5Cfv/m8XSDpqiM/t8/j6Pp4IeTn
m9DPB+r78+de+HP0c11/8A7y8zefxwukYHLk5/Z5HV33nzgQ/tzO//X65NsO
f45+rus2Ob6CP7c8IJBpqZGf2+d5dF28XwP4c8sH9H1Jh/zcPt+j663nh8Of
W16g81z0Bvhz9HNdXxj2HP7c8gO9n0mQn9vnf3T947Q58OeWJ2j/2XwB/hz9
XNfRP5+HP0f7GKH7/6Ed4M/Rz3UtB5LCn1veoPX52z3w5+jnum6Tpyb8ueUP
2m9TJIM/Rz/Xdat6aeDPLY/QrxcrD/w5+rmuj18/D39u+YTOM0lbwJ+jn+t6
961D8OeWV+j8MeQ+/Dn6ua4rt1wFf275RSDxb34Ff45+Pl7n9eup4c8tzwgk
554Y8Ofo5xP0eas0E/4cl0/XA1MjP7fPJ03U+tNsAPy55R2BLOuWD/4c/XyS
9sfPOsOfW/4RSKePCsOfo59P1uubBvn5m88rBnKsz0D4c/TzKVqfDvSGP7d8
JJAdf1yAP0c//ymQJWMLwp9bXqL1s/tc+HP086l6vXKdhj+3/ETf7/up4M/R
z6cFcilPUfhzy1O0XySLgj9HP58eyOwrP8Gf27+PG8jk38bAn6Ofz9D3bd0N
+HPLWwKJd2s4/Dn6+Uy9P01TwJ9b/qLzx6M18Ofo57MCeTSgEfy55TG6H18w
A/4c/Xy21rcnq+HPLZ8JZNGIyfDn6OdzdL4bcQ/+3PIa3e93SgF/jn4+N5CK
UyPw55bf6Pw97SL8Odr5vED2br8Nf255jvbX74fDn6Ndztf9Vu8T8Of29wtr
vVs9Df4c/XyB9vMM/eDPLe8JZHODu/DnKPcLAymWLyn8ueU/ur9fdRf+HP18
USBXVteBP7c8SPdvyZGf2+e5dF3tl1nw55YP6X6mEPJz+3yXrs9WGQx/bnlR
IJ8uuwx/jn6u6/SDPoE/t/xI58/vl8Gf43HW9cVlX8GfW54UyIwaGeHP8bjo
unG5j+DP7e9PCmTskLLw5+jnul5RbgD8ueVNej1ujoI/x6+r69WVe8GfW/4U
yPPtF+HP0c91/b8qO+DPLY8KZNCopfDn6Oe6jk6O/PzN50f1eSicDf4c/VzX
l74R+HPLq/T6pWsBf45+ruu4t2fCn1t+pfPJbx3hz9HPdT1l5E34c8uzAon9
chj8Ofq5rhOe+Q7+3D5/qvvf7lngz9HPdb1q1Wn4c8u7tJ9c+xD+HP1c111e
VoU/t/xL39eBr8a+9ufo57peuHgg/LnlYfr8Fl0Hf45+rus6S5/Dn1s+pvOd
LwZ/jn7+et30Bfy55WX6+1+pBn+Ofq7r9zccgz+3/Ezfl/nb4c/Rz3Vd6tk1
+HPL07T/zPrpP3++Wfe3qU/An1u+pvuPWhnhz9HPtwRy7tB4+HPL2/R+NvoH
/hz9fGsg+WQS/Lnlb4HUvNcE/hz9fJu+D1kvwp9bHqf97GBB+HP08+263z2W
Ff7c8jmdH11K+HP08x1avwf/A39ueZ3Wn+kd4c/Rz3cGMnH+bvhzy+8CydH5
KPw5+vku7Xc108CfW54XyJijm+HP0c93a73bMBb+3PI9/X6XY8Ofo5/v0f4e
IzP8ueV9gbihq+HP0c9/D+TLsWnhzy3/0/ljUj34c/TzvTovfPEx/Lnlgfq+
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
/Lnl56H8WH4c/Lnl56G8nXw9/Lnl56Ekbf0d/Lnl5zpP1ioGf275uc6LvfPD
n1t+HsrDNRfgzy0/13pbuTj8ueXnoe7/N8OfW36u/SC6Gvy55eehxJv2A/y5
5efaf4cugT+3/DyUP8f0hT+3/DyUDDNywJ9bfh7KqhKz4M8tPw+lXdOp8OeW
n4dS5MMp8OeWn4cSc+wR+HPLz/Xnq/4R/Lnl5/o+fPsp/Lnl5zp/J+oJf275
ub4PxebAn1t+rt9vQA34c8vP9fmMWg5/bvm59ovp/eDPLT/X6z8/Nfy55eeh
VJtcCf7c8nPdr1TtDn9u+bnWs4oj4c8tP9f9SrfL8OeWn2v/uFAF/tzyc53v
vkkPf275uf75DMvgzy0/1/kySz/4c8vPdR4t1Rf+3PLzUD76vQb8ueXnoXRM
Vxr+3PJzrUfnysKfW34eyvYSl+DPLT/X/VuhXPDnlp/r/bq+Ef7c8nN9vloU
gT+3/DyUTMX7w59bfq7zq0sAf275ue6nYmaFP7f8PJRi3Q7Dn1t+Hkrh43/B
n1t+rvV66LOo1/7c8nN9n8fUgj+3/DyUTb9u+M+f99L9ScaTY+N/OX+j5ec6
r/3WGP7c8vNQjoxKDn9u+bnuB9Pav39u+Xko35eZA39u+XkoLRKtgz+3/Fz3
Fzvx97fb5+F0Pa4n/v72N95Nf/4x8eDPLT/X90O3jq/9ueXn2i9i4u9vt8/D
6TpTparw55afaz9rXA/+3PJznacKFIQ/t/w8lLnbzZ9bfq716Yz5c8vP9esd
MH9u+XkoeYqZP7f8XPej25Cf2+fhdD1hLvLzN54ulJEVzZ9bfh5KokXIz9/4
Op1P85s/t/w8lEr3kJ+/8Xb6/FxGfm6fh9O1H4D8/I2/0/nl5TX4c8vPQxnU
G/n5G48XSumJyM/t83C6HtsF+bl9Hm5EKLmrIj+3z8Pp+td+yM/feD3d776H
/Nw+D6frGUdqwJ9bfq7Px8Kk8OeWn+v8eDU1/Lnl5zof9skNf275uV6PesjP
3/g+nW+6Noc/t/xc94sVkZ+/8X46z5/9C/7c8nPdPyRGfv7G/+n7Owj5uX0e
brz2517Iz994wFBK1UN+bp+Hm6D979QM+HPLz7XezHgGf275ue53rvWHP7f8
XK/H33nhzy0/D6X7vk7w55afa32bVQj+3PJz/f0H3IE/t/xc++uNAfDnlp+H
MiUX8vM3vlDnofzIz+3zcD/p+3urAPy55eehrNw/B/7c8nPtL91OwZ9bfq7P
TwHk5/Z5uGk6/7YvAn9u+bnW92pr4M8tPw+lfzrk5/Z5OF0nuzwa/tzyc91v
Xr0Of275uc6HSZCf2+fhZuo83D85/Lnl59qf3kV+bp+HmxVK258awp9bfq7P
75rp8OeWn4dyOwby8ze+MZQU4ybBn1t+rv19xF34c8vP9X36Pjn8ueXn2s9G
Z4Q/t/xcr++PF+DP0c/naX349Rb8ueXnej1qDYM/t/w8lEaNjsOfW34eytDR
U+HPLT/X6/ugD/y55eehlPnoDvy55ed6/WIkgT+3/DyUPt3vwJ9bfq7PX5cv
4M8tPw/l/e//B39u+bk+b/GRn7/xlfq8j94Df275eSiPZg2CP7f8XPe7sZGf
2+fhdJ3sdHX4c8vP9f5u/hX+3PLzUNa/qAd/bvm59u8pGeDPLT/X/cPwXPDn
lp+HcvxAGfhzy8/1/g3qD39u+bk+z1mRn9vn4XT93aAf4M8tPw/l41cX4M8t
P9f3q992+HPLz3W/u/MX+HPLz0OZX24u/Lnl56/niQ/hzy0/13ltQgn4c8vP
Q1lTrjn8ueXnup9Ngfz8jf/U/dzpDvDnlp+HErXiBvy55ef65yPIz+3zcLr+
4llr+HPLz0OpPykz/Lnl59rvD5+CP7f8XNevssKfW34eStEUyM/f+NFQUk55
+To/t8/D6TpqwwD4c8vPQxlReS38ueXnen/W/Qt/bvm59o8cReHPLT8PZUmr
5/Dnlp+HsvVmVfhzy8+1/24+Cn9u+bnu9xdsgz+3/Fzn96dX4c8tP9fnadqU
//z5Zu3HyY7Dn1t+rvNotQzw55afh9Jl5zj4c8vPdb787Cn8ueXn+v7kngh/
bvm5/jznGsOfW36u/fq9C/Dnlp+H8tXaAvDnlp/r/VifBf7c8vNQ/oiXAv7c
8vNQKrR+Cn9u+Xko8Xt3gD+3/Fzn94G74M8tP9f5+rMj8OeWn2u/yZUa/tzy
c93fLdkEf275uc5b48bAn1t+rvUlKhb8ueXnodw8mgn+3PLzUHrUWwV/bvm5
3p8maeDPLT8P5VDzuvDnlp/rfsnngT+3/Fz34y1fwJ9bfh5K4ke74M8tP9d5
OVMF+HPLz3UeuRoNf275eSjNW82CP7f8XPffLyvBn1t+rvVlS3n4c8vPQxnY
YyX8ueXnOt81bgR/bvl5KGf37IE/t/w8lPFPMsKfW34eyrwTpeHPLT/Xerbh
APy55ed6P9078OeWn4cyuNZj+HPLz3W+KVEW/tzyc+2n7zSDP7f8PJQVlzvB
n1t+rvVrwWfw55af635yxEj4c8vPdV690hH+3PJzvf6L4sOfW34eSupKCeDP
LT/X/XDhx/Dnlp+HUnLhi9f5ufVzXRdInwr+3PJzff9S3Yc/t/w8lDGbnsKf
W36u9a99Hfhzy8/1eWnz4nV+/sYP6zzY4kf4c8vPQ7mVvhP8ueXnoZz49xz8
ueXner0Wr4A/t/xc9ysL5sCfW36u89nejPDnlp+HsufK5/Dnlp/r9Sgn8OeW
n4dSpcJE+HPLz3W/dO4s/Lnl56E8SFUD/tzyc613C2LCn1t+Hsreb9fBn1t+
Hkr0pZTw55af6/O25Tv4c8vPQ/mp9i34c8vPtZ5GusKfW34eyrTsB+DPLT8P
ZeaCb+DPLT/X36fcWPhzy8/1+q9uCH9u+XkoaTIshj837xxK+k4Z4c8tPw/l
y3ezwZ9bfq777ztJ4M8tP9f6UuAM/Lnl56Gc+6kR/Lnl5/o8r60Af275uf73
Xm/Bn1t+rv1t1AH4c8vPdb6dsRb+3PLzUO4cnAV/bvm57i8T5YE/t/xc55cW
F+HPLT/X/WLzF6/zc+vnd0Lp1fAn+HPLz0M5uG8B/Lnl56FcG30W/tzyc32e
62yFP7f8XPvn0ZXw55af6/sV7zL8ueXn2s+nVoY/t/w8lOHpN8CfW36u83fe
M/Dnlp+HsvZlWvhzy8+1fxfdDn9u+bnezzH34c8tP9f7uW8k/Lnl56HciNcE
/tzyc10/e/46P3/jubW+pdsFf275ub4vf7x4nZ+/8d1ar48sgz+3/Fz72aNd
8OeWn+t+eOU/8OeWn4dyucBx+HPLz3W+6bAB/tzyc33+G96EP7f8XPtTom/g
zy0/13p9MB38ueXnuh+vuxb+3PLzUOJcOgx/bvm5Xr+cO+DPLT8P5fOoffDn
lp/rPLLjCfy55eehDGmfGf7c8vNQzh9MDX9u+bn2l2tfwp9bfh7K0uM14c8t
P9d5c18J+HPLz7Xfhbnhzy0/13nz8yTkz50ECauRP3eysMo35M+d/Bb/Evlz
J99MqkT+3MngjqvJnzv5sFQq8udOcu3MQf7cSdcLY8mfO4nbez35cyd/jbxJ
/txJ8tuFyZ87WVtxOvlzJ5mznid/7mTJ2gnkz53c31mE/LmTI2OSkz93UndX
UfLnTnJXWET+3MnH6d8nf64/X5ny5M+djJ3Un/y5k7TTM5E/d1Ktfiny507K
FNhL/txJmt/6kj938mPNWOTPncRquJL8uZMDv54if+7k+y4/kD93kumdEeTP
nZydton8uV6/VD+RP3dydWNv8udOuseZQf7cyYsST8mfO4lq+BX5cyeVlrYn
f+5kW89fyZ87WXWhDvlzJ1/WHUD+3EnjEenJnztZf+8I+XMn9VvkIn/u5PdY
A8mfO5n804sO//lzJzc79yd/7mTrnXPkz52cjDeR/LmTnZkSkj93kmVEE/Ln
TualHkP+3MmN1XXJnzvplrYS+XN9HgqvIn+u9+/BVvLnTjYM/or8uZPZFYqR
P3eSN8Yl8udOEo6fSP7cScdhbcmfO/lgcFny5056n4oif+6k0V/5yZ87uXvv
NvlzJy0yHiF/7qRm81nkz51kPXSO/LmTW8/2kT930nBUJ/Lnev82LiB/rt9/
5kPy504Sr11I/lyfjy/Pkz93UjH5t+TPnaROFw1/bvm5Pn9RE8ifa334ZR75
cydHR10gf+5kS9Ez5M/1fct0mfy5k/ib4pM/1/p0KiX5cyfDHg0nf+6k1Nzl
5M+dDLjQk/y5k5h155M/13p4ZBL5cyfjm3cnf6714Fp28udO3tWR4j9/7qR5
1pjkz/X6LGxL/lzvT6Yy5M+d5Clzhfy5Xq/k35M/dzKn0mry5/rzDS1E/tzJ
mhkfkj938tbG1uTPnbSMGkf+3EmfspfJnzvZm7Ui+XMnx7s2In/upNXuTuTP
tX7X7Un+3EmFeqnJn2s/ijeC/Ln++XPHyZ+//nqDyJ876VfxFvlzJ7/Mvkb+
3MmIV4nIn2u9HT2G/LnWi82fkj/X61ViB/lzfX4LJCJ/7qR8/Zvkz/XPp9lI
/txJ0QmDyZ87+fPKbfLnev3f/YD8uZPqOZOQP3fSpa8jf+6k2KA25M+1vseY
Q/7cyYREb5M/135YoAP5c+13PzQlf6796etL5M+dvIw5hvy51sP7C8mfO1ne
+QH5c71+XfaQP9f71T0D+XMnrVe1Jn/u5KOYe8ifO9lxYR/5c623/eeQP3cS
e2Nc8udab54XIn/u5Fnl+OTPnUyqvJ/8uZPHrjn5cycduhYhf+5kZMsi5M+1
3nQ/Tf7cybkBicifO0mxvAb5cye96s4jf673J+5A8udO0lV9SP5c55EtX5M/
1/598SL5cyfrnp8mf679PmUp8uc6fxwaTP7cye2ak8ifO3mS7TD5c+0nOeOT
P3dyvs4I8ufaj6M+IH+u17vE2+TPnVyZfZL8uZMcZVeRP9f++yIH+XMnc2MU
Jn+u8+OK0uTPtX8mLU3+3MnGydnInzu5lGwK+XMnp6ZuJH/uZGiGseTPnVQ+
cY38uZOBKWqQP9d6tCcv+XPt9zmiyJ/rPPvVfvLn+vPeD8mfaz+ZnJn8uZN6
UQnJnzspcW8t+XO9PiuPkT/X+frucvLnTla2a0z+XPvFzJnkz/V63PyT/LkT
Vzc3+XOt764h+XOdN9OeIH/uJE71OeTP9f737En+XOvxpDXkz53UrlyG/LnO
861/IX/uZOnQ9OTPneRrUIn8uZNEZQeSP3fy6ZrfyJ87+W5vcfLnTtJP8vDn
lp9rv1l7lfy5k3DDGPLnTiYOX0v+XOvD7Vbkz53UOVOE/LnWowT5yJ87WVA+
mvy5zmfni5I/d7IvxSby59pfe1Ylf+4k5+Xu5M+1n5xZRP5c68fdXuTPnUTi
ZCN/rv1i6XTy5zqfn5sMf25/v6mTPYsnkj/XfuoOkT93En09B/lzfX8TVSd/
7qT4uv+RP3fS9vFM8uc6P1f8hPy5zqsDfiV/rv2pcx/y507yD3mP/Ller4EV
yJ/rvFK2G/lznWcr/0j+XOvhwIvkz3V/8E8l8udOvvolNflz3V90XkL+3MmK
ib3In+vzvfsH8ud6P5tVJ3+uz+u+EuTP9c/PLUX+XPef6aPJn+u8mD07+XMn
r+6tI3+u+5FZ+cifO0k59wfy507eWRmH/LnW302e/LmTL5ruI3+uz3vMa+TP
9edLfD/qP3+u+5FKZcif6/3vOZn8+ev91adBzP/nz3W/9n5f8udOCqb15M/1
zw9IHO8/f6715YufyZ87efrtRvLnWg//bkT+3Mm0vvvInzt51DIB+XOtXz9v
JX+uf77kTPLn2m/bVyN/7mRUp6/Inzv5I28h8udO9v+8n/y51tPFo8mfOzk8
aDz5cyczLgwif67zY40d5M+d9MhQn/y5zgvd2J/r/vcg+3MnDz5hf+5k2Uv2
507evsH+3In8wP7cSZPb18if6/PdlP25Xr827M+d+LLsz51MTcz+3MnzwuzP
nWTfspv8uT7/7WqQP3eSrHhS8ue6H2ibmvy5zlcxcpM/1+9/6Bz5c/15LzYj
f671bd5B8ud6fXL+Rf7cyejlK8mfa/35gP25zu9p2J/rfuneqxf/+XPtJ81m
kD/X/WqWZ+TPnTz8pj/5c30eO+Qlf+7keulO5M+1vqUoRP5c+/2D2+TPnWz7
ZAD5c91fjepF/lzr7+ho8udONpUsQP5c948Z55A/d9Jz50ny506G93iP/Ln2
0xWFyZ/r/z94Nflznb8/nUL+XP97itHkz7XeJL1O/lzf//zDyJ87KTk3Gflz
7QdZV5M/13ltWQPy507O7J5G/lz7Z4JV5M+ddJ48kfy59u8Rd8if6/6gVTLy
504yDMpA/tzJrZ7R8OeWn+u8M+Um+XN9P4sOJX/uZHrJY+TPnfRv/RP5cyez
dvcmf67XP8Zt8udOdu9NTP5c+32p2+TPnUwpVJv8uda7A93Inzv5velM8udO
/r65m/y5k3j/DCR/rvPFF5fIn+t89WF18uf6+yRGfm7//oiur1esR/5c348r
6cmfO7l3NCf5c+1HycuQP9f39/d+5M+djP96JPlzfX939CR/rvNroQvkz53c
XbeN/Ln+vM+XkD/X/VjXOeTPneyanJX8uc5bO4qTP3eSsV0z8uda34vNIH+u
9zdGB/LnTo6duk7+3EnLkkPJn+v9TdOa/LnOE6s+IH+u9fnWSfLnev1TZSV/
rv06axXy507+98sL8uf6+xzoT/7cSdkvo8ifaz/e/Yz8ufbzgkXInzv5tsO/
5M913v6rCvlzna+2HSF/rtd7wVby507a/32F/Lm+v1Mmkz/X/UnCY+TPdb9U
Lj35c33/148lf671s8Lf5M+djHATyJ9rvd3fiPy59qtY0eTPnfw7Jz/5cyfZ
5mYmf67z6L1k5M/19/v0b/LnWi+btCd/rv20xU7y507W5zlM/lyv/zupyJ87
2TpgI/lzJ3NajSZ/rvPxiLfInzupOf998udav3KsJH/uJNbHqcmf6/uQ90vy
505O3P2I/LnOp3mfkz930mzdTvLnTlrdLEf+XPvpovPkz3X+zjGT/LmTRRsq
kj/X/tqzHPlznQ8KrSB/7mRx+obkz50c7L2b/LmTnxdnIH/u5OKQUuTP9f1q
u5/8uZM7R+KRP9fnK84j8uc6790uTf7cyZKVTcifO0n9Y0fy507OVa9J/ly/
f74R5M91vhzcgfy51v+q8cif6/t+Mz75c92/nn5I/lznm3LPyZ9rfVydkvy5
k/jL75E/1/1A7b/Jn2s9fOcL8uc6b8Z+Tv5c6/mzYeTP9X38pQP5c70+w/4k
f+7k+yK/kT938lO+2eTPtT7WzkD+XPejbT8jf+7k5oHi5M/1+h4cT/7cSaGm
Z8if6/P10yfkz7W+ZItB/lz/++0o8udO0jRNQf5c+1OJ1uTPnbx3/Ab5cyed
pnQmf67P9/x95M+dpHJfkz938tfG0eTPnZzK2YD8uf4+oxfBn1t+rvX7Znry
5/rz98lK/lznwQbvkj93UmvBafLnup9O2JD8ud7fLOXJn2s/vBOD/LnW+xf7
yJ/rz/tOFPlzJ+MKzSR/7uRyx4/In2v/OBBN/tzJmH3/kj93cnzHZPLnur/M
PZ/8udbHJ3/An9vfV+4kwfrN5M91v5d3BflzfZ+/vkj+XOf1FxXJn+v8320d
+XN93kefJn+uz2fdNOTPnVyasJX8uT4fd++RP9fr/cEI8udaDxs3In+u/arm
v+TPnfRrt4P8uc6LHz0nf+7kZeZfyZ87yVdxJ/lzJ13iPyV/rvu5oUfJnzu5
sWsd+XOdV5ZfJ3+u+9X6LcifO9kepCV/rvPs4jXkz3V/mecQ+XOdF3psI3/u
5GjcveTPdf5M/pj8uf48mzORP3fyW/pU5M/1/cxbh/y5k15hDfLnTiakKk7+
XJ/nVrnIn+v7Pz0x+XMvGXJXJX/upcD4FuTPvZypcYH8uZdcFyuQP/fyYMNK
8udeigxJSf7cy81E2cmfe7mcZQz5cy+Zd68lf+5lz8nr5M+9LMxTiPy5l+Qj
p5I/91KuzZ/kz71MiDGe/LmXRQkLkz/30uB0UvLnXjYlLEL+3Mv3wxeQP/dS
q5Ejf+7l78FlyZ97GXCuL/lzL/9e8uTPvbjZQv7cy7vd95A/93Lh797kz/X7
TYxJ/tzLoTm/kT/3MvfxCfLnXj7f0IP8uZf01YeTP/dy49IG8udeLtabTP7c
S47Yvcife7lWaRr5cy+j+j8hf+6l27y65M+9FH38PflzL7e2/0L+3EuaLF+Q
P/fyfGY/8udeKpxIS/5cn5f8h8mfe/njlxzkz/X+Vu5P/tzLhsv/kj/30mJz
X/LnXqbl/5P8uZf3aownf+6lVZt3yJ97KXy6EflzL1majCJ/7uX8W1+SP/dy
vVkF8udeeg1YQf7cS9viW8ife1l2oi75cy/h+CLkz71ItQvkz738fHk8+XMv
S858R/7cy7NTpcmfe3mSZQ35cy9dS+Yjf67fv+Qt8udeTrQ9RP7cS7uoGeTP
vbzyf5I/99K9+l7y515+udqB/LmXgynmkz/XevD0PvlzLyuSLiB/7iX7b3+S
P/cyutXX5M/1fnQ8R/7cy5oU48mfe3kYfy75cy8T754nf+6lzeTT5M+9rOx7
kfy5Pk8Z45E/9/KiYAry514S1BpG/lzrRdxl5M+9xCnbg/y5l4Gb5pI/97K+
wETy517y7+9G/lzrSbVs5M+9nB5cnPy5lypjXjV57c/Rz3WdOkUb8udePh1V
ivy5l77LLpE/95KvTxvy514+WbuS/LmXd54XIH+u9SZZVvLnXmrnbkX+3EuM
nGPJn3upt+4i+XMvt2eUJ3/upfSDBuTPvWQr1ZH8ud7fE93Jn3v57dR75M/1
/RkwnPy5l7FfHSN/rs97hYHkz7103nuD/Ln+fpmvkj/Xn7dfQvLnXg6kHk3+
XN+XCp+QP9f3Y/c28udeNm5JQP5c//+b18mfe/nf/PXkz730+GAQ+XN9nzvd
In/uZfDM98mfeymzNTH5cy+x04Tkz700j3xH/lz7waRZ5M+9xFoQm/y5ly1H
25E/13qcoQn5cy9RcS+SP/eSbvYo8udaX8YsIH/upVj6++TPvRzPuJv8uZdf
309P/txLwYatyJ972bp4F/lz7Y8j9pI/1+cv72zy51p/vnub/LnOH0sLkj/3
MitGPPLn2v/e2kf+XPvjmabkz72s/rgw+XOtJ5kLkz/38mHhU+TPdf4pl5D8
uf487T8lf+6lfmQu+XMvSfb3J3/u5WqKB+TP9XoPbUH+XK/PLxfIn+v7+/sp
8udeJl8R8udeds4aRP7cy/7ME8mfe7kS8xD5cy95345H/lzr5cc/kj/X+WVc
JvLnXipliEP+XPtzvxPkz70szbyS/LmXEhezkz/X9/VaQfLnXuZMLUX+3Mv7
14X8ud6fjlnJn3v58/5E8uc6j/ZeT/7cS504o8mfexm69Qr5cy/F43xC/lzr
1aY85M/1fcy8mvy5lwV195I/9/LDowj5cy+5Z2Uif+6lxo53yJ97OfxqDflz
Lw1/P0L+3Ms/cZeRP9f7Paoh+XOtz9unkz/X9znZWfLnXrYNzEX+XPtjzfrk
z3X++uQY+XMv9wbPIn+u89SG7uTPvXx5bhX5c31fx5Yif+5l3brF5M+9bD6X
lvy5zkOrK5A/13lxZn/y515Spl1O/txLJE8x8udaj2I78ud6/7NdIX+u70ee
0eTPdT6NF0X+3EvJVi3Jn+v1bVCY/LmXQuM+Jn/updGJc+TPdf5vX4T8uc5T
SzaQP9d+lb4K+XPtFx92I3+uv0/2BeTPvZSv2JP8uZcPvs1C/tzLtxmnkj/3
cq72RPhzy8+1Pnw0nvy5l7jL9pM/93Ksdzby5/p+LqtC/ly/3zddyZ9rvVoy
nfy5zgcJq5E/13pe8xfy516qV+9F/lz3B61SkD/3Et2hHPlzL3mKdSF/rvuV
asPIn3vZNTaa/Lnuz5JWJH+u9f9hCvLnXs4eWUj+3Euq+D3In3uJX607+XMv
OWNWIX+u82ePouTPdf5uVYL8ufbbp2fJn+vPkzEr+XPdv/69hvy5l5N/5iJ/
rtc3YTfy5152l49B/txLs54ZyZ/rPFltF/lzfZ5y/En+3MvU0dfIn+vz+VYe
8udemlbtTP7cy77xyRc/rfN//bn2m3GzyZ/rfDorD/lzL/5BSvLnOk+0XE7+
XH/e3VvIn3u5n6UZ+XPtP4MOkj/3MqRMYvLn2j9q7yB/rvN071nkz3W+n1qd
/LnOG0Pqkz/X/pqnMPlzL5dGHyB/rvNtjzHkz3V/VnoC+XMvT/sPJn+u80j0
DvLnOt+Oq0/+3Evmn9mf6/V7zP7cS/uW7M+9JEr8I/lz3Y/dYX+u83AX9ude
PvuD/bnOt+XZn3uZXp79uZfFSdmfe3nrUHvy59pP7ychf+6lWqvd5M+9LErG
/tzLoyNJyJ97ufNPKvLnXlr/8BH5c31fSp8jf677tUrNyJ97iRf7IPlznR96
3yN/rtez1kry514qbq9H/tzL3mWpyJ/r/emD/PyNP9f+/3A6+XMv3//6D/lz
7Z+3+5E/1/nk/sfkz/V6rOtI/lyf7wEFyZ97+bjBbfLn+vuu7k/+XPv7gx/I
n3vZcPc8+XPtpxPzkz/XetZmNvlzL+8mO0n+XO/HtpTkz/V+Pi5E/lz3f9tX
kT/X52PgZPLnWm/LjCJ/rl+/6DXy5zoP1R1K/lz3szuSkj/X719mFflzff53
1Sd/7uXGqankz3V+em8l+XOdX6ZPIH+u/XjEbfLnOu82T0r+XPc3PdKTP/fy
/Lvz5M/1fe5/g/y5l5nhEPLn2s/Co+TPvXSqMIX8uc5X03qRP9f7efgm+XOd
5yYkIn/uZWS8W+TPvXzz7HPy51qvs3cjf677o80zyJ97mVJ6N/lzrT/VB5I/
93Lq54vkz7X+datG/lyvT72l8OeWn+vzNK4u+XMvg3KmJ3/uZVnanOTPtf/W
Lk3+3MuFBP3In+v7NH8E+XPdj8bsSf5c+0n7aPLnOj8+3Er+XOel3EvIn2v/
XDyb/LmXpHuzkD/38t3DYuTPtR9MbUr+3Mv15tPJn2s9+6A9+XOtP8+vkT/X
69lkCPlzfR4LtiJ/7iXT0Uzkz3V+e/sk+XPdz+fKQv5c998lKpM/93J+y3Py
51rPzvcjf+7lyddryJ976XbsH/LnOq+WKkz+XH+e7s/In3uZ9rgy+XOdv3ce
Jn+u9WHhFvLnXt5+cpn8uZdJEyaRP/cy7u2j5M/1+S+ejvy5zivLxpA/9zKj
yBPy57pfTT6e/LnW1/UNyZ/rvHDvHPlz/XlH5CN/rvPJ8A/In+t8ejwp+XMv
I/I9IX+u80XZduTPdX9Vfgf5c91PJTlE/lzr09WU5M+91Gy4gfy5l7DMKPLn
ej+axiR/7mV5N0/+XPdfr34jf67z7FupyJ/rfBCzDvlzLxnX5iJ/rvP0y2fk
z3U+6bOD/Lnur5aWJX/upUPrc+TPtR7dm07+3Ev2HhXIn3v5qmhZ8uc6Tz1a
Tv7cS9cT9cmf6/6q0C7y517WNk5P/tzLeyVKkj/30s/tI3+u70PfuOTPvcRe
8YD8uZe7E0uRP/dyqGFj8uf6vBXoQP7cS5e/PyV/rv3qzHDy5zrv5GhP/lx/
nntvkz/X/jw0Hvlz3S92eUD+XOfrS8/In3sZWzMF+XOdt6rcJX+u+7O/HpM/
13oyoxb5c/39Jj0jf6772R+Hkj/3ckvakz/X+TT9WfLnWm9/X0b+XOv51pnk
z3X+upSO/LmXds9qkD/X+1e7GPlzfd9rjyN/7iX9zdPkz3V/E1Qnf67P6y8v
c/3nz/X+fbeG/LmXypeTkT/3snNjS/Lner1rXCd/7mVYqk7kz3W+cnvJn3vp
M6U5+XMvCQuMIn+u88Pcr8ifeykQbyH5c30f66cjf67X43Fm8ud6vw4nIn+u
1z/1KfLn+vX/V5/8ufafCWXJn3t5/OWrxP/5cy8Fv9lL/lz7S8fV5M91/zl7
OvlzLy3O5SR/7iVL/vPkz73cy/OM/LkXl20S+XN9f8fNJX+u80Od0/Dnlp/r
/j7jJvLnOr+NX07+XPvHnmjy516616tA/lz3B6ejyJ/rf793kvy59vPVqcif
exn8cDP5c61/Fe+SP9f5q9dw8udaL9Y1IH/upe3P/5A/1+d7zzby5/r+DnxG
/lznyx6/kD9/PX9thz+3f29c57mvnpA/1+fj/GHy515Op11L/tzL8djXyJ9r
/fu1Gflznce/T03+XOej56vIn3up1+cA+XP9//dtIX+u+41ae8ife9nf6CH5
c+2Hid8nf67z/jcpyZ976d2rNvlzL2Vbf0L+XOfxxkXJn3vJujoH+XP9/jcT
kj9/XwrVqoKT9/9//X8Aae0r7g==
        "]],
       FontFamily->"Arial"]},
     Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"t\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{
        StyleBox["\"m\"", ShowStringCharacters -> False]}, "RowDefault"], 
      HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TemplateBox[{
         StyleBox["\"m\"", ShowStringCharacters -> False]}, "RowDefault"], 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"t\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-2.000000002694792, 2.0000000026698954`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9357587743964148`*^9, 3.935758808551353*^9}},
 CellLabel->"Out[223]=",
 CellID->184032437,ExpressionUUID->"84dc912c-a01f-4e47-9d70-57a98eb87625"]
}, Open  ]],

Cell["Now we sample this simulation and add in measurement noise", "Text",
 CellChangeTimes->{{3.9357528267991962`*^9, 3.9357528452118483`*^9}, {
  3.93575849904006*^9, 3.935758508234664*^9}},
 CellID->1631237031,ExpressionUUID->"10dadb94-cb99-40b7-9d82-e47798c2a06e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"shmVariance", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shmSamples", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"times", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", "shmTimeRange"}], ",", " ", "0.01"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"times", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"shmSim", "[", "\"\<mass1.a\>\"", "]"}], "[", "times", 
          "]"}], " ", "+", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Sqrt", "[", "shmVariance", "]"}]}], "]"}], ",", " ", 
           RowBox[{"Length", "[", "times", "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935752863294586*^9, 3.9357528810256653`*^9}, {
  3.935752925149404*^9, 3.935752947466264*^9}, {3.935753066212481*^9, 
  3.935753210888524*^9}, {3.9357583507551394`*^9, 3.935758442464465*^9}, {
  3.9357587244100323`*^9, 3.9357587369283733`*^9}},
 CellLabel->"In[218]:=",
 CellID->2143068938,ExpressionUUID->"1440e196-fca0-4996-bb8d-2a9a691e7917"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SystemModelPlot", "[", 
    RowBox[{"shmSim", ",", 
     RowBox[{"{", "\"\<mass1.a\>\"", "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Gray"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"shmSamples", ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Opacity", "[", "0.8", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9357530236710873`*^9, 3.935753023902721*^9}, {
  3.935753181977996*^9, 3.935753185149611*^9}, {3.935758362455687*^9, 
  3.935758365016404*^9}, {3.935758408762163*^9, 3.935758458849935*^9}},
 CellLabel->"In[220]:=",
 CellID->803891104,ExpressionUUID->"f6366342-0fb1-4b36-8905-f200d3adfd2e"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     TagBox[
      {GrayLevel[0.5], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[2], 
       StyleBox[LineBox[CompressedData["
1:eJxMnWV4VGmzdpsQdLCBwd2CuwS/N24h1jiBYXAGd3cdGBjcgru7a+MWCAkx
JO7u0kkn+fZTVXzn5c+5cjF0unvvrlXJetZ7ao+b5TzRymAwlG1gMKj/++tP
QO+n77s8MZosF5I9B41zxMEXb7S6///rsSg/vNdZn8dGU/bKvx/P3z0Fn1Os
coY+/vX3s3FZ66ydfmQ0Lfvjat/gpfPR+kPAoqcPf/33i1H8WrXTZx4YTUui
bVoVvbwcq17fezvi/q9/vxplNqeFf79rNHUJdNi2f+ZavLLxtGp059fjrce2
oOl1et0ymh72L2HVZNNGlB3n3r/pjV+PvxkrFk9aGXzVaOp0+93Cp8e2YGk7
mzfjL//6fv/CYlzT4NYFo+l+jQ2xTve34+a4iRfcz/76/jtQ7HAP44NTRtPh
V7Wuz52yE3t9ajSbffzX89mFJT1WIO2w0fTDTN8QacMm7+598Nfz24OdhSa0
nrDXaKrawr9e4TV7cbDMChvHnb+e7z5cONVtabFtRtPICZ3VI6JU5P0OOzb/
ev4HsMGwakbYOqPp0EH6gyEdz9UrvOrX6zmEsKj3f6cvMZq+fc40hp5xRbq1
1aCb83+9vsMwHYnz6zLLaKpsPbRUs5tHUHrkhWp7p/56vUfx1vObzaPxRtPw
jvSAuPPmROFro3+9/uPIX3/24+xhRpOd7T/dx4Yfh3/t0hsNTr/ejxN4bbW+
z5gBRlOck3rEE6hg1aLGlp6/3p+TSMx9WGN9F6Np6/TInAvJJ3EpzDjSrt2v
9+sURtidDQ1pZjQ12VRBfwmn8N+CwE99bX69f6dRIf5y02U1jKaPJ3rfTc09
jQXruvyxosKv9/MMTqV0PjiolNE0TX+3KlmfxcwPfl/iCv16f8+iXhXTl5G5
zqbivqdmdy1+DumDa1zbn+Ys7/c5FM0/uvZUrLPponq5Zc5jyJbp41aGOMv7
fx5/F2o5qeE3Z9MA9XAVLmBOcpmzJ9yd5XpcQJWU251iXjubYtTbXe0i3hxB
V6vHznJ9LqJ8c+e30TecTerd+1LnEm4O+C31+DlnuV6XEPSg8I8GR5xNjVz+
e5He8DLG2Yw+tHKXs1y/yzjgfsruzCZn03v90aq0uIKCA+NKHl7uLNfzCg60
eZU9bo6zaerO+OVodxVtI9u2zJ7oLNf3Kr62ffnxr5HOJv3J6S/5GlBhVuxB
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
Js471UTjeeaB8H2zJ0040lTj/cUDc8c4jfltfzON55v+70dcejtxR3ON9xlP
bLUaVX3OPy00nneeeHJn/Yzy3VtqvN94YujYg936PWmp8fzzRNqEfSaHjq00
3nc8seX2vpuN77TSeB56wmVrQy/flq013n88UeqqY/iQy601ut1XemLRmW1n
TzVoo/E+5Ilp5u9+z0620fjXB56Imnq764XqbTXejzwxuEHl/WMOtNV4fnqi
VrH/zgWUbafx5fVE35f1Wzfc1k7jeeoJVFma3bFIe433J09sLP/gVdk17fnl
Wn2Fb8tTQ25kt9d4n/qKS1v/m/vHfFuN5+1XzK04K7hTvK3G+9VXFH7lPqXu
pA4az9+vuHEx0N0toIPG+9ZXrLGdHdBuWEeN5/FXpDmaXUa7d9R4//qKgisP
/9GjbyeN5/NXTCze0D3kaSeN97GvqNOoyrBu7TtrPK+/Ynj504uMVzprvJ99
RYtWVyy16nXReH5/RVYdn5tnDnXReF/7itlJyyYHlemq8Tz/igqVHkW5b+yq
8f72FTvPzy00z9JV4/nuhaZD+257N6ebxvucF9psP+voHtFN43nvhbWb39fa
OAoa73deuDv0vnusOzSe/154v9jmQH5tTeN9zwvF61TdGjhK05gHXtAO5Tbe
u1fTeP/zwjbvlSE13TWN+eCFGR+fVltVtLvG+6AXvmcO6n2ze3eNeeGFUT+a
v7u/tLvG+6EXQpf4/r7rVneN+aE/nl/r/7rGddd4X/RC3aUnrzys10Njnnhh
yff870VH99B4f/TC5qgjGxrs7aExX7wxctWAahU+9dB4n/TGNX+HUl7WPTXm
jTfGV1v4cWyXnhrvl97Ye8r61aN5PTXmjzcWHH05JexiT433TW94z8ht/D24
p8Y80v995dXLD1fqpfH+6Y2tz466N3bopTGfvFHIus3+9Rt6abyPeqPgiqN9
LjzqpTGvvFGippvTgeReGu+n3hh8rlUzpwa9NeaXN35aewz66tJb433VG/nP
Ojaqsau3xjzzxrGxW9q1ettb4/3VB2Gec6J/s/TWmG8+2Pih5eMrLftovM/6
YGs91/oVJvbRmHc+uNy38tFeB/tovN/6oNy6C0c7fOqjMf98cHFa8PFkQ1+N
910fRNsm1pjVtq/GPPSBdRXX3dcn99V4//XBgQP9lt451FfjX0/6wDs8037F
p74a78M+CG7bd3sRQz+NeemDkJLz7xhb99N4XfRBp+MuPf6a0E9jfvoA5dbc
arGvn8b7sg96eVtvfvq2n8Y89UHB6Gsoae6n8f7sC4dWSSOrNu6vMV990eLR
95FRI/trvE/7olnhZs/nbe2vMW998cdA+zJPHvXXeL/2hYfJ8ePL2P4a89cX
9wNTFmyqOkDjfdsXmSeP7ykycIDGPPbF0HfzL/dcOkDj/dsXDUt16tn5wgCN
+eyLtbOmB8b7DtB4H/fF/jGdio4qPFBjXvvCOXdD77VtB2q8Lvii4uCImuPH
DdSY3754uvF8rdz/Bmq8r/vibBEPD4cnAzXmuR8y3lV7OjJmoMY894NhutWc
6hXtNOa5H97OvLVwf087jXnuh/3Dqru8m2WnMc/98D4g5uo1VzuNee6HVRU2
5Nq9tROe++HIjj98j6XYCc/9cGbt2o/nqg8SnvvBPXLJtAn9BgnP/VDwxJR+
3nMHCc/9kLRrdZr58CDhuR8avLhv5flmkPDcD+1nfC48OmmQ8NwPD+v12Xuo
sr3w3A+Lg6f33NLDXnjuh7mVRpxrMs1eeP4NQW6xw1butheef0O74x5xax7Z
C8+/IT9wXV67UHvh+Td82dnf5lBxB+H5N8Qv75B3pZWD8PwbSrduX3vOcAfh
+TcklzE3Dl3pIDz/hicDi90veMZBeP4Ny6OeT/T84CA8/4aOJidP+yQH4fk3
lOo2xv5xcUfh+Te0fDfjZoPqjsLzb1h96NrEqS0cheffYHs1ssOa7o7C829I
MfbJnWl0FJ5/g/flKetbT3QUnn/H1jojjn9c6Cg8/44WAf/V7bTZUXj+HTW7
pQatOOgoPP+O4wP8Lu276Cg8/44ljQoOX//IUXj+HX/tOPegj5uj8Pw77NpP
PeP/01Hjn3e+41RPl6R+8Y7aDuL5d/R9Xmj25lxHjX/++Y41hV2yXUs6Cc+/
40n9txPXVXcSnn9Hq+G1/+nWzEl4/h0Dp9zr/KmLk/D8OyxV+g9pYeckPP+O
qP3Frk4Y5SQ8/wG7L8dqzPjbSXj+A8FhNqv7LXESnv/AtC3NL2dschKe/9Dv
r0fLF+1zEp7/wIjdfd0+nHYSnv/AuycvFiTddBKe/0Dnd7sGR5mchOc/EFJk
T6+bn52E5z8Qer5yHfufTsLzH7hQPOH9o2gn4fkPmKsYK+dkOAnPf+DbNauE
36ydhef64wc1t0ko4yw8/4H5o9YeP1HdWXj+A4ue1epi09hZeP4DAfFn/Za1
dxae/8TtP5sMPdnDWXj+EwUWd9t70N5ZeP4TNt4xC/8a6Sw8/4nU43d+mic6
C89/Yk3g0fPj5jgLz3/i6+PaT1yXOwvPf6Ltt7a5pzc5C89/YvieAXYrdzkL
z3/CdpjT9gZHnIXnP3H3561zx885C89/ImfxiBXRN5yF5z+x9c+zaQUeOwvP
f6JW1LLU6NfOwvOf6O3ZYewJd2fh+U8c3PSgdsNvzsLznwhxGV5zZYiz8Nwf
Xz3itVOxzsJzf6xz/zJzf5qz8NwfF8N9do7MdRae+2PbxsG74woZhef633ev
PnpQKaPw3B+lctd9W17BKDz3x8Jmo1KX1jAKz/W/L5m+t6+NUXjuj8wvda+E
NDMKz/2xyr9jfbt2RuG5Pwqai8Wu62IUnvtj14rI2H96GoXn/uj6z9nyYwYY
hef+qNrs8FCDk1F47o+sQ0ePzB5mFJ4H4J1Toe9XRxuF5wF42O9CzsPxRuF5
AKwrh6fsmWoUngdglM3e611mGYXnAaj9pqLNzflG4XkAuk8c1Dt9iVF4HoB7
lw8YCq8yCs8D8OF0wICwdUbtEfE8AGk+Gyvu2GzU+OfdACyZuWxksW1GrTTd
0AG4OqxRUcedRuF5ACJGry4/Ya9ReB6Acv1SF/U+aBSeB6BS2qL6aYeNwvMA
PJq96Y/Zx43C8wA4VajR5cEpo/A8ECWOPtrtftYoPA9Eru34crcuGIXngTAd
c701/rJReB6I9y1mzQi+ahSeB2Je6rROTW8YheeBOHLv1B+9bhmF54H4o8rl
jIZ3jMLzQGzef/TH97tG4Xkguh6o9GzEfaPwPBCTl3U+cuaBUXgeiKYnLs99
+tAoPA+E3by9XU4/MgrPA7F2+qmsoY+NwvNALKtR9IyP/jXzPBA72i9Rflx4
HoQya1p+6KJ/zZ/3IAyIje2u/p75HoQW6+PPqX/Pn/8g3FiWY1GPz7wPwuNa
Y3uo78/zIAgB/tFL1PNj/gfhZNvYM+r583wIwsZ7nd6r18f7QBAuWrWJVK+f
50UQKt26WbCR/v7wfhCELy7V6qr3j+dHEMavGjpAvb+8LwRh4JKPyp/LPAlC
1JKpyp/L/hAEm7knlT+X+RIEz4LTlT+XfSIIB2ZB+XOZN0G4tKay8ueyXwSh
5oqlyp/L/AlCZKFJyp/LvhGEdcXGK38u8ygII84uU/5c9o8gmH7vqvy5zKcg
XF5+T/lz2UeCUCFzhfLnMq+CYO18Vvlz2U+C0N9A/lzmVxCi0w3Kn8u+EoQO
G2OVP5d5pr8e7bzy57K/BMHy0U/5c5lv+tem48qfyz4TjNtrzyh/LvMuGHYV
Sil/LvtNMOqb1yp/LvMvGG/Smyl/LvtOMGZlPlD+XOZhMP7+6az8uew/wbDu
e0b5c5mPwWg3I0D5c9mHgvF75CXlz2VeBuPrss7Kn8t+FIwb8Z0O/t/8DIb9
K1/lz2VfCkaBCs+UP5d5GoyrDtWVP5f9KRiLco4ofy7zNRglN05T/lz2qWA8
t2qh/LnM22AMSiit/LnsV8EYkXRL+XOZv/rzce2m/LnsW8HQdwvlz2UeB+N+
/+LKn8v+FYxSDwspfy7zORg7bFyUP5d9LBjeX04qfy7zOhgj7WKVP5f9LBjx
7V4qfy7zOxhPo9sofy77WjAcOrxQ/lzmeTAKV5mp/Lnsb8E49NdN5c9lvoeg
zYz1yp/LPhcCZx+j8ucy70OwsFZx5c9lvwvB/knFlT+X+a//90XIn8u+F4Iw
h6/KnwsPQpBc/5ny57L/haDk9U7KnwsfQnT+FVT+XPbBENS/6Kj8ufAiBG6b
Pil/LvthCBZ1Par8ufAjBOXiXJQ/l30xBIPdKyt/rtH4XxiCL/4jlT+X3wfp
z29yVeXP5efFEKy481H5c/n9UAgOnXRU/lx+fgzBlU4FlT+X3xeFwNP5uvLn
8vNkCNzrHFD+XPbNEGT+nKH8ufAoBL69hil/LvtnCN70ilP+XPgUgh5r2yt/
LvtoCGyTryt/LrwKQYlJfZU/l/00BK42Q5U/F36FwGrpBeXPZV/VX7/tCuXP
hWchsDEuV/5c9tdQmKeZlD8XvoVi9xAP5c9lnw1Fs1OnlT8X3oViW8sjyp/L
fhuK/AtblD8X/oXqPx+TP5d9NxRLDmnKnwsPQ3GuXRHlz2X/DcXXfieVPxc+
hiImLUT5c9mHQxHdbKby58LLUFx69Ej5c9mPQ7G5Q3nlz4WfoQgtuVf5c9mX
Q7FjZn3lz4WnobBxWKX8uezPoejn0kj5c+FrKO4mLFT+XPbpUCzM3aj8ufA2
FO4leyp/Lvt1KPrWHqP8ufA3FHtPGJU/l31bf34DJil/LjwORebvx5Q/l/07
FMdLuil/LnwORYlhq5Q/l308FBvjSyp/LrwORel925U/l/08FE4P/JQ/F36H
4inWKX8u+3oojk4LVf5ceB4Guxu/KX8uPA/D/G0flD8Xnodh2YgLyp8Lz8Ng
qR6r/LnwPAxjxm9V/lx4Hobjhq7KnwvPw9Amaory58LzMJRNbar8ufA8DGkX
Rip/LjwPw9MSC5U/F56HocLw28qfC8/DoL3PVv5ceB6GSmP9lT8Xnodh0rEj
yp8Lz/XnN7CR8ufC8zBMtKms/LnwPAy1L19T/lx4HoYPH3yVPxeeh8HjUF3l
z4XnYfj6x0flz4Xn+tevLyp/LjwPQ/CaHsqfC8/DULT8beXPhedh2JfyXPlz
4XkYQkI+KX8uPA+D/TVf5c+F52H47LZM+XPheRg+Wqcofy48D8OCaiWUPxee
h2H30rbKnwvPw3Dl43Tlz4XnYQg6baf8ufA8HJH1DMqfC8/1r3f3Uf5ceB6O
IwXmKH8uPA9HmZCxyp8Lz8MRcH6j8ufC83D8Nj5I+XPheTgmO2Qpfy48D8em
BaHKnwvPw2HsrCl/LjwPRw9zW+XPhefhqL5tpvLnwvNwzI+tofy58DwcT6/l
KH8uPA9HzUtdlD8XnofDb84h5c+F5+FYEGmn/LnwPBwX3hdT/lx4Ho64jgWV
Pxeeh+N97wjlz4Xn4Sg485vy58LzcMxuukz5c+F5OA4uDlL+XHgejl4Ddyt/
LjwPx9laO5U/F56HY8eS/sqfC8/D4TLqsPLnwvNwvPrsp/y58DwcjR4tVP5c
eB6O9TW+KX8uPA/Hj3d5xz0jugnPw3H8ZKDy58LzCLSZ2UP5c+F5BJbff6D8
ufA8AvveHlf+XHgeAW1TJeXPhecR2DrPWvlz4XkEhq4povy58DwC+dZrlD8X
nkegxf5/lD8XnkfgbGai8ufC8wg4JrRT/lx4HoF/Gm9T/lx4HoGVtbyUPxee
RyAqbJfy58LzCJQpkqX8ufx8GIFKU72VP5ffB0XgeIUjyp8Lz/V/X3mM8ufC
8wjk2D9X/lx4HoGC7Qsrfy48j8CQl/k1Q8q2E55HYHbz35U/F55HYNqzxsqf
C88jEHfojfLnwvMIePwbrvy58DwC4z1+U/5ceB6B/v5dlT8XnkegZr1c5c+F
5xHw9++l/LnwPAIJHzYqfy48j4BN5jnlz4XnEcjOyFb+XHgeiaUrdil/LjyP
RM7UGcqfC88j4djlmvLnwvNI3NjYXflz4Xkk7k36pPy58DwSzS23lT8XnkfC
NqCE8ufC80is2r5X+XPheSRex9xW/lx4HolHh2cpfy48j0TrzeOUPxeeRyLM
9rHy58LzSOzr1175c+F5JIp9LaX8ufA8EiO9Cih/LjyPxLbGG5Q/F55HYmKt
GOXPheeRSL9kr/y58DwSrqF7lT8XnkfCY7+L8ufC80gUqBin/LnwXH+8xKbK
nwvPIzHl2kHlz4XnkSjXf7zy58LzSLi18lX+XHgeibI1nZQ/F55HYky+nfLn
wnP99XRxU/4c/HIjUaL5EuXPwTyPxOVq05Q/B/M8EoOTvZU/B/M8CgO0GaMq
ulu6Mc+jYO7QW/nzZ8zzKPybSv78GfM8Clu7kz9/xjyPwikr8ufPmOdRONuN
/Lmct4mCX8dFyp/Leaso9DoVrPy5nLeLwuZNh5U/l/MZUVgYn6L8uZzPicK0
AuTP5XxWFLY1b678uZzPi8KKkAHKn8t5jihc3jJE+XM5zxMFKy9r5c/lPFcU
oqMeKX8u5/misO/KfuXP5fxHFDrlPlH+XM7/RKH/32WUP5fzX1GI8/hP+XM5
/6c/nzarlT+X8yJReDn3lPLncl5I/+8ToPy5nBeLwsDKDZQ/l/OCUfhU7LHy
53K+JAp/lc1W/lzOF0XhvOMy5c/lfFkUmndbpfy5nC+MQmC3ZOXP5TxKFF40
m6X8uZxH0r9/pIPy53IeLQqu3heUP5fziNEYMGeE8udyfiUasyPWKX8u55ei
MXbLAeXP5fxaNIZt3qv8uZxfjEY/j73Kn8t5l2gsOtFA+XM57xSNf544KH8u
592i4XL1X+XP5bxjNO7kfFP+XM7HROPQxFvKn8v5qGjMqlZJ+XM5HxeNc5nb
lD+X85HR6HapnvLncp4mGmdyFit/LuepojE+6Z7y53KeLhpNC51U/lzOU0br
++p25c/l/E00ngfMUP5czl9Fw3f9Z+XP5fxdNIpODFD+XM5fRmNM7Ezlz+W8
jv768jKVP5fzWtHIrueq/Lmc14tG/EUb5c/lvKb+/F9WUv5czvdEo/SFk8qf
y/muaKx7ekn5cznfF42EC17Kn8v5zmj8Nmep8udyHigao3Y9UP5czoNFY021
Ocqfy3nAGHx42Vv5czkPGoMt6aeVP5fzQzHYHv1W+XM5PxaDNTfuKn8u5wdj
UPpUfeXP5fxoDNr0r6L8uZw3isGgpxblz+W8WQzWZqxQ/lzOG8ZgYPQT5c/l
vGkMTpclfy7nk2L0fb+Z8udyPi0GW7f7KH8u5xNjYBPTSvlzOZ8agxubTyh/
LueZYpAfnqf8uZxni0GR5MPKn5v4978x8FnfX/lzE/ueGDQOslf+XM4/xSC4
6gLlz+X8WwwqHi+o/Lmcf4xB5v4Xyp/L+dcY/DXBovy5nJeKQU6JVcqfy3m5
GLS+fkT5czkvGYOnya2UP5fzsjHwnHxE+XM5XxWDxMIflT+X83UxcP63pfLn
cr4yBlkR7sqfy/naGHQ61kH5czmPFQNLl3+UP5fzeLGYcnm28udyHjMWrU+0
UP5czuPGYkLWQeXP5fxWLG5UqqT8uZzfi8UAp/PKn8v5zVhUtA1S/lzO78Zi
uyFB+XM57xWLsMCDyp/Leb9YPBrVV/lzOe8Zi45nM5Q/l/O+sdiS0lv5czkf
FgvPd3OVP5fzgbFYNHyU8udyPjQW79+tUv5czgfHos7mgsqfy3myWLQ7eFX5
czlPGIsfAQnKn8t50liUn/RN+XM5TxyLuVebKH9uYp7H4mmSnfLncv4wFiHj
HZQ/l/OnsWi1Oln5czl/HAt/7Zjy53LePBZXxs9T/lzOK8Yi42wH5c/lvKr+
/AtNU/5czivHYmRKB+XPTczzWOzZvl75cznfqD9+SJjy53K+NRYlyp1T/lzO
N8di9U535c/lfHsc/nSsqvy5nIeMQ3aSQflzOQ8bh+HJN5Q/l/PQcXjpW1X5
czkPH4ddLtHKn8v5yTjE7Fyn/LnwPA5XipVT/lx4Hoex5tXKnwvP42Drslj5
c+F5HGqUm6z8ufA8Ds+sVil/LjyPw40W95Q/F57HYYWfm/LnwvM4vNjWS/lz
4Xkc+vSbpvy58DwOv60Ypvy58Fz/+xYxyp8Lz+Mw0/BF+XPheRx+77ZW+XPh
eRwex/dV/lx4Hof7Pu2VPxeex+HpP22VPxeex2HzpEzlz4Xnceh+rIjy58Lz
OCR1NCl/LjyPw4nSjsqfC8/11z9htPLnwvM4BMZPV/5ceB6HVs+uKn8uPI9D
rEeE8ufC8zhcXthb+XPheRz2fp6s/LnwPB6Dew5X/lx4Ho9CeduVPxeex6Pg
6BTlz4Xn8dg7xVf5c+F5PNb2sVL+XHgej1WXzyp/LjzX/95pivLnwvN4pI4e
pfy58Dwet79bK38uPI9HiZqjlD8Xnsdjatc3yp8Lz+NhmFVL+XPheTy0lXeV
Pxeex6Nyy37KnwvP49H8clHlz4Xn8XgWelT5c+F5PNZl1lf+XHgeDxxupvy5
8Dwe3VY+VP5ceB6P/af6KH8uPNf//tNz5c+F5/GI89mp/LnwPB6e5Xcrfy48
j0e5u5WUPxeex6NqxXjlz4Xn8bhu46z8ufA8Hr4PCyh/LjyPx/qYZsqfC8/j
UWziGuXPhefxcHlXU/lz4Xk8/sg4o/y58DwBXSc3Vv5ceJ6AoJVdlT8Xnifg
zx/Ryp8LzxOw6ext5c+F5wmYH3ZE+XPheQJsntdS/lx4noCYn22UPxeeJ2De
/v7KnwvPE/B4hKPy58LzBJwNuKn8ufA8AcOWDlf+XHiufz32jPLnwvMEjI1a
qvy58DwBZg9b5c+F5wl4tfG+8ufC8wT8M2qY8ufC8wRkuscpfy4815//J3fl
z4XnCfgc4q38ufA8AbbrjMqfm9j3JuB712rKn5vCiOcJeJ+1Vvlz4XkCnjQc
qfy58DwBoUXSlD8Xnuvv78c6yp8LzxOwzLeD8ufC8wTsTSmq/LnwPAFPF0Yo
fy48T0DhtWeUPxeeJ2BtfVflz4XnCSiw+4jy58LzRCzob638ufA8EaW188qf
C88TUbBMmPLnwvNEFKm+R/lz4Xkilj2uoPy58DwR9qPslD8Xnidi0cn9yp8L
zxPR45C/8ufC80TYuG1Q/lx4nogp45cqfy48T4SLXUPlz4XniRjqvEr5c+F5
Ivp3SVH+XHieiPJRC+v/Xz+ciLUTNip/LjxPRHix6sqfC88TMXvnQ+XPheeJ
aNNknPLnwvNEfNx1SPlz4XkiLteZqfy58DwRLSP+Vv5ceJ4I24snlT8Xnidi
e4lLyp8Lz/Xv/88R5c+F54lYtaWi8ufC80TsntFJ+XPheSK6776k/LnwPBEO
E/cofy48T8T8MSeVPxeeJ2JsmSLKnwvPEzGt4WLqy5nnSQib20L5c/m8J6Gy
f4zy58L3JOQsiFP+XD7/SVg5I1v5c+F9Ev4t+6fy5zIPknDXPUr5c+F/EtbY
xCh/LvMhCbMvdFT+XPaBJJxMa6X8ucyLJNQ+c0P5c9kPkhBrX1X5c5kfSdg9
Z4jy57IvJGHvtA/Un/M8SYLd9CnUn/P+kIQLE05Qf87zJQkLMv6m/pz3iST8
Oa4b9ec8b5JwYH4l6s95v0hCu9lLqD/n+ZOEhuYJ1J/zvpGEFMtf1J/zPEqC
+eBS6s95/0jCnkJdqD/n+aS/P7PvUn/O+0gSRsQup/6cxtWkJKzrc4b6c95P
kmCd/pb6cxo3M5MQEZNvpz5fvK8kYdGyGOrP2R8moWb7c9Sf8/6ShA/Pfak/
Z5+YhAr3jlF/zvtMEqouOU39Of8+MgmFSpak/pz3myS0TFpD/Tn/fjIJDeKb
Un/O+47+fiTep/6cf1+ZhFVeTtSf8/6jv984Tf05//4yCUUm+VN/zvtQEnoH
XaT+nH/+ScKsBZ2oP+f9KAk3IztSf84/DyXh0VMf6s95X0rC9zJPqT/neZqE
rAHVqD/n/SkJrTMPU3/O8zUJ3db+Tf0571NJmJrfjPpznrf6/Rlbivpz3q+S
kBl/k/pznr9JcD/Ylfpz3reS4N/Ekfpznsf61/2KUX/O+1cS7j+wpv6c53MS
XtmMov6c9zH9fvY4Qf05z+skXBwUQ/0572dJcLN9Qf05z+8ktIprTf0572tJ
GNb5OfXnPM+TcL76DOrPeX9Lgu/EG9Sf83xPRqm566g/530uGW4/nKk/53mf
jD02xag/5/0uGSNmFKP+nOd/Mh6Xakn9Oe97ycgY5kn9OfMgGTebP6X+nPe/
ZCx/0JH6c+ZDMloUIX8u+2Aysm47UH/OvEjGsN1u1J/zfpiMB/2P/E9/noxy
5lHUn/O+mIzS/pWoP2eeJGNA3Ajqz3l/TEbNRVWoP2e+JGPl6w/Un/M+mYyx
txyoP2feJAN2VtSf836pP9+J16g/Z/4kw9JuP/XnvG8mIyVpOvXnzKNknBsx
lPpz3j+TMWVkLPXnzKdkPDvQjvpz3keT8W9R8ufCK/37r+xD/Tnvp8m4iCHU
nzO/kpG2+zz157yvJqOh83Lqz5lnyQiauYz6c95fk3Fw8zPqz5lv+vsx7wv1
57zPJuPU81PUnzPvkpHqcJj6c95vkzH4wz/UnzP/krG57fn/6c+TkRTQjfpz
5mEyyi4vRP0577/JaLrzOPXnzEf99SGY+nPeh5PRbul06s+Zl/r7W+wh9ee8
Hyfj2+Zy1J8zP5PRfexu6s95X9af74u61J8zT5Nx/MwK6s95f06Gx+0G1J8z
X5PxZ/8F1J/zPp0M25EbqD9n3ibj3vTu1J/zfp0Mh7Uu1J8zf/XPi7Uz9ee8
bycj6toE6s+Zx8nYseQI9ee8fyfj70UfqD9nPiej/MsV1J/zPp6Md6NKUH/O
vE7GgcLbqD/n/TwZ1Zr6Un/O/E6G3+011J/zvp4MQ2jw//TnKSjSpDj158zz
FKwq9p76c+Z5CsJ8z1F/zjxPweOj0dSfM89TsD7iH+rPmecpqLexM/XnzPMU
2MyeTP058zwFM1Y0of6ceZ6C1+1HUH/OPE9Bnut86s+Z5ynwir5J/TnzPAXz
RpupP2eep+BLxg/qz5nnKXDtcJj6c+Z5CmpENqD+nHmegvOvKlJ/zjxPQabd
VerPmecpaDLTh/pz5nkK3LQ61J8zz1Pw55P31J8zz1NQYM4F6s+Z5yk416I7
9efM8xQsfH2T+nPmeQpOnjFRf848T8GRA27Un/PPHym4OtmH+nPmeQpCNy2l
/px/HknBvy+SqD9nnqcg5Wdx6s+Z5yn41LUN9efM8xQc3zmN+nPmeQr2zRhI
/TnzPAXDkvLuqP6cea5fv3G9qT9nnqfgsOcs6s+Z5ykIvPMn9efMc/31rdpA
/TnzPAVLugRSf848T8GpJpnUnzPP9eczOIT6c+Z5ClAd1J8zz1NQNqAN9efM
c/3+mD+D+nPmeQoK+VSn/px5noJmR7KpP2eep2CFa2fqz5nnKag08SD158zz
FFzwH0j9OfM8BW9eFKX+nHmuX8/2VtSfM8/1698rnPpz5rn+/Wf7UX/OPE/B
+FZLqT9nnqdgx+pA6s+Z5yloPXQX9efMc/39bL6D+nPmuf752dKP+nPmeQpc
ZrlSf848119/uC/15zz+UuCYOJ/6c+Z5Cu4O96X+nHmegs7FcpU/F56n4I9o
f+rPmeep+PFQo/6ceZ6KHr/dp/6ceZ6KQ7WOUX/OPE/FtIgK1J8zz1OR42dF
/TnzPBWpcYWoP2eepyJu4Srqz5nnqXAovZn6c+Z5KqovTKD+nHmeikLz2lJ/
zjxPxeE7W6k/Z56nwvuGJ/XnzPNUnF2+k/pz5nkqqpzJoP6ceZ6K7SW9qD9n
nqfi7+eu1J8zz1NR8aML9efM81SsLWyi/px5rj+fNGvqz5nnqbi7KU/5c+F5
KhzNpak/Z56n4uaORtSfM89T8Wjua+rPmeepKDEtjPpz5nkqmtwtTv0581z/
/u+6UH/OPE9FbHkL9efM81TU9OlJ/TnzPBXv32+g/px5norllrPUnzPPUxFc
ykz9OfM8FRNO7qD+nHmeioaHp1F/zjxPxeZlV6g/Z56nwvYrqD9nnuuv1/SR
+nPmuX79xt+i/px5noruzr9Rf848T0VE6T3UnzPP9X+/5Bb158zzVFzsMJP6
c+Z5Kga1+ov6c+a5fr0SHlJ/zjzX758S7ag/Z56nou3pktSfM89T8fimgfpz
5nkqeluto/6ceZ6KfWWjqD9nnqei7gM76s+Z56mw/20P9efM81Rs/T6S+nPm
eSr6z4+h/px5rl/fyU2oP2eep8LY4wD158zzVJQ/M5b6c+Z5Koq99KL+nHme
io0R9tSfM89TUckygPpz5nkqhpx8R/0581y/3/MWUH/OPE9F6f0TqT9nnqfC
d4fb//TnaWgWkTyrvLvlKfM8DfmdB1J/zjxPw72qE6g/Z56nISiG+3PmeRp6
g/tz5nka9jXg/px5noZZcQupP2eep2FJLfLncp4uDVM/u1J/zjxPQ8eF5M/l
fF0aCs6KpP6ceZ6GpWuaUX/OPNe/fxXy53IeJw0fzw2m/px5ngaDT0Hqz5nn
aejx5SH158zzNHgu2Uf9OfM8DcWHkj+X83lp2HanNPXnzPM0/X4lfy7n9dKQ
N34V9efM8zTE7z1J/TnzPA27rMmfy/meNFyrbUP9OfM8DTetH1F/zjxPQ2GD
mfpz5nkavFoupf6ceZ6GWr+vpP6ceZ6GMdZJ1J/z7xvTUDJiBvXnzPM0fNhl
T/058zwNZeedp/6ceZ6GgwWGU3/OPE9DZAPy53I+MA19Xu+n/px5nob/Hu+h
/px5noa0vD3UnzPP9evzzob6c+a5fv0C7Kk/Z56nofW7rdSfM8/TUKQ0+XM5
b5QGu7k3qT9nnqfhRJ2K1J8zz9OAzH+pP2eep2HU6brUnzPP09A8YRH158zz
NCz8eZf6c+Z5Gq7GHKf+nHmuX98O26g/Z56nod+96dSfM8/TkDr0E/XnzPM0
HG3pT/0581y/vtdnUH/OPE/D708yqD9nnqfB0f8g9efM8zR8cqlP/TnzPA3v
Zlak/px5noYG9ieoP2eep6H/6IvUnzPP9a97fKX+nHmehuoFl1B/zjzX388a
96k/Z56nIfbELOrPmefp+NajF/XnzPN0uMw8Rf058zwdpV3eUH/OPE/Hp+p3
qD9nnqejlE896s+Z5+movqQy9efM83SUj82h/px5no4Otcify/mqdISVJn8u
5ynT0bK9HfXnzPN0bChH/lzOV6Yj/ZI39efM83QstyZ/Luct01Hw+HHqz5nn
6eienUv9OfM8HQOsyJ/L+Sz9+e/uR/058zwdk2MHUX/OPE9HhXrzqT9nnqdj
6Bkr6s+Z5+nofOg59efM83TcGp9D/TnzPB1OxVZSf848T8fhC4epP2eep6NV
VEvqz5nn6Rgz6jD158zzdGzNfE/9OfM8HSWWtqD+nHmejlcen6k/Z56no+km
W+rPmefpKFpnM/XnzPN0HNk+i/pz5rn+/q5uTv058zwdEV4HqD9nnqdjREoF
6s+Z5+lo0PAc9efMc/16/xZI/TnzPB3uHnHUnzPP9ffr6gHqz5nn6ZjRoA/1
58zzdNSZlU79OfM8HQ/v96L+nHmejm7/zqH+nHmejhaVR1J/zjxPx5uNK6k/
Z56nY3ZPK+rPmefp+Ox0hfpz5nk63PbEU3/OPE/H8Mp+1J8zz/X79c/G1J8z
z9Nx/+hA6s+Z5/r9VNqe+nPmeTqSGiZRf848T0exyCPUnzPP9edfZC7158zz
dOT0taX+nHmufx5OT6X+nHmejh7bbak/Z57rj99gHfXnzHP9/VkSSv058zwd
48+dof6cea7fP3U//09/noFngZWpP2eeZyBmRf5s1Z8zzzPgsew69ec8EDLw
9c8q1J8zzzPQJiSS+nPmeQaalF9L/TnzPAMbt/xO/TnzPAMBi1ZRf848z8Bw
v4XUnzPP9e//70Tqz5nnGWi7dAX158zzDPw8fYf6c+Z5BoYN/Ej9OfM8A6Py
elB/zjzPwP67U6k/Z55noEb0EOrPmecZqHwwivpz5nkGSk35TP058zwDS06t
pv6ceZ6BHMc+1J8zzzPwxrYd9efM8wxciGpN/TnzPAMDXqZTf848z0CUuRD1
58xz/fF3PaX+nHmegUqT7Kk/Z55nIHG7C/XnzPMMFK9I/lx4noEhkVeoP2ee
Z6C0OZz6c+Z5Bj4d7kX9OfvEDDxInUT9OfM8A8smD6P+nHmegRa1yZ8LzzPQ
YVUy9efM8wx4/uND/TnzPAOfJxWg/px5ngHfj2eoP2eeZyBh1mTqz5nnGZi9
bCT158zzDPTNLEj9OfM8A3c6jaT+nHmuP5/hryf+Xx+UgeDNNak/Z55noPv+
O9SfM88z0LFfX+rPmecZmPeyCPXnzPMMNMw+Qv058zwD5UuSPxeeZ8B8vSn1
58zzDNjsekD9OfM8A5fv9qb+nHmu39+BJurPmecZmBS1g/pz5nkG1tnsov6c
ea7fP68rUn/OPM8AbOKoP2ee69evnRP158zzDCx+Z6D+nHmegYmZTak/Z55n
oOWc1dSfM88z8PZrDerPmecZ+GAgfy48z0TXOY2oP2eeZ6Ll5i7UnzPPM5Eb
GkX9OfM8E0uv3qL+nHmeiYexh6k/Z55n4s3bmtSfM88zERrSmvpz5nkmPhzu
R/058zwTc8Y4UH/OPM/Ek5Ab1J8zzzPhuWIY9efM80x0HH+a+nPmuf5zRMwS
6s+Z55m4/rU99efM80xEbbpH/TnzPBM1XIZSf848z0Seeyz158zzTJx2+0z9
OfM8Ey+Dvag/Z55n4vwaZ+rPmeeZeNu5KvXnzPNM2Gasof6ceZ6JK/VHUH/O
PM/ECOtU6s+Z55lweVub+nPmeSYKfrWl/px5nolL8UWoP2eeZ2LCnHDqz5nn
+vVbfpr6c+Z5JuxrHqL+nHmeifH/Hqb+nHmeiXk9ClJ/zjzPxIUO56g/Z55n
okvRUOrPmeeZCPpjN/XnzPNM5NwqT/058zwT850HUn/OPM9Ev4P7qD9nnmfi
6Y6f1J8zzzPh9GI99efM80z0HrGE+nPmeSbiuzeg/px5nomjfVdSf848z8SA
VsnUnzPP9fvj5wLqz5nn+vUcvoH6c+Z5JmrnVaX+nHmu328bHlB/zjzPhKXG
X9SfM88zMXrjQerPmeeZKF5hBvXnzHP9en2bSv058zwT7Y6coP6ceZ6Jv/Iv
UH/OPM/E9uWHqT9nnmfCakUF6s+Z55lI/rMj9efM80ys3HCR+nPmeSZmDttN
/TnzPBOLHE9Qf85PLxP9rQpTf848z0S3Kov+pz/PwqkJzak/Z55n4e3naOrP
medZcJ0cS/05D4Qs/P6nmfpz5nkWKliPof6ceZ6Fjs8jqT9nnmehQKVo6s+Z
51lIOtSB+nPmeRbqRrSk/px5noXz+65Tf848z8ISrQr158zzLDQdP5j6c+Z5
FjqNfk/9OfM8C1ZjJlN/zjzPwuyhx6k/Z55nwTlqKvXnzPMsGAd3pf6ceZ6F
s5MqUn/OPM/CuHGLqT9nnmdhQex46s+Z5/rfJ46l/px5noXt/y6h/px5ngWn
rE7UnzPPs3B0/B3qz5nnWZgVsIz6c+Z5Ft53PE39OfM8Cyuj3lB/zjzPwt6A
POXPhedZGDsrmvpz5nkWejQ+S/0581x/v+76UH/OPM/C3UtHqT9nnuvXZ+Yp
6s/5vFAWWliVoP6ceZ6F0+GrqT/n80NZCA9pQv058zwLtuH3qD9nnmch8IMj
9efM8yw0aH+K+nPmeRbKjP5J/TnzPAvnfC9Qf848z0KzGR2pP2eeZ8E9sAP1
58xz/f665039OfM8Cw+LPaH+nHmeBfSqSv058zwLIUmu1J8zz7MwcvlU6s+Z
51lINTel/px5noXpESWpP2eeZ2FS9A3qz5nnWbi1twv158xz/f5r6ED9OfM8
C3d6F6X+nHmehVL3ClJ/zjzPwuF6I6k/Z55nIdH9OPXnzPMsbLGLpv6ceZ6F
9rbPqT9nnmfp+G9F/TnzPAvfOpuoP2eeZ+FRjenUnzPPs/R97Tr158xzM/rN
X0v9OfPcjCMBTtSfM8/NMDQuSv0589yMcXOKUn/OPDdjYrkW1J8zz83oPtqD
+nPmuRkn2j6h/px5bkY5Uwfqz5nnZswqZUX9OfPcjIjH9tSfM8/NSHX9SP05
89yMIsbD1J8zz/XHK0j+XHhuxuvIitSfM8/NeJQ5nPpz5rkZA9ZVpv6ceW7G
ZM/31J8zz80o9tye+nPmuRmXRhag/px5bsaf869Sf848159f733UnzPPzbhd
gPy58NyMttOGUH/OPNef3/QY6s+Z52bEX2pL/Tnz3Ix/q12j/px5bkaF3b2p
P2eemzFiyGDqz5nnZqy4eI76c+a5GdunLqP+nHluRv1NS6k/Z56bYTrxlPpz
5rkZjba5U3/OPDdjz8+T1J8zz81wm+ZK/Tnz3IxKkZupP2eem9HR+Rz158xz
/fVW60r9OfPcjA6PClJ/zjw3o7PnUerPmedmdFobSP0589yM2s/+pv6ceW6G
v+N96s+Z52bc8vid+nPmuRlVLu2k/px5boZ76TrUnzPPzViXtoz6c+a5Gc8L
2VB/zjw3Y/ThedSfM8/NGHhtHfXnzHMzQl6C+nPmuRn7f4yk/px5rr/esY7U
nzPPzVhQcjz158xz/fP1zZX6c+a5GYO+vaP+nHluRtMGy6k/Z57r1/tFcerP
medm1Jy1lfpz5rkZgfu8qT9nnpsRVHs19efMczMcnIP+pz/PxrHDRak/Z55n
Y/KKt9SfM8+zUcP+LPXnPBCyYV8xivpz5nk25vy1mfpz5rn+dcFO1J8zz7Ph
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
anSl/px5notuce+oP2ee5+LDtObUnzPPc7HH9In6c+Z5Ln6b1576c+Z5LvKK
b6L+nHmei4vzZ1J/zjzPxZXxzag/Z57notmd/dSfM89zYXIvT/058zwX163O
Un/OPM+Fe4g/9efMc/3xz8ZSf848z4XL6v3UnzPPc3Eyoxf158xz/fp1TqP+
nHmeixFre1J/zjzPRUXjbOrPmee56Ok/nPpz5nkuKvdbQf0581x//6wKUH/O
PNefT8nL1J8zz3ORMiiO+nPmeS7euftQf848169H2UbUnzPPc+HmMID6c+Z5
Li49saP+nHmei5teCdSfM89z0WTHYerPmee5eH5lNvXnzPNcBMe2o/6ceZ6L
Tb2nUH/OPM9FftP21J8zz3NR9dUa6s+Z5/rntVwI9efM81ws6naa+nPmuX6/
3XP7n/48Dx/nVKL+nHmehyUl85Q/l/PteQgreo36c+Z5HmbFVKL+nHmeh5F/
R1B/zjzPQ+ih1dSfM8/z4FGyDPXnzPM8vMxaQf058zwPvkMXUH/OPM/Db8Um
UH/OPM9DVuoy6s+Z53noW+029efM8zzMNL2n/px5nodac7pTf848z0PpBlOo
P2ee58Fh2GDqz5nneShcKJL6c+Z5Hh55uFF/zjzPQ3TxVdSfM8/z0OZuL+rP
mef6+3eoDfXnzPM8rOrfivpz5nkeMmqnUX/OPM/DjKHW1J8zz/PwLe4x9efM
c/39fGpH/TnzPA9WD0dRf848z0O57tOoP2ee52FIGfLnwvM8FK1N/lx4nofn
L3tSf848z8PlyuTPhef68/l3KPXnzPM8NOy9jfpz5nkeWp5Mov6ceZ4H70ve
1J8zz/PgtclA/TnzPA/xsaepP2ee56Hkf5OoP2ee5+HkwRHUnzPP87DpD/Ln
wnP9vx82gvpz5nkeDs17Rf059755mHKqBvXnzPM8BFy/Tf058zwPaWP7DPm/
//+XebD/UZj6c+Z5Hur/Tv5ceJ4H27r1qD9nnuehx5sm1J8zz/Ow/+x96s+Z
53no/6EX9efM8zw4pTyj/px5noe/sv+j/px5nofrtjupP2ee52G0TwXqz5nn
+vVvF0v9OfNc/7z1dKT+nHmeh3988uNVf848z8Nta/LnwvM8mFasov6ceZ4H
18Dq1J8zz/XH++009efM83wcX9aQ+nPmeT4Cdnam/px5ng9zXCT158zzfLy9
e5P6c+Z5PkakulJ/zjzPx8PPNag/Z57no3l0K+rPmef5mHWyL/XnzPN8zBtv
T/058zwfNSKvU3/OPM/H3jVDqT9nnudj7KRT1J8zz/PRIX4x9efM83yc925H
/TnzPB92/9yl/px5no9klyHUnzPP89HzSwz158zzfLi4faL+nHmej5Sgr9Sf
M8/z4bDaifpz5nk+YjpWof6ceZ4Pv9TV1J8zz/PhXmc49efM83zkG1KoP2ee
52PTy1rUnzPP83Hvc3vqz5nn+YiOKkz9OfM8Hy2nh1F/zjzPx6GFp6g/Z57n
o1vlg9SfM8/1f7/Blfpz5nk+dna2ov6ceZ6Pca3OUn/OPM/HHkMI9efMc/31
lNhF/TnzPB/7Lv1B/TnzPB93+g+g/px5no/WO/ZSf848z4dx0w/qz5nn+uPf
X0f9OfNcv34Oi6k/Z57rf29rQ/058zwfOV1WUH/OPM/HnzZJ1J8zz/NxymM+
9efM83xsG7Se+nPmeT7mplSh/px5no8NS+5Tf848z4dP2bHUnzPP82FYeoD6
c+Z5PhYXm079OfM8HwfdplB/zjzX758dx6k/Z57rX6ecp/6ceZ6P3rNcqT9n
nudj16zy1J8zz/Mx2rkD9efM83x8WHSB+nPmeT5c+++i/px5rt8vPY5Tf848
z0ePNGvqz5nn+ahVYuH/9OcGbfbQZtSf8+fdoK0zRVF/znw3aP1HxFB/zp9/
g3bbMYv6c+a9Qbue7kL9Oc8Dg/bpZgT158x/g7azWBT15zwfDNrqf22pP+d9
wKDd8W1B/TnPC4OGzdeoP+f9wKBVbF2Z+nOeHwbNe7CR+nPeFwxaov076s95
nhi0dw6TqD/n/cGg9et3jPpzni/643+fQv057xMGbXifLtSf87wxaG+HV6D+
nPcLg3Z08CLqz3n+GDRP/3HUn/O+YdCCg/+k/pznkUFru2ox9ee8fxi06rEd
qT/n+WTQ9g29Tf057yMGbY/HUurPeV4ZtFrNTlF/zvuJQSv88zX15zy/DNpg
z1zqz3lfMWjDxkdRf87zzKAtqHGG+nPeXwzaoYve1J/zfDNok48fof6c9xmD
lj7uJPXnPO8M2rTM4tSf835j0Gx+rKL+nOeffv39GlN/zvuOQTP+uEv9Oc9D
g2b33IH6c95/DFpk05PUn/N8NGj1B/+g/pz3If36up+n/pznpUHLnNCB+nPe
jwxahq/twf+bnwbNdM2L+nPelwzaeavH1J/zPDVou7tWof6c9yeDdiTmEPXn
PF/1+2/hFOrPeZ8yaFvSmlB/zvPWoM0NLkH9Of/vARi0kLDr1J/z/DVoJ3d2
pv6c9y2DdrqePfXnPI8NmmuPItSf8/9egH49bltRf87z2aCtqDOC+nPexwza
kM/HqD/neW3QFg6Mov6c+0ODdqW9ifpznt8GrW5cS+rPeV/Tr2eXZ9Sf8zw3
aH41p1F/zj2DQWsx9Rr15zzfDdq/C9dQf877nEFbFuxI/TnPe4O2uFkR6s/5
fKT+9wuKUH/O89+gVajUnPpz3vcM2oFxX6g/Zx7o73enx9Sf8/lJg/bgjS31
58wHg3a/fAHqz3kfNGgBrwZRf8680N+/0x+oP+fzGAZtnIsr9efMD4NWteRI
6s95XzRom1MqUH/OPDFo7QqSP5c+0qCt/68S9efMF/3zEviO+nPeJw3a48+D
qD9n3uifv6kG6s/Z/+ivZ90V6s+ZPwYtZche6s9539Tvp7LTqD9nHhk0t+WD
qT/n3ycZtJaroqk/Zz7pj/+sDfXnvI8atP0tr1J/zrzS7/dzvag/5/3UoJWf
ZqT+nPll0Eo8P0v9Oe+rBi139VLqz5lnBm3+sSXUn/P+atDSHj6h/pz5ZtA6
nvtM/TnvswZte+YJ6s+Zd/o833SI+nPebw1aTEHy58I/g5Y06yz157zvGrR/
RnSm/px5aNDmZBeg/pz3X4M2odwR6s+Zjwat62t/6s95H9bfD+up1J8zL/X5
uv8u9ee8Hxu0S1XKUH/O/NRfb/p/1J/zvmzQnrnUov6cearfrz2X/j+m7jrc
ivrt4jC7O2YOCAj8aJCQbolFSHeKIop0GXSngrR0N0g3Akoo0gLSIN2dgkjD
+3U953p5/vQCztkxM59Z7nMD/bncPyfBn/Uz0Z9LX5Og+f1v6M/lfto8XvcA
+nPpbRKkTVWS/lzur833K9CQ/lz6mwQLNlanP5f77SRI2bYJ/bn0OAmSFp1C
fy733+b6+MEu+nPpcxJUH9aD/lzux8359l6A/lx6bY7HE0Poz+X+3PTIcZT+
XPqdBI9G9qE/l/t1cz3eek75cwdqRH3059JzB778ewf9ufTcgabb59GfS88d
eDzqGv259NyBjmcG0Z9Lzx04068I/bn03IHhXzWjP5eeO7C4/3v059JzB06U
qk9/Lj134Mmib+jPpecOTH65gv5ceu5Ars7/0p9Lzx3ol3CS/lx67kCtjyfT
n0vPHfg1kpn+XHruQOMHSenPpecObOm9hP5ceu5Awrwj9OfScwc290xLfy49
d2DAq53059Jz8/qt+5H+XHruQOEeJenPpecOZE22kv5ceu7AvOeb6c+l5w7c
eLhH/fvnDtTbdYT+XHruwK47XenPpecOnMx5j/5cem6+XlU//bn03IFbq/PQ
n0vPHUgfbk1/Lj13YOTdivTn0nMHTnd+SX8uPTev790y9OfScwcyNm1Pfy49
d+BZlU/pz6XnDuRLNZD+XHruwPGzZ+jPpecOjD/8D/259NyB4o4L9OfSc/P+
HihOfy49dyDdhLz059Jz83rna0t/Lj134NvJqejPpecO9G/xlP5ceu7AjDZF
6c+l5w68LjqR/lx67kCrDZXoz6XnDnwz10t/Lj13YFTqJOrfP3egYN7L9OfS
cwcafXGc/lx6bo6PbN3oz6XnDlzuc5b+XHruwOiPf6A/l56bXy8ykv5ceu7A
hSnl6c+l5w7s/G4y/bn03BzPTn5+nthzBz4p8A39ufTcgXcWH6E/l547cLbF
M/pz6bkDaeucoj+XnjvwJk8J+nPpufn+I9bSn0vPHZi5Yir9ufTcgZf9E+jP
pecO7O33puF//lx67sAXs53059JzB64U7kV/Lj134N8z39KfS88dyFDzNv25
9Nx8vYZ56c+l5w6EF31Pfy49dyDZ6gPq3z8316MhI+nPpecOrNvyiP5ceu7A
o/yH6M+l5+b9+WcS/bn03AFP6GP6c+m5ud7V2Ux/Lj134Fg1J/259NyBMfde
0J9Lz83zaxehP5eem+PBykp/Lj13oHmSbfTn0nNzfnku0Z9Lz83z/dRPfy49
d6BO72L059JzB46eeEZ/Lj134MP5penPpefmejl/IP259NyBw1fn0Z9Lzx24
++If+nPpubmeLR5Ofy49d+DI5pb059JzB26vX0R/Lj0370/24vTn0nMHAvl2
059Lz83re2+F+vfPHXj61Ed/Lj13oMKhH+jPpefm+lRvJf259NyBErnb0p9L
z83xV6Yx/bn03IHd726gP5eem/evTj76c+m5Aw5viP5ceu7Agtyv//v8PLHn
DlzL24f+XHruwIhul+nPpecO+OpWpD+XnpvrxZlR9OfSc3P9ulif/lx67kDS
1dfoz6Xn5vw4lZX+XHruwP7b4+jPpecOVG/2Mf259Nx8//t/0p9Lzx3o1bsS
/bn03IFOScrTn0vPHQh++yv9ufTc9Gpje/pz6bk5PzbWpz+XnjvQ98PVyp87
0SpHq3WxAy+3SM+deLa2Mf259NyJzO+3oz+XnjtRMMVd+nPpuRMZxlakP5ee
O7HvsvjzxB/AwaES/Pw88edrzO93iz+XnjtR40Px59JzJw48/5v+XHruRP4t
1+jPpefm1yfnpD+XnjtR8mVF+nPpuRMPavPz88Sfv3NiRxUn/bn03IniMX5+
nvjzeE70GzCO/lx67sSbkvz8PPHn85w4NzBKfy49d+L07yPoz6XnTpx80Zv+
XHruRCebn58n/vye+fotStCfS8+dqNUqE/259NyJqnl+pj+XnjvRKP6E/lx6
7sT8LN3oz6XnTvxyuyf9ufTcCcf2u/Tn0nMnBg5tS38uPXficOqq9OfSc/P+
XZpPfy49d2J2vXr059JzJ/pv709/Lj13YmLdCfTn0nMnepfk5+eJPy/oRLOO
Y+nPpedOjMzNz88Tf37QvH6Fq9GfS8+d+DkpPz9P/HlCJ9JVP0F/Lj134t15
K+nPpedOVK6QjP5ceu7Ej9Fh9OfScydaLE9Pfy49d8J1uzP9ufTcicL71tKf
S8+dKLt/Bv259NyJs5Fh9OfScye69G1Dfy49dyKTvZf+XHpuHv+5U/Tn0nPz
etRqS38uPXfiUc1/6M/l8xEnqjWbSH8uPTfnx/EM9OfScyfWnk5Kfy49dyLj
8hn059JzJ7ByAf259NyJSd8fpD+XnpvjrXgX+nPpuRMjKv9Efy49d2LI1nb0
59JzJ27VK01/Lj13YlynWfTn0nMnRtXbRn8uPXfiu+Bq+nPpuRMFymekP5ee
O3HtUnL6c+m5E2OrP6c/l5478UXvnvTn0nMnrrfYSH8uPTf/Pagy/bn03Lx/
jXPQn0vPncj14Aj9ufTciVllctOfS8+duHtiBv259NwJd86X9OfSc3O+vj+F
/lx67sS0DeXpz6Xn5noS5OfniT+v5UTrEh3oz6XnTgzfkIT+XHruxIAFv9Kf
S8+duNHmGf259NyJb4O96M+l5+b6M28K/bn03Ik+Z3PRn0vPnVhWeQr9ufTc
ifsXdtGfS8+d6PXp+/Tn0nMnvlyxj/5ceu7EncYF6c+l5+b4e/Qd/bn03Ikl
H7enP5eeO3GpfE76c+m5Ex3GT6A/l547kXVZUvpz6bl5/c/Ooz+Xnjsx7Jcz
9OfSc3O96XmL/lx6bt7v2hPoz6XnTuzfUZb+XHruRBL/I/pz6bkTT6uUoT+X
npv3M+VX9OfScycqzW5Afy49d6JroBf9ufTciam/vRn8nz+XnpvXf89i+nPp
uRMB3236c+m5E+UGHaM/l56b439nVvpz6bm5XiWpRH8uPXfC364K/bn03Fwf
+92lP5eem+tT0an059JzJ0rX/Yr+XHruxKZRBejPpedOXLzWgv5ceu7E+r0F
6M+l5+b69Hk/+nPpuTm+ll6gP5eeOzHm2Bz6c+m5uV5V3av8uQuHXMnpzyW/
Ljye9pL+XHruwvPxy+jPpecuuDsnpz+XnrvQ6+EV+nPpuQtD0/WlP5cv6EL6
0VH6c+m5C7O696I/l567UPNYR/pz6bkLKb77gv5ceu7C5vY96M+l5y4sGbua
/lx67kKfgrvpz6XnLhy7XIr+XHruwvCJLejPpecu9NxRm/5ceu7Cva+v0p9L
z11o8MFe+nPpuQufduhNfy49d6F5qrL059JzF/54lZf+XHruQtnFuenPpecu
zO73kP5ceu7CtdVO+nPpuQt5KmykP5eeu/D9O1Xoz6XnLrxz9WP6c+m5C8nb
tqE/l567UKPoUvpz6bkLTypeoT+Xnruw9lYZ+nPpuQuTSjWnP5eeu9BwVT36
c+m5C1br4fTn0nMXsuy4T38uPXdh//6j9OfSc/N6L3zT4D9fIz03x0+In58n
9tyF7Mub059Lz83rtf4j+nPpuQu/53XSn0vPzevf8SP6c+m5C85R25q/9UEu
XN2chv5ceu5C1z/W0J9Lz11Y3P1D+nPpuQvvPfLQn0vPXUj33jT6c+m5C3WK
ZqQ/l5678O3p7PTn0nMXfBvX059Lz124fLYs/bn03LwfHn5+nthzFz4K8/Pz
xJ67cLbiD/Tn0nMXfr2WjP5ceu7CVx/eoj+XnruwpnYN+nPpuQujr7z+7/Pz
xJ6b18POQX8uPXeh6tA+9OfScxfa3k5Nfy49d+Hfd+bSn0vPzZ8flJX+XHpu
jrepxejPpecuPHh8jf5ceu5C8NdV9OfSc/P1nk+hP5eeu7DwWBr6c+m5C53v
56E/l567EFlYnv5ceu5Ch1bV6M+l5+Z8vL2C/lx67kLd7+rRn0vPXejfeg79
ufTchR33u9KfS89dmHaiAP259NyFpUN/oj+Xnruw5dO69OfScxe+O3iT/lx6
7kJs3z76c+m5C6kvHKY/l56b16NPTfpz6bkLoSIp6c+l5+b5/t2X/lx67sLd
tA3oz6XnLsx49YD+XHruwspf09KfS89daPlHQfpz6bkLma546M+l5y48bXGZ
/lx6bs6vr+fQn0vPXciRMIn+XHpu3v++U+jPpefmelnAQX8uPXfh3ezz6c+l
5y5cf3qB/lx67sI+92j6c+m5+fpzE+jPpecu/I1K9OfScxeSDR5Hfy49d+Fi
71P059JzFw4sH0B/Lj0315MPu9KfS89dKPh+Zvpz6bkLtfL1oj+XnrvwZar7
9OfSc/PfOzvSn0vPzfcvM5D+XHruwsZrKenPpecu/NB+Pf259NyFRd7P6M+l
5y5MbT+R/lx67sK5l23oz6Xn5vX4tSX9ufTchUoDZ9KfS89dSHV1Af259Ny8
P02m0J9Lz83r/UVS+nPpubnelStMfy49dyHcZiH9ufTcHK8fjKY/l567MKrA
TPpz6bnpxTUX/bn03Bwfrzopf+5GgYo56c+l524UWn2d/lx67sbdyjfpz6Xn
blQr84T+XHruBq5/Qn8uPXejwbyr9OfyBd1I8eIa/bn03A1vn0L059JzN0rs
yUV/Lj13Y1/35fTn0nM3lmZMQX8uPXejY/na9OfSczemYRf9ufTcjYGlm9Of
S8/dSFZsBv259NyNjPta0p9Lz92oW+QD+nPpuRtnKyejP5eeu3GofBf6c+m5
G1kONqE/l5678dHRxvTn0nPz+7/pSn8uPXfj0tki9OfScze+q7SG/lx67sbq
7d3pz6XnbnyZbg79ufTcjcEHttOfS8/dCO58SX8uPXejfIPr9OfSczdm2fPo
z6XnbrhmHqU/l567YY2fRn8uPTePr8Fs+nPpuRsz7wToz6Xnbsw92If+XHru
Rq8/s9GfS8/daHPoJ/pz6bkba9ZXpz+XnrsxJ+Ns+nPpuRuFq5yiP5eeu9F/
5wL6c+m5G5sbFaY/l567kepgoclv//4O83wXHqE/l567MebFL/Tn0nM3rhRK
SX8uPXej/pXJ9OfSczfmf92S/lx67kaa+9npz6XnbnQ5E6I/l56b4+PCCvpz
6bkbo0YUoz+Xnpv3I301+nPpuXl9Snnpz6Xnbvy5ykF/Lj13o1G6j+jPpedu
bNg3g/5ceu7GZ5Wv05/Lzze6kbLQr/Tn0nM30t3JTX8uPXfjQfEt9OfSczce
pmtDfy49d+N0m+X059Jz83i69aM/l567Ue9KDfpz6bkbd/J46c+l524M7+6l
P5eeu7Er9fv059JzN263PEB/Lj13Yxw20p9Lz835sb8Q/bn03A1HmiT059Jz
N47sq0p/Lj13o+SyPfTn0nPz+jSfQn8uPXcjU/KG9OfSc3M8vEpGfy49d2NZ
tAH9ufTcjXVTk9OfS8/N77+zi/5ceu5G+zNV6c+l5+Z46vpmyX/3h9JzN46O
WUp/Lj03r3fzcfTn0nM3KmRsQ38uPXejycg69OfSc/P1Rt+gP5eem+PpcD76
c+m5GzPKLaM/l56b12NTWfpz6bkbe/vVpj+Xnrsx/cR8+nPpuRttJ3WnP5ee
u/H7+m7059Jzc707uon+XHpurt9b99OfS8/N9cXm5+eJPTePd+5k+nPpuRvr
0w2mP5eeu7F4xHz6c+m5Ob4mFKU/l5678WPRJPTn0nNzftedSn8uPTevv/8M
/bn03BzflVrSn0vP3fjt3Fr6c+m5G2ObRunPpeduXMZI+nPpuRuLFv2P/lx6
bl6PMd3oz6XnbuxZkIH+XHruxjdlvqY/l567MbphP/pz6bkbH3coTn8uPTfn
x8gG9OfSczfSJq9Gfy49N8fX7s/oz6XnbpyaNIn+XHruRsXpO+jPpedudLrf
jf5ceu7G8ZE++nPpufl++J7+XHpujo92h+nPpeduhF/2oj+XnruRkPes8uce
POvroT+XnnvQovl2+nPpuQfLi82lP5eeezDRf5X+XHruwVcNvqM/l557UPh1
Ifpz+YIeVLr/Bf259NyDA66s9OfScw+ab69Lfy499+BRnq/pz6XnHvgGLac/
l557kOB4TH8uPffgzOwT9OfScw+y355Ify499+Dd2Rnpz6XnHpQYlEB/Lj33
IMs7i+nPpece+Esdpj+XnntQKuX/6M+l5+b5T99Bfy499+DVR/Ppz6XnHvRL
W4L+XHruQWTzcvpz6bl5fPM30Z9Lz83zmbWb/lx67kHWrofpz6XnHpSf2YX+
XHpuXo9Ld+jPpecefOv20Z9Lzz3o2z43/bn03IMv97SkP5eeezBpWQX6c+m5
B/OKvKA/l557sGF1afpz6bkHHXO0oz+XnntgJ29Efy499yD5zf7059JzD75f
fpr+XHpuXv8fH9GfS8/N63fiHP259NyDvQs/oD+Xnnvwfoc89OfSc/P4rTb0
59JzD2r1fJf+XHruQb4qT+jPpeceFKxdhP5cem5ej0wT6M+l5x4cm1+R/lx6
7sH+sR76c+m5OZ5ib8r/58+l5x50y3qJ/lx67sGET47Rn0vPPXiQuSv9ufTc
vJ99ztCfS8/N69toFP259Nz8eskR9OfScw+Szv2Q/lx67oFj9CT6c+m5B93j
x+jPpecevKj/Ff259NyDo4cP0Z9Lzz3YOP4J/bl4Bg9uDP6L/lx6bl7fdh/Q
n0vPzflwYDX9ufTcg1xPJtOfS8892HbAoj+Xnnvw59FX/31+nthz8/xeJKE/
l5570G5SD/pz6bkHO8sOpD+XnpvzafNN+nPpuQfF9uemP5eee3Aww2D6c+m5
B3ny/Ul/Lj334FxsBP259NyD0VUe0p9Lz83xsOsA/bn03IOmIyfSn0vPzfG6
5CP6c+m5ef+ebaQ/l5578MfzJPTn0nMPXs9+Tn8uPfdgd5Yw/bn03IMthzLT
n0vPPaiwayv9ufTcPN8jF+jPpecerMvroz+Xnnuwq0FR+nPpuTk+NzylP5ee
m/8eDvpz6bm5Xo8dQH8uPfdg6Km59OfScw8GP3xIfy499+DSsqH059Jzc3z/
2Zz+XHruQYHjC+jPpeceLKlXjP5cem5+f5ud9OfSc3O8FlxOfy4996B1VS/9
ufTcg3i+UfTn0nNz/GxbTn8uPTfH5+LW9OfScw9+29uI/lx67kF41Tr6c+m5
B22f5KE/l56b68n6AP259NwcH/de0p9Lzz24sKcn/bn03IMOOS7Sn0vPza+n
L09/Lj03/doxgv5ceu7B/Kt16c+l5x5cP3iF/lx6bs7HpFnoz6XnHqzBWPpz
6bkHH5RrQH8uPfdgjmcf/bn03IPte8rTn0vPPXg8oCz9ufTcg+8e/0J/Lj33
4IvJrenPpecelKxZg/5ceu5BvQzzlT/3InXZsqfCB16WlJ57capDK/pz6bkX
q/J9TX8uPfeizPJ79OfScy86bKpEfy499yKhzCn6c+m5Fxubiz+Xnnux6PEF
+nPpuRedk4g/l557kX8zPz9P/Hk4L5o35+fniT8P58XhzPz8PPHn4bxI1p6f
nyf+PJwXUxbWpj+XnntRYZCD/lx67sWEXBvoz6XnXqwdNJb+XHruxeA1G+nP
pedeHLsVoT+XnntRNjU/P0/8eTgvfqrAz88Tfx7Oi+01Z9GfS8/N959YnP5c
eu7FyGEZ6c+l5164y2+gP5eeezE6xb/059JzLz5J35X+XHruxcO/etCfS8+9
+HXuHfpz6bkXuxu1oT+Xnnsx52Jl+nPpuRdjJs+jP5eee/HDmzr059JzL7bZ
/Pw88efhvMg8bTz9ufTci4/7jqE/l56bP79sDP259NyLcNNM9OfScy9WNqtK
fy499+JSsSH059Jz8/jaH6c/l5578WTTCvpz6bkXAxompT+XnntR6t2h9OfS
cy++WJOO/lx67kXTm53oz6XnXrzetob+XHruRcct0+nPpede9Hw6hP5ceu7F
d01b059Lz72Yd38P/bn03IsVP52kP5eee3EnfRv6c+m5F+fefUR/Lj03x1fW
CfTn0nNzvIxNT38uPfciw5gE+nPpuRcpG0+nP5eee/Gy4Y/059Jzc/7kOEB/
Lj33mutUJ/pz6bk5/i6soT+XnnsxrlZb+nPpuTmezpeiP5eeezH/yQz6c+m5
F+UPb6U/l557cbnfSvpz6bkXxfpkoD+Xnpvvl5yfnyf+PJwX1fo9oz+Xnpv3
c0kP+nPpufn+Y36hP5eee1FiRSX6c+m5Fx8MzE5/Lj03X8/m5+eJPw/nxY9N
ctGfS8+9OPtoOv259NyL8+Ve0J9Lz83vLzuZ/lx67kWDvR/Sn0vPvej9bhX6
c+m5F5HK39CfS8+9yPr7m23/+XPpuRcplm+hP5eee9Hjy6f059Jz836EetKf
S8+9+HTOZPpz6bkX7/71Pv259NyLmmUm059Lz72Yemwn/bn03IuCNXLSn0vP
vSg8Yy/9ufTciz2VC9CfS8/N+3XmW/pz6bnX9KYd/bn03Atf9hz059Jz8+ud
x9OfS8+9GDI0gf5cem6O1/Vz6c+l514UHXOa/lx6bq4HNW/Sn0vPzfU603j6
c+m5F47xZejPpedetDz6N/259Nwcn8lK059Lz/87ftvTn0vPvWjUvD79ufTc
PN8/etCfS8+9yNP39X+fnyf+PJwXjb9bRH8uPfci52836c+l5+b5FD9Kfy49
96Jejyz059JzL/5eVYH+XHpu+vZuZfpz6bk5P3LeoT+XnnvR9tJk+nPpuRdb
n7enP5eeezErf376c+m5Fzm+b05/Lj334ss2+enPpedetHrZh/5ceu5F3/Ln
6c+l517Mbjeb/lx67sWbC3uUP/fh+Phk9OfScx965XxBfy4998GXcSn9ufTc
hylvktGfS899mNbjMv259NyHYj/2pj+XnvvQMmmE/lx67kPv5z3oz6XnPuyu
04H+XHruQ15HE/pz6bkP3a93oz+XnvsQCa2iP5ee+zB88U76c+m5D2Pql6Q/
l5778NLXnP5ceu7D3Py16M+l5z4cPHOZ/lx67sOLeXvoz6XnPmw/2ZP+XHru
w7h+penPpec+/P55Hvpz6fl/jy8X/bn03IdS5x/Qn0vPfWgcc9CfS899GDT7
Z/pz6bkPv35Zif5ceu5Dpjg/P0/suQ/vjm9Nfy4996HSF0voz6XnPtz6+jL9
ufTcPF+Ln58n9tyHb5s3oz+Xnvvw4fG69OfScx/eDB9Gfy499yHljXv059Jz
H3beP0J/Lj334cSe1/99fp7Ycx+cOefSn0vPfSi3vxn9ufTch8fHGtCfS899
eF3dQX8uPfdhwagG9OfScx9aLf69+dt/n9KHZn+lpj+XnvtgXVlNfy4996HJ
mHL059Jz83yC/Pw8sefm+ZSaSn8uPffhqxoZ6M+l5+Z4fJCN/lx67kOnA+vo
z6XnPvT8uwz9ufTchzPJt9CfS899qPa/kfTn0nMfPB+Poj+XnvuQ+klS+nPp
uQ/uejfpz6XnPgxoUp3+XHruw5yHr+jPpec+VE2bnf5cem5e/wm96c+l5z4U
fZKK/lx67oOdYQ79ufTch89+yEJ/Lj33Ic/8ovTn0nMfrr6+Sn8ufx+BD/V3
raQ/l577MNLJz88Te+7DhDOp6c+l5z5sfJyb/lx67sOyZR/Sn0vPffiyfVX6
c+m5uf7cX05/Lj037+eQuvTn0nNz/LabTX8uPTev78Mu9OfScx9GnMxPfy49
9yE4fC39ufTch6GN69CfS8/N+XrwBv259Nxn9uFe+nPpuTlezx+iP5ee+/BD
7xr059JzH7IWSkF/Lj33IXa/D/259NxcL9PUpz+XnvtQ4vl9+nPpuQ/HNv6P
/lx67kPSnQXoz6XnPjQ676Y/l577sKXJJfpz6bl5/9vOpj+XnvvwTmQi/bn0
3Ic73SbTn0vPzfXr/ST059JzHw5kmEd/Lj03x8vf5+nPpefm+vNyFP259Ny8
XlNs+nPpuQ+5ilSkP5eem+tl77H059JzHzp0Okl/Lj33ITq/P/259NyHZB90
oT+Xnpv3P0Mm+nPpuQ8Ls/akP5ee+9Anfo/+XHpu+rKxA/259NyHmYUG0J9L
z835djoF/bn03IfpTdbRn0vPzfn7/FP6c+m5D4WaTKA/l577UP5Ba/pz6bkP
rjUt6M+l5z7U7DKD/lx67sOTEz/Sn0vPzfWr7mT6c+m5Dz/WTaA/l577kK1w
Ifpz6bkPtRstoD+Xnvtw7f0f6M+l5z5MzTKD/lx67kOGv5z059JzH47c76j8
uR8vi+ZQ/tyPu3OvKX/ux4TiN5Q/9+N2/n+VP/fj2F8fK3/ux7XxV5Q/92Pe
navKn/sx+quCyp/7sfeX95U/96Nx22XKn/tRPlly5c/9SF6klvLnflTLt1P5
cz/K5W+m/LkfN3NMV/7cj9CWFsqf+1E3ezHlz/14Vjyp8ud+BIt2Vv7cj76/
f678uR9Hdn6q/Lkf3zTrovy5H0sOFlb+3I8exVcrf+7H0fXdlD/347eE2cqf
+xHZtk35cz92/vxC+XM/PqhyTflzPw565yp/bh7P2CPKn/vx65Cpyp+b7191
lvLnfhy/6Ff+3I+MO3srf+5Hxe3vKX/ux8Bda5U/9yPt8mrKn/vx+buzlD/3
o2qZk8qf+/Fg84/Kn/sxuG4h5c/9KLO7oPLnfhyYdVj5cz/6/POz8ud+FMqT
QvlzP+xzk5Q/92NfmxbKn/ux5mY25c/96H0iSH8uPTff7/Ry5c/N+z+kqPLn
fnRMU1X5cz8+K+6hP5ee+5FnRRLlz/0o9b8Gyp/78b+905U/96NKpWv059Jz
P0YU3KL8ufn9d3Ipf24eb4nNyp/7EcvQmv5ceu7Ht+2WKX/uR0LPvsqf+5Hv
enXlz/1oVsBDfy4992NKb4/y5370TJ9T+XPz/rT/U/lzP34o/wv9ufz9Q348
OlJQ+XNzvmZ6s+CtPzfn/9Eqyp/7ceWn3cqfm+fz1WTlz83rmf4j5c/98PuT
KX/ux3vv1lf+3FyvFryj/LkfRZ/tVP7cHK+3qih/br7eoNdL3vpzP6Jzlih/
7sfDzmOVP/cjaYHWyp+b68fM2sqf+/F87nXlz/0YfjWv8ud+LP5oqfLnfvx0
qIzy5358N6GW8ufm+d+bp/y5H2dWdFP+3A/rYFflz8317e5G5c/9aHJ6n/Ln
fgx4f5by5350/nWS8ufm+5cYpPy5H82XzFP+3I/cRwsrf+7HuW6vu7z1537M
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
ir0jl6f1/b8/j+LIk57Kn0fRokw35c+jWHHmb+XPo2hlVVX+PIrDb7Q/j2L9
Ou3Po7hyUvvzKP7uOkX58yhGl9H+3Hz/tVeVP4+ia8kcyp9H8VmNCsqfRzGq
bi3lz6O4/uJN4bf+3Hz/9uuUP49i3ajRyp9HcW3aL8qfR5Hwc1j58yiaHxim
/HkUG8/3VP48ijX7Zyh/HkWWZ8WUP4+iyeH0yp9Hsf+bdcqfR1Ev2z/Kn0eR
Nnln5c+j2Lymm/LnUYxpekv58yiWO1opfx7FjLYVlT+PYql/jvLnUfxZp5by
5+b1XdFX+fMoOuQYp/x5FGUco5U/j+LdDKOVP4+i+B8ZlD+Pmr1VWflz834O
Hqz8eRR/LT2q/Ll5f+4tU/48imx9bOXPo/gx7/fKn0cxYvP/lD+PosG1Dsqf
R7FtzSrlz6MIzZ6q/HkUd/cPVv48iqM5Wip/HsXJxbuUPzfvV9MTyp9H8fL3
lsqfm8e//IHy5+b4WD5W+fMotkTSKn8eRcE3ceXPoyixZYry51EUXjZX+fMo
XB32KX8exUS7g/LnUXwTWaX8eRSdvmml/HkUXR4WV/7cfL3XU5U/j+LB3i30
59Jz8/5+uUz5c/P+3Uun/HkUs/snU/48inOXn9CfS8+jaBzorvx5FM1ublD+
PApz76v8eRT79r9Hfy49j2J7/UPKn5vry8ycyp9HcSbHNOXPzfnc5Rn9ufQ8
is5fTVT+3LzfD8oqfx7F86KVlD83v7/pV/Tn0vMoph17pfy5ef4bNyl/bh5f
53+VP4/i83B3+nPpufn16ROVPzfn0/4cyp+b62PeicqfR5H81+3Kn0fxR77s
yp+bx99zj/LnUczNkE/58yhuLB+g/Ln573Ab5c+j+PrBe8qfR9Gw0Fjlz83x
86Gl/HkUl9vNVv48irWlTyp/HsV7z68pfx7FyN1jlD+PYnB+KH8eRZ3295U/
j+LOwpLKn5s//2Vb5c+jmHm3jvLnUQyr1k35c3M8v3yh/HkUeV/9qPy56Um+
68qfm+vzokPKn0fx8GJG5c+jKJD0Q+XPzfW6awXlz6O4OfCm8udR7CkwUfnz
KC5VaKv8uXm8PfMof2768scXyp9HkWRhHuXPozheoJfy5+Z4735G+fMozk+Z
ofx5FHmCu5Q/j8H1i638eQyLqzxV/jyGUiUWKX8ew6WkCcqfx+AYdkH58xi2
rOqh/HkMdqqg8ucxfPSyq/LnMZyu+ZXy5zEMfPap8ucxJJzurPx5DI+fLVP+
PIY947Ypfx5D7uIfKH9uHt/NJsqfx5A0Xl358xh+WXtB+fMYmnbbqfx5DGsW
dlP+3DyfKiWVP4/hVJb3lT+PYce+7MqfxzB72l3lz2P4Zver9W/9eQy16q9T
/jyGamnLK39ufr3FR8qfm+d3s6Xy5+b3r12k/HkMF367qPx5DKM+g/LnMbRd
9YXy5zHkSFdH+fMYbh8dovx5DOFcd5U/j2Fn/sPKn8dwM/RK+fMYsrebrfx5
DN+Fmip/HkM9u77y5zEMGPLmq7f+PIY6u+spfx4DLv6m/HkMX0ZSKX8eQ83k
q5Q/N8fTtjLKn8ewoZhL+fMYkrefrPx5DOt6plP+PIZGqd5T/jyGj5+uVf48
hp9TlFb+PIYuJTYpfx5DhTLDlT+PoXmvEcqfx3AteYLy5zEU73Rd+fMYcvWt
qvx5DLuiL5U/j+Fe0feUP4/h5Yqeyp+brx99V/nzGKoUmaX8uXl/5mdS/jyG
0RsKK39uzu/4FeXPY3h0Yrny5zEctCYpf27ev1vvKn8eQ30nPz9P7Lk5/34u
q/x5DF27Vlb+PIbpT5cqfx7DtB9q059Lz2N40WGm8ufm/X/SSfnzGPqfzav8
eQzHR66mP5eex1D481rKn8dQ/dA15c9jKLB3j/LnMcw7e4D+XHpuXs8e1ZQ/
j+HrfO8ofx5D3Vu9lD83Xz95Xfpz6XkMIx/dVf7cnL9rUyt/HkPfzfmUP4/h
3DEn/fnP7HkMnzW4oPx5DKHPZyp/HsPzJOOVPzfHQ9uJyp/H4En3+uRbfx5D
+aRzlD+P4e7Fs8qfm+vdnRHKn5uvNySu/HkMa7OUV/48hkNtRyt/HsPMJieU
P49hwui+yp/H8DpLJ+XPY8gSzaD8eQzN7O7Kn5sePb+t/HkMZ+Z9rfy56U3a
fsqfxzB/2zvKn8ewvdJa5c/N63/pE+XPY+hVcZzy5zFkPNFS+XPz65ObKX8e
Q5tG05Q/N9eXzfOUP48hWbGJyp+b62VRS/lzcz6kLqD8eQw3MF/58xhK2iOV
Pzd9Ck5T/jyG2KYkyp/HMPbIN8qfxzE+TTb6c57vjjiaDb5Cfy59j+PvtNfo
z3n+u+LIlfwf+nPpfRzeTR/Rn8tfpxpHuPsl+nPpfxw7DlymP5e/biWONbXz
05/L/YD5+tNz0J/zehGIY2T1JfTncn8Qx5CnSenPef0IxfF1qhr053K/EMdv
ybbTn8v/zo3j9Dtf0J/L/UMcC2JT6c/lch/H09nN6M/lfiKODtEi9Oe83lhx
VEtv05/L/UUcs9J0pD/n9SchjgYLGtOfy/1GHI+WfEJ/zutRsjguVepEfy73
H+bxritIf87LXfI4pmZYSX8u9yNx1J3Rhf6c16uUccx9PoP+XO5P4vh88Vb6
c16/UsXx/exn9OdyvxLHV/mv0J/zcpEmjm/vz6I/l/uXOH7sdYj+nKd72jj6
dpxMfy73M3H8r/AM+nNe79LHsXyfl/5c7m/imLKqJ/05r38Z4/h4ZRb6c7nf
iaPg2tX05zxdMsfRa2oV+nO5/4mjnX8G/TkP96xxxPKeoD+X+6E4Wi2bR3/O
62W2ODaWK0B/LvdHcZT5Of/k/79+5jTH65iD9OdyvxRH9Pp6+nO+HbnimJnx
HfpzuX+Ko/7hCfTnfLp54vjns2b053I/Zb7f+az057ze5jOP908//bncX8Wx
4chS+nNefwuY5z+gMP253G/FUS55ZfpzXo8LmdejsIv+XO6/zPmw5PV/n5/L
3ioSR45U9ejP5X4sjmR7ptKf83pdzBwPFa/Qn8v9mXl8BTfRn/P6Xdy8Xndz
0p/L/Voc10ttpD/n9bxkHEsyt6Q/l/u3OGp/s4T+nNd3xJG6f2/6c7mfM8fn
var057zel4njbHEX/bnc38XRfLCL/pzX/3JxDMuZnf5c7vfimNZ9H/05e1A+
jvJ1N9Cfy/1fHJ7L+enP2YeK5npQ4BX9udwPxjH7WiX6c/aichxp9+ykP5f7
Q3N+D5xIf85+VI2jXuH69Odyv2jOz7QJ9Oe8/FeP48P8denP5f4xjkG/J6U/
5+W7Zhztk+2gP5f7yThO+vj5ufSmdhzV57+kP5f7S3O8/L6I/pz9qRtH50mj
6c/lfjOOvB+1pD/n5aqBeX47atKfy/1nHG32XqU/5+WgYRybo/z8PPF+NI6h
AxfTn7NXn8RR8TXoz+X+NI4L22vQn7Nfn8ZR839z6c/lftV8vYtd6M95uHwW
xx4XPz9PvH+N40SGX+jP+XY0iWO/zc/PE+9n4/i9xQz6c/auqbn+Pp9Afy73
t3GM6PEt/Tn71zyOj27NoT/n7W4Lc/2vX4D+nD1saX7/6+f053L/a16ftBPo
z9nH1nG4Tx6nP5f74Th+SfsF/Tl72TaOWhtX0J/L/XEcFcoH6M/Zz/bmfMw2
hP5c/j3iODZNSkl/zp5+Fce8wR3pz+X+2ZyPc9PQn7Ov38TRsFxb+nO5n45j
d5Oe9Ofsbcc4bvYrTH8u99emD3Nr05+zv53j2JWvIv25/HtJcfhuf0x/zh53
jePnrWPpz+X+O46t+36jP2efu8dxJHMn+nO5H4/jxl4n/Tl73TOOLN8OpD+X
+/M4Wq7fT3/OfveOY1u1bvTn8u8zxHFmyF9v/Xk/09fzSejP5f7dnO/7fqU/
Zy4HxLFy4Qz6c7mfj2NZ7wv05+z5t3HMP9KP/lzu783r0z8f/Tl7PiiObD0a
05/L3x9pztcJGejP2fPvzevRuCb9udz/x/HgUFv6c16uhsaxKtdi+nPZA3Hk
XPWA/pw9H27Or4ZH6M9lH8TRY/FY+nP2fGQc77RKS38uf19VHP56Mfpz9vyH
OCbdmU9/LvvBHH9p/qQ/5+EyJo5v3qSkP5c9EceYYVvpz9nzcXHsqz6b/lz2
RRyN0xSlP2fPJ8Rx7/fF9Ofy92OYr79mA/05ez4pjhTrttOfy/6Io/D4P+nP
2fMp5v3Z0YH+XPZIHKPjN+nP2fNpcRT4wEV/LvskjnFLc9Cfs+cz4vgr3oz+
XDxuHD1flaU/Z89nxXHshyf057JfTD8TStKfs+dz4lg8rhX9ueyZONZ+/xH9
OXs+z7wfTfvQn8u+iaNG3r/oz9nzH+MYkPcB/bn8vLC5frQ9TX/Oni80148P
i9Cfy/6JY2zy9+nP2fMl5vrzawv6c9lDcXyRLzn9OXu+LI7XwX/oz2UfxfHi
3YL05+z5ijje/3cM/bn8fJL5fv0+pD9nz1eZr9fVSX8u+8ncr718QX/OnK/5
73g4T38ue8r0++PD9Ofs+U/m/uz9TvTnsq/M9x95kv6cPV9v3r8uw+nP5f+f
xvFlk6H05+z5z6aPB8rQn8v+MvdPO8fTn/NyujGOH2ocpj+XPRbH8Out6c/Z
881xHO28j/5c9pnpeZWH9Ofs+a9xTK95hP5c9po5vyoUoj9nz7ea83fzMvpz
2W9xVHk6jv6ch/M2c/5cCdOfy54z5/PLp/Tn7PkOc/9c8CX9uew7835c7Ux/
zp7viqPqvD7057L34uiU9yr9OXu+J47udXPQn8v+i+O9zQPoz/nl9saR4cIe
+nPZg+b8OPQ9/Tl7vj+OTOnu0Z/LPoyj34q99Ofs+YE4HEPH0p/LXjTH3y91
6c/Z80NxvEq9gf5c9qO5H8n7iv6cPT9i7p/u/Et/Lnsyjoff+unP2fPj5vpQ
NgP9uexLcz2rtoX+nD3/y7z+7c7Sn8veNPff51305+z5qThypyxEfy7709w/
jHhMf86enzH7qUsJ+nPZo+Z+ZnRf+nP2/Fwc627Poj+XfRrHwBJ36c/Z8wvm
+Ez3Hf257NU4Drb5nP6cPb9kXp8pc+jPZb/G0bR0Qfpz9vyKuT/vu5X+XPas
OR86LKI/Z86vmfuR1Q76c9m3cVT+bSj9OXt+I47MPRbTn8veNfdnQ5vTn7Pn
t8z3P/oR/bns3zgmXFxNf87L/Z04itd6n/5c9rD580W99Oe8nN6LI8+UZ/Tn
so9NTzt0pj9nzx+Y62Pm0/TnspfN8fEV6M/Z84fm+tvse/pz2c/m+R+rQX/O
0+0f8/USLtCfy54297+L0tOf83D+11w/3+Pn54n7Oo7A+hr05+z50zisVDvo
z2Vvm54NBv05e/48jjmXS9Cfy/4218uXK+nP+XRfmvuxu5/Tn8seN/enw/n5
+a/8cq/N4zk0XPlzC0lWvAj5D7zcIvvcwpuxXejPZZ9beDhT/LnscwsnZtyn
P5d9buFpC/797aVkn1v4+mv5989ln1tId78z/bnscwt5/jpHfy773Hx/TKI/
l31uoU/oAf257HML9T67Qn8u+9xC7T+z0Z/LPreQffuH9Oeyzy00XlqD/lz2
uYUNhV//9/m5/PsQMQs7hq+lP5d9bmHq2FH057LPLXwy+mf6c9nnFqbPCNGf
yz630G3BUPpz2ecWGi3uQX8u+9zCgyHT6c9ln1vovqAo/bnscwt1OqSjP5d9
br6f+yf6c9nnFvovf0h/LvvcQu8RHenPZZ9b+C11V/pz2ecWSv96g/5c9rmF
FDVa0J/LPje/vqQ8/bnscwsJxWbRn8s+N+9v1xr057LPLdz+pQ/9uexzC2Nz
j6U/l31u4Y/Xo+jPZZ+b9ynlD/Tnss8tpP0lPf257HMLMxZUoj+XfW6hc+tB
9Oeyzy18/P0R+nPZ5xbObltKfy773MLNKhb9uexzC5efDqI/l31uoUqfNPTn
ss8tZJr1Df257HMLp1qspD+XfW6hSLUp9Oeyzy0s6DiI/lz2uYUMe5vTn8s+
txAqu5P+XPa5hSmPj9Gfyz630KJ6C/pz2efm/c5/n/5c9rmFX3KOoT+XfW7h
72/T0J/LPrfwztcx+nPZ5xYOvjeZ/lz2uYVD8Tn057LPLTQ48Af9uexzC4tb
f01/LvvcwrFPV9Cfyz630HxjC/pz2efm+Cn4Af257HPzfn0whf5c9rmFS87N
9Oeyzy0Um7GE/lz2uYWWLn5+nvjzkub4GJuU/lz2uYWRD/+lP5d9bt6/pN3o
z2WfW1j193r6c9nnFmp6KtCfyz63kPRgVvpz2efm9at3kP5c9rmFvVNz0J/L
PjfHS6ap9Oeyzy0MbfeU/lz2uXn8X0ygP5d9bn79Qhn6c9nnFhZlqUh/Lvvc
QtFqX9Kfyz63kHnTS/pz2efmeJ+5kf5c9rmFb+s/pj+XfW4hcqsr/bnsc3M8
dJtAfy773ELK+dnpz2WfWxjsnUB/LvvcHA+jt9Gfyz431ytHNvpz2efm+lxh
N/257HNzvt7OQ38u+9xC4c796c9ln1vodLAV/bnsc3N9WpmV/lz2uYXU/4ym
P5d9bqFnkjj9uexzC+7Ms+jPZZ+b8+HJCfpz+TzKHJ9Lr9Kfyz630LDbaPpz
2ecWllwoSX8u+9zC98nv0Z/LPrcwoGYJ+nPZ5xYGJbShP5d9bmH/qNr057LP
LYTvdqE/l31uocDk5/Tnss8tNJk4n/5c9rmFQn9cpT+XfW5hSMmD9Oeyzy2U
75SB/lz2uYXAvLL057LPLYxwl6c/l31uHl/0Bv257HPz/mwaT38u+9zCV/tb
05/LPjfn5+tc9Oeyz831rkoT+nPZ5xZiWXLTn8s+N8fDyh7057LPLbx4eIr+
XPa56ZU1nf5c9rmF9n12vPXn/cz1PIdFfy773EKNjf/Sn8s+N71ZvID+XPa5
hU19Lfpz2efm+vboHP257HMLj5J3pz+XfW7hdR8//bnscwvXP+1Cfy773EKJ
le3pz2Wfm69fvxH9uexzC7cKdqI/l31uYWntpfTnss/N9fT2Vvpz2ecWhv9Q
lP5c9rk5vj/4nP5c9rmFZJ9XpT+XfW6uL87z9Oeyz839w/bt9Oeyzy20fdiF
/lz2uYU/xxSnP5d9bmFmuxz057LPLXwTz0Z/LvvcQuVzt+nPZZ+b49H/kv5c
9rkF/7i19Oeyz02PPilHfy773EL+gQ3oz2WfW8ji4efn0vNp5v05sJD+XPa5
hX9PXaA/l31u7me6laI/l31uYe6eJvTnss/N9ahwbfpz2efm+n/7e/pz2efm
el32Dv257HMLXSoeoj+XfW7h97Qv6c9ln5s+9J1Ffy773Hy/NF/Qn8s+tzAu
Yz36c9nnFh5Pfv3f5+eJPz9sjpcTdenPZZ+b6+ODX5u/9UHm+6d6l/5c9rmF
SZlW0p/LPjfv38HS9Oeyz83xXt5Jfy773IKr2yT6c9nnFu58l5b+XPa5hTOZ
stKfyz63YDv4+XnizyNb2JYO9Oeyzy0cLreR/lz2ubm+VhxGfy773Jy/A4bT
n8s+t5AtjU1/Lvvc9KjbNfpz2ecWcg2sQn8u+9xCcvsF/bnscwvzimelP5d9
bvqwugf9uexzy3QzJf257HMLuYvOpD+XfW6hw/yM9Oeyzy1U3VCI/lz2uXm+
8cv057LPTf+OL6M/l31ueh+bSH8u+9yCdSMl/bnsc3M8vslJfy773BxfP5Wh
P5d9bvrSsRL9uexzCxn/WUJ/LvvcnN/DatGfyz4337/9DPpz2efmfuHvjvTn
ss8tFDyRh/5c9rnp4fer6M9ln5v+NKxJfy773MKaPVfpz2Wfm35v201/Lvvc
nK/H/qQ/l31uzscOVenPZZ+b+/FsyejPZZ9buHihJ/257HMLfSN16M9ln1to
c/MO/bnscwtrF6WiP5d9bu5XVuelP5d9bu7n/nDQn8s+N3un6nn6c9nnFlrX
nUF/LvvcHB+Px9Kfyz63cPyzCfTnss/N+Zfwiv5c9rn5b99s+nPZ5+Z6eOwM
/bnsc3N/c344/bnscwube8Xoz2Wfm/6l/JD+nD2/Zu6XGv9Afy773MLpOsfp
z2WfW1g+sA/9uexzC/dSdKQ/l31u9uCbdPTnss8tvOvuRn8u+9xCuTu36M9l
n1v4bMJX9Oeyz835ZPWlP5d9bl6vn5LRn8s+N8fzB2voz2WfW/jyyMf057LP
zfFQdCz9uexzc/3Y3YL+XPa56fHQpvTnss/N9abaVPpz2ecWri2fS38u+9wc
Pzkm0J/LPjf3Qzni9Oeyzy1UjOSnP5d9bqFkvnn057LPLfzoGkF/Lvvc3I+8
nEJ/Lvvcwpxlb+b958dln1vAjq+VP7fROPYe/bnscxvVul+mP5d9buOldZX+
XPa5jc8Cj+jPZZ+b/17egP5c9rmNUW0v0p/LPrfR+fdL9Oeyz22M/TAf/bns
cxvu0dnpz2Wf2zheejH9uexzG4E7CfTnss9t5IhVpz+XB2jj58A2+nPZ5zaS
hprQn8s+t5HJPYX+XPa5jV8mNKU/l31uo7erMP257HMbc9+x6M9ln9sol9CB
/lz2uY3K0z+lP5d9buODOR/Tn8s+t9EPHenPZZ/baLGsAP257HMbd1KuoD+X
fW7DOaEz/bnscxurHk6nP5d9buPwnN/oz2Wfm9d7ylP6c9nnNlbmvEx/Lvvc
Ru6bM+nPZZ/b+K3LQfpz2efm9fxyEv257HMbqfJNpz+XfW4jw24P/bnscxuD
lvWgP5d9bmPr0sz057LPbaRctYr+XPa5jYuTKtOfyz63Ucc7nf5c9rl5vXMf
pz+XfW7j06Vz6c9ln9soXi4//bnscxs1f843+f///o6cNvKNPUB/LvvcRqkb
6+jPZZ/baJ45Gf257HMbq4+Opz+XfW7j9hdN6c9ln9uocTkL/bnscxszD/vo
z2Wf2xjx1xL6c9nn5v0YXIj+XPa5jS/SVKI/l31u400JJ/257HMb/Ve/oj+X
fW6+X8a69Oeyz83jOTSF/lz2uY0ztS7Tn8s+t/G81Eb6c9nn5v1/moP+XPa5
jclVfqE/l33+3/vZgv5c9rn5/n0W05/LPrcRGdWL/lz2uY33XlWhP5d9buOT
qk76c9nnNpZNdNKfyz63MatENvpz2ec2+gzbS38u+9zGsxbr6c9ln9sY9m8+
+nPZ5+b4qvSS/lz2uTnfX1SkP5d9buP98zvoz2Wf21gyZQL9uexzG+lq1KM/
l31uo2oRm/5c9rmNY1Xr0J/LPjfXrzMJ9Oeyz23szbOd/lz2uY2MmSrRn8s+
t/Hd7y/oz2Wfm9fz4kL6c9nnNoav/4H+XPa5OV67taA/l31uY9e1GvTnss9t
NLt7hf5c9rk5HvPmpj+XfW6j54JF9Oeyz20UzsjPzxP3uY1Dt6rTn8s+N9ej
D+fQn8s+t7EuwM/PE/e5eX45O9Ofyz63cbnqz/Tnss9tXCvxB/257HMbt8ZM
pz+XfW5jZ1Z+fp64z238tXAg/bnsc3O9TcnPzxP3uXl86/LRn8s+N8dLk2f0
57LPzfXj23H057LPzfUfx+jPZZ/b+H7I5/Tnss9tNMm6nP5c9rmNGWt99Oey
z200mDKY/lx+3tTGt6EU9Oeyz21cf/kN/bnscxt/vpua/lz2uTletrSmP5d9
biPFue7057LPbUx/U5D+XPa5Of8z1aI/l31uo8q68vTnss9tvPi6If257HNz
fFYeQ38u+9zGtAa/0p/LPjfn25oO9Oeyz21s+sRBfy773BwP7wygP5d9bq5v
VffRn8s+t5H5ahf6c9nnNnZnPPHWn/cz1/9eb1yN/n+fm/Op7Rb6c9nnNupX
nk5/Lvvcxr305+nPZZ/bGNyjL/257HMblXLkpT+XfW6uX1k+pT+XfW7+fLn0
9Oeyz20MiNWgP5d9bvowqA39uexzc/5cXUh/LvvcxpY29+nPZZ+b/052mP5c
9rm5frUeQ38u+9zGqWz/oz+XfW7jh5RR+nPZ5+b9XzOP/lz2uY0K1/fRn8s+
Nz3al4L+XPa5OZ8++Y3+XPa5jVrpZ9Gfyz63sf5hYfpz2efm/Z26iP5c9rl5
f0aupz+XfW7DO24b/bnsc3N/02U//bnsc3M/sOgb+nPZ5+Z+5sl1+nPZ5zY2
ZHLSn8s+t+GZnJ3+XPa5jSJJmtKfyz63sf9+Gfpz2efmejXoX/pz2efm9QuV
oD+XfW7jyqiW9Oeyz839yKAG9Oeyz00/m/WmP5d9bq7fBU/Qn8s+N/0vcp/+
XPa5uZ/ocor+XPa56X/twvTnss9tPMiak/5c9rmNYkea05/LPje/v+I79Oey
z837mekR/bnsc3M/VrgA/bnscxt3k/Hz88R9bqPV3HL057LPbTSc7qA/l31u
o31mfn6euM9ttK50jv5c9rnp2ZBD9Oeyz83r93lH+nPZ5zZmb/+L/lz2ubne
rBhGfy773Eab6UPoz2Wf21gT5efnifvcxkM/Pz9P3Oc23h1/iP5c9rl5f7u3
oj+XfW7e/8he+nPZ5+b6cvMB/bnscxufPz5Efy773EbWRwXoz2Wfm+P7q6X0
57LPzf33yrH057LPzf3gnBD9uexzcz3Y+oT+XPa5OT8dL+jPZZ/bKLShE/25
7HMbVu/e9Oeyz831J36F/lz2ubk/KZad/lz2uXl9F/WnP5d9biPPkd3057LP
bZz/YzD9uexz836mu0t/Lvvc3F+t+4P+XPa56cnEMfTnss9Nv/6sQ38u+9yc
D4XX05/LPrexufZL+nPZ5zaGJuXn54n73Lwea3z057LPbdzvlp7+XPa5jYJD
NtOfyz630XfFGfpz2efm/cvGz88T97m5frcuSH8u+9zcv135h/5c9rk5fo8U
pz+XfW7j4OM+9Oeyz831tD4/P0/c5za+SX+H/lz2uY2w/S39uexzG7+3/oz+
XPa5jR4/zqY/l31uzudPCtCfyz634VvwG/257HMbFRcspD+XfW6jxD9J6M9l
n9sYGOfn54n73JzPJxbRn8s+t5H232b057LPbTypys/PE/e5ub9qxc/PE/e5
6fvVnPTnss/NXjrtoT9nz+/ZGFeRn58n7nMb8+50oj+XfW6O119O0Z/LPrdx
Oi0/P0/c5zaW5ubn54n73EbeTfz8PHGfm9crGT8/T9znNtbu5OfnifvcnD9N
xJ/LPrfRtXFN+nPZ5+b5P+Xn54n73NzvTxV/Lvvc7OlcpejPZZ+b+7HXa+jP
ZZ+b622jZvTnss/N4ytXkf5c9rmNBY+mK3+eAJ+/8Nb//v1z2ecJGBH+gv5c
9nkCrIGt6c9lnyfgwtyb9OeyzxMw5E0Z+nPZ5wn4znuc/lz2eQKiNTrQn8s+
T8ALx2n6c9nnCfgp/zj6c9nnCah96y79uezzBGTPeIn+XPZ5AnJ2zUp/Ljcc
5nWtXZb+XPZ5AuqnrUZ/Lvs8AbtHvaA/l32egH/2rKI/l32egPs/Dac/l32e
gNTJNtCfy+1fAp4lDdKfyz5PQIf4EPpz2efm1z3d6c9lnycg/19T6c9lnyeg
1Y3C9OeyzxPwaP7/6M9lnyf8H1N3GSXV1XULGCdAsNRxK9zdnYm7W3B3d4dA
cG/c3d2DS3B3d7fg7ne959zxMX/W6O6qU3uvvfaaI+MJWJVmg+/Pg3wu63/o
le/Pg3weQslpHX1/HuTzEMrbXX1/HuTzEKatfej78yCfh5A/axPfnwf5PITc
A4v6/jzI5yE8jDrb9+dBPg9hQbZyvj8P8nkIG8f39f15kM9DOBtpvO/Pg3we
woAjY3x/HuTzEPLdGOP78yCfh3C6eyLfnwf5XF7XK+n78yCfh5DeGuz78yCf
hzA9y1nfnwf5PIRlzVf4/jzI5yEUexLf9+dBPpfnGTvY9+dBPpfX8Rzfnwf5
PIQiaTr4/jzI5yFMebra9+dBPg9h6tGpvj8P8rms/9NBvj8P8nkIZ/I28f15
kM9DaLlqv+/Pg3wuz1fzvO/Pg3weQtqVTXx/HuRzqYcRz31/HuRzed13nO/P
g3wewvtTtu/Pg3wewp2NcX1/HuRzqZfmU3x/HuTzEPKUmuv78yCfhzA58hHf
nwf5PIS9k9r5/jzI5yEc/XuV78+DfB5CgWtNfH8e5PMQBlbI7fvzIJ+HcLL8
VN+fB/k8hL8SbPf9eZDPZf8WLfP9eZDPQ8gYLez78yCfh1A3IuT78yCfh1Dz
+Xvfnwf5PITtv3f3/XmQz0MY+XCz78+DfB5C9o/FfH8e5HPpR7tT+P48yOch
7C50yvfnQT4P4f6gNL4/D/J5CL/Hme778yCfh3Cuwkffnwf5PIQ5hSf5/jzI
59KPdhXy/XmQz0OoELmE78+DfB5CtORtfX8e5PMQzIivvj8P8nkIqTpu8/15
kM+lXpK/8/15kM+lH27u5vvzIJ9L/yo8yffnQT4PIVKb1L4/D/J5CMuPTvT9
eZDPQ+ha+V/fnwf5PIRme1L6/jzI5yE8iHrI9+dBPg9BX5TR9+dBPg9hbdq/
fH8e5PMQ8g5q7vvzIJ/L+jZK4fvzIJ/L884f5/vzIJ+HgJXxfH8e5PMQkp+c
7fvzIJ/L78+66PvzIJ+HsL7ifd+fB/k8hPnmON+fB/lc6qN/ft+fB/k8hCUb
/vP9eZDPQ4j/NK/vz4N8HsKI5S18fx7kc+l/ySr5/jzI5yFE6d/V9+dBPg/h
eqrPvj8P8nkItZIt9P15kM9D2FL1vu/Pg3wewqSDJ31/HuRzuc8+J/L9eZDP
Q8iZsrDvz4N8HkLFwUV9fx7k8xDujXro+/Mgn0t95pro+/Mgn4cQu0QL358H
+TyE513T+/48yOchlNhT3/fnQT4PYenU9L4/D/J5COcT9fT9eZDPQ/jZ4Irv
z4N8Luer7wzfnwf5PISnj/b98ud/hZBpQnzfnwf5XO7TRO99fx7k8xBSx13s
+/Mgn8v73Y7v+/Mgn8vzV77h+/Mgn0v/6dLd9+dBPg8hfCWG78+DfB7Co01d
fH8e5PMQEsdo4/vzIJ9LvSyv5fvzIJ+HsHBoJ9+fB/k8hBrzl/v+PMjnIUTP
vcf350E+DyHZ9Zy+Pw/yeQjHB9Xz/XmQz0NYvaS078+DfC77VfKG78+DfC7r
F3Of78+DfC7vl62r78+DfB7CzLN5fH8e5PMQhixP7fvzIJ+H0KVsSt+fB/k8
hA7GU9+fB/lc1g9ffH8e5PMQ+h9d7/vzIJ9LPx5b2PfnQT4PYd7M6r4/D/J5
COvcZr4/D/K59J9HS3x/HuTzEP59fcv350E+l3oZU8D350E+D+Gfmw18fx7k
8xD2lKnk+/Mgn8t6/Rjq+/Mgn4eQsvoz358H+Vz2t9Zp358H+VzOS6avvj8P
8nkIpcfO8f15kM/l+dI39P15kM/lPshS1ffnQT4P4diS774/D/J5CKEHVXx/
HuTzEBp929X0179PKf04pen78yCfy3pnXOP78yCfh9DzKnx/HuRzOe8VIvv+
PMjncv7+muL78yCfh/BxtOf78yCfy/yTLoXvz4N8HsKBmBt8fx7kc3neFAV9
fx7kc5nfSm/z/XmQz+W+LzfC9+dBPg+h25CRvj8P8nkIixIl9P15kM9D2Nn7
ge/Pg3wuvz+4tO/Pg3wu82joi+/Pg3wuz58/he/Pg3wu/XN9T9+fB/k8hNoJ
DN+fB/k8hBm5Zvv+PMjnIVRZmMT350E+D2Hx5uy+Pw/yeQiP4971/XmQz2X9
zq30/XmQz2X+/n2y78+DfB5C8/uG78+DfC7389e0vj8P8rmc97WFfH8e5HPZ
z3YlfX8e5PMQZr9Y7vvzIJ+HsHlwRd+fB/lc6q/5LN+fB/lc6vVpJ9+fB/k8
hB+nMvr+PMjnIfT6a63vz4N8Lvd9pQq+Pw/yeQhV9973/XmQz0Pos+2Q78+D
fB5CluMnfH8e5HOZb1uU8f15kM9DGBtWfH8e5PMQjlzs5fvzIJ/L/Rq1su/P
g3wu63Xzme/Pg3wur2dbvj8P8nkInZdk8v15kM9lHt0dyffnQT4PITNu+v48
yOdyX5Wc5fvzIJ/LeX083vfnQT6XflZlku/Pg3wu93+Mb74/D/K53Pdf5vj+
PMjnkmcOXfP9eZDPZX3OjvT9eZDPZR5oH8/350E+l/wQp6jvz4N8HkLTimN9
fx7k8xDuFrvg+/Mgn4cwsWtf358H+Vy+f+xOvj8P8rn0t9dh358H+Vzmm/fd
fH8e5PMQdtx44vvzIJ9LfxvazvfnQT6X/hmln+/Pg3wu67dY8f15kM9DKJVu
ve/Pg3wu52F/Td+fB/k8hKtpxvv+PMjnIXTf2tT350E+l/Peu5Hvz4N8HsK2
AtN9f+7//yE+SJ6cO9/350E+D6GHM8n350E+l3zlxPf9eZDPQxjzI7Pvz4N8
HsL4pAt8fx7k8xDivB/p+/Mgn0u/fz7N9+dBPg8h25wf//vv58F9/iOE/za3
J3+uIGXklOTPFWRvfZf8uYLfot0nf65gzNfX5M8VbJlbnfy5gj/q3SZ/riD5
pjvkzxV0zpWZ/LkCfVBq8ucKwtmXkT9XMPzWH+TPFTyKUo78uYL13/eSP1dQ
7md98ucK5nyaSv5cQe+RjcifKxj6KTv5cwWf4iQgfy6f91tH8ucKCkyoQ/5c
wYCpNcmfK3BydiJ/rqDOwqzkzxXkT7ia/LmCdaO7kD9XsPfpTPLnCorO2E3+
XEHOCR/Jnyt4nfwu+XMFV+/OJn8urzucIn+uYGKLKeTPFRjpZ5I/l5/vi0b+
XEHHZT3Jn0u9LEtG/lzB91VryZ/L804uRf5cQe5oM8mfK3ic/gL5cwWVVswn
f65ga5Es5M8V1N6amfy5ghMTTpI/V9D2ySby5wpSpVTInyuIe2ki+XMFt5s2
In8urx8mJ3+u4NTFGOTPFTS4sZz8uYLSo7OTP5f9T1qS/LmCg0Ujkz9X8GHr
N/LnCjqlrUL+XMGuq9PInytoVPsu+XPZ79LbyJ8rqBY1LflzBaVqbCV/rmBY
gabkzxWsHrmM/LmCbzN7kz9XcC1OGfLnCi7Wjkz+XOprSWTy5wrWlk9F/lxB
vVlHyZ8rWNZzM/lzBfFiZyF/rqBX3a/kzxXETFiS/LmCXO/3kz+Xelw3ify5
nMdmVcmfK3hfMSH5cwUNm1Umf66g/cc/yJ8rSFF2H/lzBS1Rkvy5gn9ufSF/
Luf15xLy5wrmXhxL/lzqfWpT8ueKzH8VyJ8rqBX/PvlzBQuqZiB/rqDVsaXk
z6VflixI/lzB7gTlyZ8ryNFmHvlz2d/MXcmfKzhWrQv5cwXPu20hfy773+II
+XPZn90zyZ8r+Fp1EvlzBYkuDSR/rkAtNc/350E+l/XSM5M/l/rf/5H8udTT
k/HkzxV4S8+RP1dQ4W098udyniesJH8u9ZckBvlzOU+xh/j+PMjn0p/6aeTP
FSTr1IH8uYIm4y3y57KfuVqQP5f9r9WD/Lk8T79s5M8VLF5Ugfy59IfcxXx/
Hvz/nhT8+6EG+XMFf58dR/5cQZe7O8mfS/2jI/lzBSOf/cz1y58rOLr0L/Ln
CpQ7R8mfKxjYpyv5c7k/dl4gf65gifEj6i9/riBP7J3kzxV8eTaD/LmCNAdv
kD9XUD9xP/LnCvafz0j+XEG7s7XJnyvY8DZM/lzBuz3lyJ/L5+dpSf5c3n/m
EvLnCkoke0H+XEGks6fJnyvomyqC/LmCKc8c8udSvzd/J3+uIF3vBeTPpV+u
O0b+XEGGaTr5cwWv0uwmfy73y9vZ5M8VxDmcg/y5grKdl5I/l+dvuZn8uYKn
Hf8lf67gePXj5M8VJBjdgfy5gp03HpI/l/krXmTy5wraDE5N/lzBuJcNyZ8r
0O4WIn8u92Xv9+TPFWyOmo/8uZzfkc3In8v9P7g6+XMFEU37kD+X+zj3RfLn
Ct4WfEH+XPrfX1fIn0v/apCD/LmCQrnSkj9XMP1hE/LnCirWV8mfS70XeEP+
XEG+qlnJnyuYnT2C/LmCbAeLkD+Xz9sXify5nL/yX8ify/p1vUH+XMGTLafJ
nysYMb4T+XO5j75cIn8u3/fxCPLnUl9XhpE/l/opV4j8uYK8ZSaSP1cw/upp
8ucyH8ZuTv5cQY9FR8ifK0g77CX5cwU/p50mfy7na3ZW8ucKbiVaQf5czk+L
8eTPFRRrGJv8uXz+kA/kz6UeTnwmf66gzIjO5M/l/q/Wh/y59OOXd8mfK3AT
pSZ/Lv1g0l/kzxXYBw+RP5f+vH8I+XOZ9xP9R/5ckaxyhPy5gocLI8ifK3h5
tzL5cwXdKm8mfy7nrctX8ucyH+V7T/5c7pu7McifKyi5OhH5cwU4sIP8udwf
b66RP5f96hSF/LmCRVuzkT9XcCPvO/LnUl+Z85E/V5C6Vj/y5wqi/TuH/Lms
Z/Rn5M9lno76N/lzyVMt6pE/l/tg/Vzy53Ifds1K/lxB5ZO7yZ8rSHJ9ie/P
g3yuYGGOSOTPpX4aDCd/rqB/9mXkz+W8NWxC/lw+/0AN8ucy775YR/5c6qln
OvLnCqL29f/7+f/P55LnPn4ify712KwL+XMFMSpcJX8u99OpguTPFZz+MpT8
uZz3+ezPpd519udy/94L/HmQzxV0ncL+XPJs9ErkzxX8uHCQ/Lmsx5rC5M8l
f/YA+XMFf/3cTP5c5pWjzcmfy7z2qQL5c5kv4q8hf64iRt+3XRL+nz9XEX1k
OfLnKqyW9cifq6i1/B75cxXDp+Ujf66i0qyz5M9VrFzTjvy5im7pLpE/V6Gn
Gkf+XEWfI8/In6uo+OgW+XMVfyZKTv5cRZHbIH+uYsb40uTPVSR7/In8uYo2
MdeQP1cx7vJw8ucqok7bTP5cRc+Rv5E/l9/vOZT8uYqtDbuTP1cxLcV08ufy
96lzkD9XseGKQ/5cReJK68ifq9h++wX5cxVZF7Unf67iq9mZ/LmKuPPvkz9X
0V9vRP5cRbmahcmfqzh7Ygb5cxVtX5cmf65iVKs+5M9VeGfHkT9XUWziaPLn
sl/zRpM/VzE6e5j8uYr4Wgny5ypeHf2b/LmKR9dPkz9XMSDOcvLnUj9D4pE/
V3EixSDy5yoazbHIn6tot7Ed+XMVDdqtIn8u+1tyCvlzFbsa/k3+XMWIlY3I
n6s4o+8jf67iwM6z5M9VfI/VmPy5iiF3n5E/V1Ho1Bjy5yoi2xb5cxWbPsch
f64i5uJJ5M9VLBswm/y5iitZD5E/V3Frbxvy5/J8y1aQP1fhfm1E/lxFqZY5
yZ/LejeaTP5cRQpvK/lzOS+rlpA/l/qL5pE/V5F27B/kz1WkefyO/LmKiGjd
yJ+raHVtE/lzFeEnRcmfq/i5Kjn5cxWH0p8kfy4/b5ua/LmK/K+nkj+X75v1
A/lz6W9JJ5I/VzFxBsifq/hwrRj5c9nvb63Jn8v5avaF/LmKkkW2kj+Xz3v/
hvy5ilh/dyV/ruJGnInkz1U8y5KK/LmKU2MmkD9XcSm0l/y5it/6pyB/ruL4
7gPkz1UUr5eB/LmKlHf7kT9XESlXM/Lnst6h5OTPVbyvOJb8uZyPP+OSP1dR
tPss8ufyPEUvkD+X9Xx3l/y5nOdtY8ifq/jdy0f+XMW+Cs/In6uY+Xce8ucq
RhZqTv5cxd4tFcify34l6OL78yCfq6iw5SP5cxWV180nf64ix6275M9VzC5/
gvy53Ef9w+TPVdRfDvLnsv8xipA/V5E3zgPfnwf5XMXdjePJn6uYv6cZ+XMV
qZ+nJX8u5yV7PfLnKvLESUf+XO7DiO7kz1V8PHmJ/LmK2E+m+f48+P85qxhU
6V/y59LvvsQlfy71Ovgt+XMVT9ovJH8u+4V45M/lPlh7jfy5ik6nu5I/V5El
a3Ty5yqux+1M/lyet3Yr8ufy+T/+JH+uovyVDuTPVbx9vZT8udTTkF3kz1Ws
TZmD/LmKaifrkD9XketlSfLnKu6Mvkb+XOqrzF7y5ypOd+1M/lxFnT9ykz+X
/X+ckvy59L9hycmfy7xT+TH5cxVTenwify7rG2kd+XO5n/aD/Ln0983VyJ/L
/Z6jKflzFYt/LCZ/ruLv326RP1cxZmF+8udynt7WJ3+u4l39iuTPpd7+GEr+
XMX6Fk/Jn8vvtz5F/lzFokJfyJ9Lv54zm/y5itr5GpA/V7EbVcify3ps+kb+
XIXzpjL5cxWrfttF/lzmtSwG+XOplzyryZ9LPdwvSP5c7tOakcifS30On0z+
XMXnSS75c1mvrMnJn8t+xltP/lzF0XQFyJ/L/FNhK/lzFXUrDyd/Lvs/YgT5
cxVmsgTkz1VM6nef/LnMe0NLkT+X+UT9TP5c7psCycmfq0iyoQf5cxVlEujk
z1X8yDmL/LmKdAsSkz+X87cxG/lz+fw4d8ifq0h+ZgX5cxV9Y00ify71cVsn
fy7358c05M9VFFwJ8udyP7QsQf5cRbwny8ifq9jcvwL5c5mXG8wkfy79515H
8ucqdh7OQP5cxfkea8ify/1Uqjz5c7lPt9wjfy7z1LqD5M9VJNh3nPy59Nv6
pcmfy/ynhsify/k73pP8uYoFnyqSP5fzcu4p+XOZzyaY5M9lXp6Zkfy5/HzD
z6e//Ln0r2w3yJ+rKJBvJvlzFZ2vR5A/V7Gj+ETy55LHvnwhf65izfPZ5M9l
/bZdJX+u4vX+EeTPVaxoGJf8ufTL74XJn6sYXHgM+XOZX3KeJ38u90PzPuTP
pZ6/dSB/LvVxzyN/riLDo67kz1WkOvWY/Ll8n55tfX8e5HOZX9/2IX+uoveU
EPlzFV3cdeTP5ftu+pP8ucwzdgT5czn/y5uQP5fv26Yh+XPJQxmn+f48yOdy
niLmkT+X+yPuRPLnKlrGjUf+XObTl5nIn6u4pswnf66i2cMR5M8l792aSv5c
9nfcd9+f+/f5D8lPS9uRP9fw4E1y8ucaQnXvkD/XEPPDXfLnGjY+f0X+XEP0
CdXIn2sYXvEW+XMNR5bcJn+uoWTaTOTPNXjdU5E/11A71VLy5xp+nk1I/lzD
lA9lyJ9rmPt6D/lzDX3e1iN/riHB8ynkzzVk+ash+XMNg59nI3+uoXDk+OTP
NfT/0Z78uYaUw2uTP9ewc8yf5M81rE7fkfy5huIzspA/1+S+XUX+XEO1wZ3J
n2s4cHcG+XMNKybsIn8u6z3qA/lzeZ7wHfLn8v2vzyJ/ruFJq5Pkz2V/G08m
f64hdqoZ5M81fN8Vlfy5hsqLepA/l+dflJT8uYZLy9eQP9cwZ0JJ8ucajCgz
yJ9rKJPuPPlzDfmXzyN/riFjkczkzzXU35qJ/LmGhhNPkD/XMOHpRvLnGu6l
CpE/l7+/MoH8uYYTLRqSP9fQ6mky8ucaPl2NTv5cQ5q7y8ifa9gyPhv5c6nH
1CXIn0s9lYlE/lyed+9X8ucaRmatTP5cw7B7U8mfa7jd5A75c3m+qlvJn2so
FC8N+XMNrxttIX+u4b/STcifazg7dSn5c1mf5b3In2sYYpUmf66hVOtI5M81
ZNgSify5hq31U5I/15B9zRHy51IvozaRP5d+4GYmf67hWMcv5M9lv1OUIH+u
IV+c/eTPNXQ+PJH8uYbF/aqQP9cwuWUC8ucaHvavRP5cw9WEf5A/19Cz+b/k
z+X96pQgf67hzrfP5M81VHeXkD+X8/h+DPlzDUW2NCF/rmFbqvLkz6XfZb5H
/lzDqO7pyZ9rqPByCflzOY9tC5A/17AkRzny5xoST5hL/lz6X80u5M817OvX
mfy5hldz/yF/riHOxMPkzzWkezaD/LmG1AMnkj+X+o0+kPy5htY95pI/1zC+
R0by5xrOpfxA/lzOf4UI8ucapsc/S/5cnqduXfLn8v4/l5M/15AzIhr5czlf
vQeRP9dQ/rVC/lz66aN25M/lPMQyyZ9rCK9vRv5cw7KL3cifa3j7LQv5cw3r
UpQnf66h2M4ivj8P8rnUT5/q5M81XK41lvy5BrTdQf5cw+4T7cmfayjb+0eu
X/5cQ7y8/cmfS/12PUL+XMOZUBffnwf5XPpbjfPkzzX8sekb+XMNuZZtJ3+u
Ydzo6eTP5b5tdZ38uZzHw33In2vI1i8D+XMNg/rVIn8u53O+R/5cQ71OZcmf
y368aE7+XOqtymLy5zIf3PiP/LmGvGNOkT/X0O3RWPLnGiqussmfaxgxPw75
cw1tC88nf66hQe+j5M81RGumkT/XMPHLTvLncl8fnEX+XMOfs7KTP9fQqcwS
8ucaShTdRP5cw9EKe8mfy3nPeYz8uYbNHdqTP5f7cP8D8ucaVn78qf/y53Ke
OqYify797WYD8uey/+dB/lzD1A7vyJ9rePY1D/lzDUWHNCV/Lq//rkb+XOaZ
Zr3Jn2t4lP8C+XMNqUo8J38u89GIy+TPNbRom538uYaIkmnIn2v4+Lkx+XMN
e7oq5M/lPq3xmvy5hgsdspA/l/2vNo78uYZITwqTP5f7+snPTr/8uYbe3T+T
P5f7e9518udyfz0+Rf5cw7f9Hcmfy3nLeIn8uYYYiUeQP5d5UR1G/lz2ZxTI
n8u8NHoC+XMNcROdJn8uzzOjKflzmYfyHyZ/LucpxQvy5xrmFzhF/lzu21JZ
yJ9r6HB2GflzuX8TRZA/13AqHIv8uYaWZd6TP9ewfOon8ucamtbpRP5c7sMM
vcmfy3qfukP+XMPd6KnIn0t/G9if/Ln0+60HyZ9Lf945mPy5zM+JnpE/l/rb
d5j8uZyX9ePIn0s9fahE/lxDirabyJ9LPU76Qv5czmOTd+TPNTgJY5A/17D0
Xpj8uYZKkXeQP9cQOfs18ucyf22PTP5cw8VY2cifazg0/i35c+mvY/OSP5f+
tasv+XMNSdPPIX+u4crjJ+TPNXR9N4D8uYaszeuSP5f5ddcc8uca3o3JQv5c
w9r3u8ifSz0mXEL+XEOinj8n/PLnUj9rh5E/l7w2YSn5c3me443Jn8t5K1CD
/Lmc3y7ryJ9Lf43L/lzDNI/9ucyniz+RP5fnvdWZ/LnkjXtXyJ9LPfcvSP5c
g3ZwKPlzyTvD2Z9rME325xoGRgr+/fMgn8s8cIr9uYaXKyqRP5f+s+EQ+XPp
n/uKkD/X8Ne/hcifa9gVaRv5c+mXuVqTP5f7bXUN358H+VyDHn8P+XMdVQ/k
TK39nz/XUTdmbvLnOvTyVcif66iw9gb5cx1RsuYgf67jStZT5M91xEzQ2vfn
/r+/GFPH2FrnyJ/ryO6MIn+uY9DSJ+TPdfy54gb5cx2NjyQhf66jZrsC5M91
7I5ekvy5job4QP5cx6GiK8mf64j3dQj5cx2XnU3kz3U8jhyT/LmOWXcHkz/X
0XJnV/LnOl53mUr+XEefVtnIn+toFtcmf65jaPc15M/l8z//R/5cx+/r2pI/
1zHV6Ej+XEeXCXfJn+tY97U++XPZ30wgf65jzZRp5M91pF5dkvy5jtqFe5M/
l/VeMJb8uY7I9UeRP9exseko8uc6ir51yZ/rKH6iGPlzHat6DyR/riPd0FPk
z+V51ywlfy77kywu+XMde3YOJH+u43lGk/y5jogCbcmf60jyZgX5c1n/A5PI
n0s9XB5A/lxHfrch+XMdmQfuJX+u42LiM+TPdRxs3pD8udR7nqfkz3UMTDSa
/Lku86FB/lxH3wKxyZ/rmHl/AvlzHfG3zSR/rkNpdoD8uY53z1uRP9ex9dQy
8uc63loNyZ/riPF3dvLnOtJ3m0j+XMf+tP+QP5fzvWkR+XMd+6K75M91vBmV
kPy5jg9335I/19HkWxfy5zqKnd5I/lxH9GtFyJ/L95mZjPy5juPmCfLnOowa
qcif62hzaQr5cx1Ntffkz3W0ijqB/Ln0s54FyZ/rmLG5KPlzHdPPtyJ/ruNH
ns/kz+X7qFvIn8v7739N/lz6V4Uu5M91jLkwnvy5jvOfU5A/l35ReTz5cx25
Luwmf65jef7k5M/lfPfeT/5cRyc9PflzHXOn9iV/LvX5rAn5cx059yclfy79
8edo8uc6Dkf9nfy5rGeimeTPpV89PUf+XEfXqXfIn+vIUGc0+XMdu3bkIX+u
4+6zJ+TPpf7c3OTP5X643JT8uZzHcuXJn+t4Mb8T+XP5fiU+kD/XUbbAPPLn
Oja1vEP+XNbz4jHy5zpC0T3y5zpGpi9I/lzHmSGFyJ/rmDb8nu/Pg3yu41am
CPLnOgrkaUr+XOqzSRry5zqs5XXIn+u41DcN+XNZ78jdyJ/r+JrvIvlzHceq
TvX9eZDPdUTdvof8uex/w9/Jn+uo+PQ1+XMd287OJ3+uY8i838mf67gZ7yr5
cx070nUhf66j2uiovj8P/j1lHbGadSR/LuuxrgX5czlvlWuQP9cRO2178uc6
5hRaQv5c6vP8DvLnOsp0zkb+XMcrvTb5cx0XcpQgfy7n79wV8uc6So3dTf5c
zuM/Hcmf68hYOSf5c/m8FCnIn+vovD8p+XMdG0Y9JH8u88HaD+TPZf9yriF/
riPu5wLkz3V0P1WV/LnMK+WbkD/XUVlbTP5c9i98k/y53Bfb8pE/l3nrt/rk
z3Vk7VKB/LmOicmHkD+X9ej9hPy51EPfk+TP5f6p/Jn8uY4pa2aRP5fzXKY+
+XOZFypUJn+uo/2+r+TP5Xl+ViJ/LvWq7iR/riNbAZ38uY4UxVaRP5fne1GA
/Ln0v0Y/V/3y57J/4yeRP5f7ZLZD/lzHszzJyJ/rCKvryJ/rOJslP/lz6S9V
t5A/12HXGEb+XMfiMcPJn8s8ljI++XMd3QbcI38u53d4SfLnOjz9E/lzHf8V
TEb+XMeKDd3Jn8v8lEAjfy73Tc6Z5M9lPpqfiPy5jkobspI/l34d6zb5c6m/
k8vJn8s8H2Mi+XOZX25o5M913HmTmvy5jvlLCpI/15GlSXHy5zqG31tK/lzH
3p7lyZ/rqFFrBvlz6Yc3OpA/1zFsb3ry5zpyd1xN/lzml0LlyJ/rGL32Lvlz
HV+WHiB/Lq+3HiN/Lv2zWiny57I/cf4gfy73z789yJ/L/fOiAvlzHTjyhPy5
3CfDDPLn0s/HZSB/rsNd+uPpL3+uY3Cq6+TPpX4zzSB/LvV/ehz5c8lHeSaQ
P5fz9vwz+XMd22/PIn+uY/KqK+TPZb75Zzj5cx2pqv5O/lzO56tC5M91rM02
mvy5jnupz5E/l/qq2Zv8ufz9i/bkz3U8Ou+SP5f743IX8ufS7/c8In/+v3zU
hvy5DvVBb/Ln8vfD/iB/Lusdby35cx1PFtcgfy71FHcc+XP5PjMakz+X/FKv
AflzmTcTTSV/Lv134Fzy5zqO/BhP/lzu1x+/kz+X++xORvLnMv/EmEf+XOrt
0nDy5zJfnp5C/lzmlYHffH8e5HOZ/6a3JX9uYOX9ZOTPDXwpf5v8uYEEj++Q
Pzdw99ZL8ucGag2uSv7cQOwiN8mfG+g+/Zbvz4N8biCpl5H8uYEMrVKSPzcw
z15C/txA34MJyJ8bqPC0NPlzA5Mf7CZ/bmDdo7rkzw2MuDPZ9+fj/Hxu4GWX
BuTPDYy+m5X8uYFJH+KSPzcQfteO/LkBvX8t8ucGIg2uQf7cQMlkHcifG8g1
PjP5cwOnfq4gf27gZ59O5M8NnLk6nfy5AWvUTvLnBq4Oek/+3EAT4zb5cwPJ
L84kfy7P1/QE+XMD0+tOIn9uIHrS6eTPDbTbFoX8uYE887qTPzfwcF4S8ucG
tixZTf5cPi+iBPlzA19/TiN/bmBjmnPkzw2kXzaX/LmBFYUzkT830GJrRvLn
Up8Tj5M/N7Dr2Qby5wYWpPmD/LmBzdfGkz+X32/dgPy5gU/Pk5I/N5DiVjTy
5/J5D5eSPzeQbmpW8ucG1mcsTv7cQOnKP9/88ueyn4e/kD83sDxvJfLnBv78
bwr5cwON290mf25gYb0t5M8NZDVTkz83MKvdP+TPDVSv0Zj8uYFvi5aQP5f6
29KT/LmBnKlLkT83sKfXz6+//LmBDod/Dvzlzw0c7JCC/Ln0h72HyZ8b+D57
I/lzA7EyZyJ/LudpyGfy5wbq5i1O/txAkcT7yJ8bqHFrAvlzAy0nVyZ/LvU5
MD75c6nfaRXJn8t5TJeQ/LmB0wP3kj838LhHcfLnBhJan8mfG+iadzH5cwM7
lDHkzw2UuNyY/LmBTaXKkT83kLfKXfLnBnpNT0f+3EDu0BLy5wbeRuQnf24g
ok5Z8ucG4m+bQ/7cwIQBncmfG9i9pBP5cwMfjm4mf27A232I/LmBsvoM8ufS
z9dMIH8u9Zd1APlzA/8umUP+3ED7K+nJn8v9MOId+XPZ341jyZ8bsLufJn9u
4OjB2uTPDbRuvYz8uYF+P6OQPzeg/TeQ/LmBjE1C5M+l39dpS/7cQI8BOvlz
AzHSNSV/LvdB5a7kz6U/9s5M/lz6xZKy5M8NbEdh8ucGRkapRv7cQKZ7o8mf
G4j7aRv5c+m3tduRP5fzE+c7+XMDVU70JX9uYEnsw+TPDSRb0cn350E+N4DX
Z8mfGxhQ6Sv5c6mvktvInxtImXEa+XMDY+NdI38u/bt9b/Ln8vkp05M/NzAj
TU3fnwf53EC0Si75cwNHkpYhf26g7fxm5M+l38ZaRP5c6m/KM/Lnsl+lT5I/
l/6zeAz5c1m/9pbvz/37fKyB881ikz83sCrWPPLnBloVO0L+XO7PLCr5c+kf
R3eQP5f9njqT/Ll8/07ZyJ8bmJZ0MflzA2XCG8mfyzyVfg/5cwMVjaPkzw3U
r9qO/LmBK8vvkz+X+/vOD/2XP5fnq5eS/LmB/Cfrkz+X5ztYkPy5gYtN35I/
N5DkXW7y59LPBjQhf26g04Cq5M8NPGvei/y5zDuFz5M/N1Cn/H/kz+U8TLxE
/tzAml7ZyJ8buP9navLnBmrGbUz+XO6zUSHy5wbcjq/InxvoODoz+XOpt65j
yZ8bOBmnMPlzA0p8/7+f//98bmDQ3E/kzw3cO3GN/Ln8XD9F/lz62ccO5M+l
HzW9SP5c+lXN4eTPDWSuNJT8uTzf8YLkz+W+OTWe/Ln0i6anyJ/LfJe+Cflz
uS8vHCR/bmDq/v/In8v8e+8E+XMDnd9lIn8u8/egpeTPDcy+PJb8ucwXN2OS
P5f+muAd+XO5z5p8JH9uYFiGjuTP5fvF7EX+3EDz1bfJn8s89CwF+XMDa9v1
I38u53flAfLn0q/+GUT+3MCtRE/Jn8t8efQQ+XMDO3ePJX9u4Pc4lcifG7g9
dCP5cwPHNn8mfy79fdRb8ucGLhWMTv7cwB9mmPy57H/+7eTPpd66XyV/bqBL
9Mjkz+V+rpWV/Lk8/5M35M+l//yXh/y5gddJ+pI/l/WfOpv8uYG5xx+TP5f5
48Ff5M8lPzStQ/5c5p1js8mfy/MuzUz+3EDI3UX+3MCPYovJn8vnbf8x4Zc/
l34XaRj5c7n/Xy0hfy79Nmdj8ufy+f9UJ38u98/XteTPDRSel5b8ueS/PdHI
n8vzVWd/Lu9XszP5c+l3Pa6QP5f+mZH9ufSXCPbnBsa1Z38u94XF/txATzcJ
+XPZn5jjyJ8b2F+5MvlzWY9xh8mfy3x9sSj5cwNLfy9C/lzqOfJO8ucG2ixu
R/5c6q9xfd+fB/lc7p90Z8ifm5j6psIN6//8uYlOg5KRPzfRI2tJ8ufyevMl
8ucmNh3PSP7cRP+jx8ifm/i7Q3Pfnwf53MTTQafIn5vonWAY+XMT84Y+In9u
onP7a+TPTQzslIj8uYkh3/KSPzfxvUcx8ucmNk996/vzIJ+bSDdoGflzE8vd
QeTPTeyYu4H8uYkWPaKTPzexvcwg8ucmUpldyJ+bqLFvMvlzE2NWZCF/biJl
IZP8uTzvrFXkz03EDD0jf27i647W5M9NlNbbkz838XzQbfLnJj7dqkv+3ET7
mAXIn5tY2HAK+XMT31oVJ39uIqfVi/y57G+XMeTPTRxLPZL8uYnPqUeSP5fn
X+eQPzcxclBR8ucmuqcbQP7cRN/MJ8mfm8hcZQn5c6mPvXHIn5vYU3UA+XOp
rz06+XMT+w63Jn9u4m3X5eTPTVwqPJH8uYnbFf4if24i8pj65M9NLPhvN/lz
+b6DT5E/NzH7QH3y5yZmRDwmf27iQseR5M9NWOs08ucm6vz9G/lzE8WSjid/
bmL4m+nkz000mbqP/Lm8n9WS/LmJXe+XkD83cT1PffLnJi7PzEr+3MSz4ePJ
n5voknsT+XMTS3YsIH9uYlIMh/y5iQMjEpA/l/q48Yb8uYmC7zqTP5fzcmAD
+XMT744XJn9u4tXIpOTPTVyJfpz8uYncSEn+XPZn52Ty51Kvn9+SP5f1vxdB
/lz6S/UC5M9NlIgoQv7cROuVLcmfm/gY/xP5cxPDHm0mfy79YMIr8udS/05n
8ueyn3MiyJ9L/e5JTv7chKFHkD+X+pm8i/y5ibLfkpI/NzEt5z7y5/L9T6cl
fy71UKEP+XMTY+c0Jn9uokLXJOTPTZxcNYr8uYnRa2KTPzcx+Mh08ufy/SLO
kj+XfpfvNvlzOd/fR5I/l/5TOzf5czlfwx6TPzexc3NO8ucmJrRvQv7cxJY7
Zcmfm3icrSP5c6mvS+/In5syn8whf24i17tb5M+lPuodJX9uYuUIh/y5fN7a
/OTPTUyMCfLnJj7EvEv+XOpz5Vjy5yaubWhM/tzEmmupyJ+biB6uTf5c7ttX
qcifm1jfsQv5c7kflp8nfy77sWcy+XPpj8l2kz+X8344Nvlz2e8Kr8ify99n
n0f+3EQ4Shzy5yZKtb1M/tzEz2GdyJ/Lffwosu/Pg3wu9bCrPflzqe+Yzcmf
S39dVI38uYndfdqSP5fzEbGI/LmJs4m3kz+Xv9+Vhfy59PuGNX1/HuRzExH9
ipE/N5HIvEz+3MTrszvJn5so+rk9+XPp5xHZyZ+bSNskGflz+b6RkpA/l35y
8L7vz5v6+dxE9SfvyJ/L/dJ2FflzE+vS5yd/buLu4yrkz6Vemzcmfy7Pk34R
+XMTZo4b5M9NtDydl/y59G+3HvlzE22HlSd/Lu+XazD5c6nP0Y/Jn0v9jD1B
/tzEuMafyJ/L+dw9k/y5Cad2PfLnJt7UrUT+3EShM1/In5so/Hsl8ucmqibe
Qf7cxOFSGvlzqbcKK8mfSz1/yk/+3ITb5seqX/5c+sH0ieTPTcRdbJM/N1G8
cFLy59Lv7LXkz01czZWP/LmJ8rX+IX8u92XtoeTPpb7HDyN/biKUNh75c6mH
QXfJn5vAqBLkz00cNz6SPzcRo1BS8ucmsm7sRv7cRIEEKvlzqb8cM8ifm3gx
N0z+XObZdVnIn8t8EfMW+XMTR44tI39uInHUCeTP5fevqOTPTWx7kYr8uYmo
CwqQPzfh1S9G/txElJtLyJ/LPNC5HPlzmceqTCd/Lvfbxfbkz01U2paO/LmJ
mS1XkT+X9cpdlvy5iQxL75A/N5F/7n7y53Le1h4lf26idtmS5M9NZIuSkPy5
iW5bupM/N3H+Xnny5yZG7HpM/lzWu69O/lzu28HpyZ/L65nfyZ/L/eNcI38u
65dsOvlzqbd9Y8mfm1iVfjz5c1mP25/In5s4eG4m+XO5b+deJn8u/XX5MPLn
JhYVj0P+XO6DuyB/LuctxSjy55LX7LPkz03kKNOL/Ln0l1vtyJ9LPz7okD83
UeZoZ/LnMu+sf0j+3MSd2q3Jn0t/u9iL/LnMC70Skj+X/fy5mvy5vN/U6uTP
pd/8GEP+XPZvVCPy5yaSV6hP/lz66x9TyJ9LP+w8h/y55KmXEeTP5b5/GYf8
uYmKZzOQP5d8+nEO+XPJM0eGkT83of47mfy5iVudv5I/N/FgZBvy5xZ6XExK
/tzCA9wif27BvXqb/LkF9ewL8ucWNnavQv7cwpjsN8ifW0gz+qbvz4N8biFG
wgzkzy0UqZuC/LmFZ/EWkz+38HNrfPLnFn6/WYr8uYWIK7vIn1t4fq0O+XML
v12c5PvzIJ9bWN+yPvlzC9MuZSF/buG/Z7+TP7ew/0lb8ufy+V1rkj+3UKp3
dfLnsn5We/LnFjIMz+T7c/8+12U9Py4nf25hTZeO5M8t3Dk7jfy5rOegHeTP
LWzo+478uYXFCW+RP7dw9tQM8ucW7PrHyZ9bSPHnRPLnFqJ508ifW7i7KTL5
cwspZ3Ujf26h/OzE5M8tzFq4ivy5hWZjipM/t3D/+1Ty5xaSpj5L/txC8qVz
yJ9bSF84I/lzC923ZiB/Lvs16Rj5cwsv/1tP/txCq3QJyZ9Lvd6MIH9uYUu7
+uTPLYx9nYT8uYXa96KSP7dw5tkS8ucWls7KQv7cwvnsxcify+fV/PHmlz+3
UPL0Z/LnFk4XqUj+3ELG95PJn0v9dr9F/tzCvRb/kD+3kDZZKvLnFir22kz+
3MLBxo3In1tIt2Ex+XML/x7sQf7cwoucJcmfWyg44sfXX/7cwj+Xfwz85c8t
XB2QnPy5JffWIfLnFtat20D+3MK4ohnJn1voM/0T+XP5ecVi5M8tVMr5L/lz
6Q8fxpM/t5BtdSXy5xYeTo9H/tzCj/UVyJ9b2FU8AflzWe/Ze8ifW8gyqRj5
cwslcn4if25hRs1F5M8tnMs6mvy5hSqfGpE/t7C5VVny5xZydL1D/txC+51p
yZ/L/uRcTP5c+sfmfOTPLQwaWIb8ufTPO7PJn8v6LetE/tzCvtMdyZ/L+X6/
ify5hVxPD5I/t9CtyHTy5xYmXh9P/tzCq4Z/kT+3kOzSbPLnFhrkSUf+XD7v
xRvy51I/5hjy5xZW3zxJ/lz6R6Za5M8tDLy0hPy5hSttI5M/l/2sM4D8ufSP
SwnJn8t5PdOa/LkF7bNK/lzuk0WNyZ9bKHaqM/lzC9W+ZCR/buFmqjLkzy0U
3w/y5xaGDKtC/lzqpfUo8ueyfgO3kj+30OhxG/LnFp5M/0r+3MLK+n3In1sY
POcg+XMLIwt3JH8u52HkGfLn/1v/z+TP5Tw92kL+3MKl01PIn1u4uP4K+XOp
P7UX+XM5L2fSkj+3cORiDd+fB/lc+sFPm/y5hTIXSpE/tzCnelPy5xau7VlA
/lzuh4pPyZ9bOBzjBPlz6RdNR5M/l36byfT9eZDPLTRJG4v8uXz/M3PIn1sY
Fv8w+XMLh36GyJ9b+DBtO/lzC2VbzyB/biFWyazkz+X8f13o+/Mgn8v6fFlP
/tzC3Di7yZ/Lffv5MPlzC2autuTP5ftF3CN/LvPJ0e/kz+W+L52C/LmFRTvr
+f48TzAg4OSWAuTP5fNqvyF/bqHlf7nIn8t57NOY/LmFtf2rkD+3kLplT/Ln
FmoWP0f+3ML8as/In8v6zLlI/txCzGFZyZ/L/dcyFflzC8cSNSJ/Lv1y/h/k
z2WeHPGS/LkFb3km8udSHxPHkD+3sCpDIfLnFhJk/0H+XPbjyEfy5xbCX66S
P5d5p/hJ8udyn6XuQP7cgj7jAvlzC7PHDyN/biHz6CHkzy1kilOQ/Ln09z/G
kz+X91txkvy5zDO7GpE/t/C2zQHy59I/Gj0jfy7zxbDj5M/l+8/JSP7cws7s
S8ify3qPG0P+XNZnVgzy59KPL7whf27hc8YP5M9l/o3Ugfy5haO3epA/t7Bj
9C3y5xYmn0lO/txCqtp9yZ9LP56zn/y5zDPr/iZ/LvWb+An5c1nvMwfJn1so
emIM+XMLOcMVyZ/L+Zm/gfy59OvLn8ify/2x8Q35c5nn2kUjf25hfHmP/Lnc
Tz23kT+X+tx2hfy5hXgVIpE/l/tweRby5zJv4Q35c3m/0nnIn1voOLQP+XPp
91Fnkz+X+lj7iPy53N+X+pM/l3mnSW3y5xZOXZpF/tzCjX8zkT+Xeim6k/y5
rHfvReTPLdT48Z38uZyPikPJn0s/L7+E/LmFxAsakT+XeTRTdfLncn8PWEv+
3ELv7GnJn1uI0iga+XMLf0Vnf26hzrlO5M/lfMZlf26h3u0C5M8l79Rlf25h
VHX25xbiuOzPJW/mYX8u9znGkT+XfPmlMvlzue/aHSF/Lv3zWTHy53I/1ihK
/lzOU7Q95M9lvtA6kT+XfuE2J39uoWHlu+TPbRRe0WJC+P/8uY1+n+OTP7dx
RslP/tzGrG1nyJ/baNAkNflzG+EGh8mf2/h0qjH5cxv5Vh8jf25jc9RB5M9t
5Gz2gPy5jd+yXiF/bsO1PfLnNlKPyE3+3Ma6Z4XJn9sY+OqV78+DfG5D3buY
/LmNfwoOIH9uo1ay9eTPbcx5EZX8uY1xGweSP7cxv0sn8uc2uiWcRP7cRo3/
Mvn+PMjnNqZ01cmf28iwfwX5cxuv0z4hfy7vf7gl+XMbG9W25M9lvbvdJH9u
4+O+2uTPbRS6mdf35/59HpbX6SaRP7cxKGVR8uc2XrzuQf7cxu1io8mf22j/
bjj5cxv6i+Hkz20saGeTP7exLG8R8uc27Bv9yZ/bWH7tOPlzG08+LCJ/bmNv
vdjkz23MeNaf/LmNdxU18uc2TlZuRf7cxvTPS8mf20iyZzz5cxunDvYjfy6/
/6Mu+XMbT6vvIn9u482TE+TPbZRPWo/8uY3oTx6SP7fx/d/h5M/l598U8uc2
4h6OQf7cxv6G48if27icZhr5cxtDj+4lf27DLN6c/LmNmfZi8ufyulZd8uc2
BmzOTP7cxl+zxpE/t/Gl+Aby5zaS759H/txG5Zg2+XM5X8Pikz+3Merya/Ln
NqL914n8udTn1vXkz22c2FWI/Ll8315JyJ9L/3l9lPy5jaKpU5A/t3FwwSTy
5zZeXn9D/txG+v3jyJ/bMLLlJ38u9d26MPlz6SeDWpA/t3Hj/gfy5zambd1E
/lzWq9FL8uc2ejzuSP7cxuMW48ify34MTUb+XM7/tbHkz+X5a+wkf27jzrYk
5M9tdHq7l/y5jX+HpyF/Luc5em/y5zZKVmlE/txGzRSJyZ/L59cZSf7cRrHa
scif25jaaRr5cxu9cp4hf24j3e2b5M9trJ89gvy5DeVLTvLn8jrZI/Ln0o8q
5iB/LvUTozH5cxtpupUhf27j/MH25M9trGj2lvy5jRx/ziZ/bmN1v5vkz+W+
eXiY/LmNvAls8uc2rmTNR/7cRplhBcif2ygx5Db5cxtHUo0hf26jdfpG5M9t
PKickvy5jYcTapI/t/GzUUry5zZe3elE/lz6jXGO/LmNbOkmkT+X+hq9k/y5
3JeZYpE/t1Fk4wvy5/J66hzy57I+jWKRP5d+fewi+XNZzwcdyJ/bGFwoEvlz
Oc9qO/LnNibVbUr+XOr9cxXy5zZanGxN/tzGzdsLyJ/baNh+K/lzG81jZyZ/
Lt9vRQ3fnwf5XM7zwSLkz22sqXeR/LmNkdoO8udyvvK0I38u9/+ZrOTPbUSd
n4T8uXx+vkTkz208i3TP9+dBPrcxPvFb8uc2sHAF+XM5f43ykj+X11GqkD+3
cax/I/Lncv8UW0j+3Ma1stfJn9uo+DCP78+DfP6/+agu+XOZF2aWI38u573s
IPLnsv5zH5E/t5Fr3nHy5zL/dflI/lz646kZ5M9tdG1Vl/y59Js2Fcmf24h/
6zP5cxsVzIrkz23MS7+d/Lk8XzWV/LmNC7VWkD+X/holP/lzqb+u38mfS30t
mED+3EbC1Rb5c/l5qSTkz6U/J1lD/tzG1QJ5yZ9L/dffTP7cxpgGQ8ify/NN
Hkr+3MbwDHHJn9vIOPQO+XO5b8cUJ38u86H1gfy5DatwEvLn0p82diV/biNT
AoX8uczPOaaTP7dxfI5H/lz6yZrM5M+lP0e/Sf7chnZkKflzOQ8/I8if21h5
QSF/bmPs05Tkz2Xen52f/LmNGLWKkj+30f3yYvLnMl+1LUv+XNar3DTy5/L7
p9qRP5f7YUNa8uey/w1Xkj+3ESVzGfLn0n/n3CZ/LvfTlH3kz2WeWnKE/Ln0
48IlyJ/baPUpPvlzqcfV3cify/m/Uo78uXyfDY/In9tY2Ekjfy73Wa905M9t
fBv3jfy5nKcEV8mf24hlTCN/bmPIP2PIn8t8nziC/LmNi+c+kj+X/T84g/y5
5LkJl8ify/0wcyj5c5m/c8cmfy7z1fmC5M9tRDJHkj+X+TfuGfLnNkL5e5I/
/1//bEv+3EaWLTb5cxvntncify77v+AB+XMbBcq1In9uY9OhnuTPbeRvnYD8
uXz+61Xkz20UHF6N/LmNJi9Hkz+XPNW3Iflz6c+oR/5c7reok8mfS75tMpv8
ueSFO+PIn8u8fic2+XPJg/vSkz+X9Xw8m/y53A/bhpI/l/towyTy5zbaNv1C
/tzG6L6tyZ87yHc4CflzB0ey3CR/7iD58Vvkzx1g/3Py5w5itapM/txB3FTX
yZ87uNj/BvlzB3ejpid/7qByxeTkzx1kirKI/LmDPqvikT93sP9MSfLnDgaf
2En+3EGS07XJnzv46+hE8ucOOtSrR/7cwdzjmcmfOyhwJw75cwdNbrUhf+7g
e6s/yZ87GN2xGvlzB/0TtiN/Ls/zV0bfnwf53EHrF8vInzuo06YD+XMHz49O
JX/u4Eef7eTPHQzv9pb8uYMHsW+SP5f1OjKd/LmDrDWP+f48yOcOllaeQP7c
wU9jKvlzB1XXRSJ/7iDhtK7kzx1smJ6I/Lms77yV5M+lfkYWI3/u4OjXKb4/
j+/ncwdDU54hf+7AXDKb/LmDFYUykD938PfW9OTPHWSbfJT8uQP3xTry5w7S
Z0hA/lz2+/Y48ucOVnasR/7cQfh9YvLnsp+PopA/d7Dw1WLy5w4SLchM/tzB
m7xFyZ87uFH/O/lzBzsufSJ/7uBtmQrkzx1E+TGJ/LmDLgNukj93kLjzZvLn
8jpjSvLnDiIP2UT+3EH2Dg3JnzuotWcR+XMH6893J3/uYEHxEuTPHWyf9p38
udTf4+/kzx38Nz4Z+XMH5+4fJH/uoNH+9eTPHSh/ZiB/7uDS6o/kzx3sa1qU
/LmD+uX2kj+X/Yw7nvy5nL8DFcmfO4jYEJf8uezf8fLkz6X+G8Ynfy4/37qb
/LmDnuuKkj+X81P1I/lzB7u7LyR/7uBx5VHkzx3UNRqRP3fwz8gy5M8dZJhy
m/y5rM/tNOTPHdi1F5E/l/W8lpf8uYPOS0uTP3fwOeZs8ucOhp3pSP7cwYHP
HcifO4gf3kT+3EFF9SD5cwcz2k8jfy7nNdZ48ucO8ozrT/7cwcAYs8mfOyg1
Iw35czkflV6TP3cQs/8o8ucOchU/Qf7cQbPpf5I/dzCmyGLy5w7SXf9Z+Jc/
l355oj/5cwd/lE5A/lzqrUQr8ucOVnVQyJ/LeQ03In/uYGqZTuTPHcTpmYH8
uYOvy0qRP3dwvERB8ucOesWrTP5czuO7EeTPHRyLu4X8udRH19bkz+W8pflC
/txBpDe9yJ9LfWU7QP5c7ocr7cmfSz9Ifpr8uYMBIz6RP3fQcMg/5M8d9O00
mfy5A6PGZfLnUj87epA/d7CmVxry5/L5A6uTP3eweLVF/tzBv0NKkj93cDB2
E/LnDjZ2n0/+XPpd7Cfkz2U/9x0jfy79P9ko8ucOpr/RyZ/L87yMSf5c5omp
s8mfO5h35SD5cwfLj/9B/tzBspbbyJ/L+cs/nfy51Kebhfy51PP5Bb4/D/K5
g4IX1pE/l/p9spP8uYP3Vw6RP5f6sduQP3eg9rhL/txBjo3fyJ87SJYzOflz
B9FX1fX9eZDPZf9X5Cd/7qBdxdfkz+W+v5+T/LmD190bkT938LRvZfLnUi+t
epA/dzC+9Fny5zK/1Xnq+3P/Pl8i9bPsAvlzBzUmZSF/LvXRMyX5czn/2RqS
P5f7fGtC8ucOii58Qf5c6vFgRvLnMj9sHE3+XOa/SiB/7iBG7e/kz2VeefOB
/LmDKimukj93kLvbCfLnMi/UaU/+XM7n6fPkzx20OTaU/LmD1EcGkz93UL10
AfLn0i+rRpA/l3nz1Qny5zJfVWxI/tzB+Wj7yZ/LfB75KflzBxfSHSN/7uBe
6Qzkzx20erSI/LnUX8nR5M8dbK4dnfy5g8vTX5M/l3r5+o78udy3Z9uRP3cw
bkt38udyv7S9Sf5c+ss/ycify3xRog/5cwcpxu8jfy75YPlA8ucO2iZ+TP5c
zv/lA+TPZb68Opr8udynWSuQP5d62Lme/LmDPZ8/kj+X+r3+mvy5g96zopI/
dxAa5JI/d3Bm01by5w6mfb9M/lzWa+rPJr/8uYN1XzKTP5f7dMpr8ucOGi/N
Tf5c7qNnvcmfS/9sN4v8ucw3Ex+SP5f57XA/8ucOvjSuRf5c+t/9meTPZV65
npH8uYNibXaQP3dQeu1C8ucOYhf6Tv5c8t+8IeTPpV+vXEz+3MHIeI3Inzuo
tKwa+XMHnX5jfy738ZE05M8dnIjK/tzBo40fyZ87qFeuE/lzBxkXXCZ/Ludh
XAHy57LeqdifO+iRn/255Msw+3MHZf9kfy55rSf7c+nv86uQP5f1LnuU/LmD
/JFKkD+XfjW/GPlzB4di7iN/7uDl4K7kzx28uNCO/LnMw93ekj930epjxlLJ
/s+fu7jY/qvyy5+7OPMhM/lzF9ruY+TPXTT5loT8uYsX7/eTP3cxI2MD8ucu
dl06RP7cReKP/cmfu3hQ9B75cxebPlwkf+7i1D6b/LmLR3pO8ucuBtYD+XMX
LUu+IH/uwvqxgPy5i/sN+5E/dxFz6Vry5/L+TaKQP3fR3R1A/txFqtMdyJ+7
WFR/AvlzF5nTZ/T9eZDPXSRappI/d9H66TLy5y4eF31E/txFjfPNyZ+7SK+0
Jn/uon7z6+TPXcRYWpP8uazvpty+Pw/yuYuv78eTP3fh3C9E/tzFiiPdyZ+7
COmjyJ/L+u0eRv7cRf71w8ifuyiZziJ/LvXzppDvz4N87qLgmH7kz13cGnyM
/Lnsy/SF5M9dJPz2G/lzF/0G9iN/7qLdHYX8udTP9Rbkz11U6LuE/Lkr5zWC
/LmL4/n7kj93Uah9HfLnLgrs3UH+3MWncsfJn7uIM6AO+XMXvfGA/LmLLMow
8ucufhQPkT+Xev49OvlzFxXnjiF/7iJH4ynkz11s/bab/LmLFJ2akj93MaTQ
QvLncr571SZ/7iLX6Yzkz10kWzeG/LmLiKrryJ+72HBsDvlzF/pvFvlz2e8h
8cifu6h+7hX5cxfn7nUkfy7fd/U68ucu1q0F+XMXR1smJn/u4vyNI+TPXdT6
Izn5cxdvhk8kfy7rtec1+XMX4xaOJX/uYnrCfOTPXQwqXoj8ubxf7ebkz12c
2Pqe/Lmsx8iN5M9dFM7ygvy5i1cbO5A/dzE5y1jy5y4GlE9K/lzqc84Y8ucu
yps7yJ+7+LtnYvLnLv5cs4f8uYuXhVOTP3fxbXtP8ucufo/ZkPy5iw6XwuTP
ZT1ijyB/7iJ2zN/In0u92VPJn7v4cuMU+XMX8QbdIH8u/aXgcPLnLg5OzUH+
3EW2PQ/In7s4/SQb+XPZr1kNyZ+7WBK7NPlzOa9/tiN/7iLJh9fkz+W8PZhJ
/lz6b6wb5M9dHGh3iPy53HeTTPLnLmL9k4f8uYsEsfKTP5f+Hu0W+XP5fgtH
kT+X9V7SgPy5i7RHk5M/l8/77U/y5y5mXUhO/lz6T+WO5M9dfBxyhvy5i7dT
JpA/l/v343by5y5KTIlJ/txFafM5+XMXytdZ5M9dlNkXk/y59Pc0F8ifu+hf
qD35cxfLZvy4+Mufy363bUP+XPrfhsbkz+V+K1eZ/LmLpIlakT93MTzTfPLn
LqLs/If8uYvI1TOSP3cx71018ucuNsYtTP7cRaWF58mfS7+rtY38uYuVfdqQ
P3cxLGEW8ucyv9xKRP5czksPj/y5CzXvHfLnLu7VfE3+3MWOq8vIn7t4Pzk3
+fP/nafK5M/lfp/akPy5i2J1F5A/l/pvfI38uQt8y+378yCfu/BK1iF/7uL2
2rLkz13srf83+XMX39c/JH8u/WL9MfLnLroO/kD+XO6329PJn7u43LOO78+D
fO4iU+8K5M9dPPzvE/lzqc8UFcifu/iQexv5c+mXDRTy5y7WN11O/txFOG4+
8ueynv2++f78vp/PXbRYOZ78uazHZpP8ufSrionJn8t5TL2a/LnMf0XzkD+X
89t0E/lzF+WaDiZ/Ludv+hDy5y5+y/I7+XMXf4y4Tf7cxZFxxcifu0jpvCd/
LvdVkcTkz2V/N3Uhfy7PmyBE/lzmo+zTyJ+7WDPbJX8u9+PqTOTP5TxFvUH+
XOaBg0vIn7vY920c+XMXUc+GyJ/L+X2Ygvy59M9p+cify35ULUL+3MW7s4vI
n7u43rwM+XMXqUtMJX8u5/FwW/LnLu6sSEP+3EWjWivIn7uInro0+XMXbafc
In/uYs+Yf8mfu1g7+zD5cxe9chcnf+5i6Yt45M/l/C3sSv5c1uNUWfLnLtxl
D8mfy983V8mfy/lql5b8uYvOg7+SP5f+G/0K+XP5/ThTyZ/LPL1iNPlzuR+U
ceTPXdiHPpA/l/XdOp38ueSLIRfJn7uYNHYI+XN5v7SxyJ/LfhwqQP5cznOc
EeTPZX9/niJ/Lv0iQw/y5zLP7GtD/lzm+WUW+XMXzVZ1JH8u+zfpPvlzF4sL
tCR/LvPH1h7kz2U+qxOf/Lmcx7sryZ+76NirKvlzF2NujyJ/7sJo34D8uTxP
5rrkz13UfTeR/LmLw9VmkT93UfXsWPLnLkqdjUX+XPrhxnTkz2U9r84ify7r
tWII+XP5fosmkj+X81njM/lz2f/2rcife4i1LTH5cw+bkt0gf+4h666b5M89
dNn8H/lzD03rVCJ/7mGCdY38uYfhna6TP/ew/0Na8uceWhRJRv7cQ+/3C8if
e/gxNy75cw8DD5Qgf+5hwN4d5M891Ntfi/y5h5+7JpA/95CtSl3y5x5W7s1E
/tzDpIuxyZ/L+lxoTf7cw9sGNcife7jYvCr5cw/eb23Jn3swu2cgf+5h54Ol
5M89xGnSnvy5fN9/p5A/99Cp6zby5x4at39D/txDymg3yJ97SL1vGvlzD+Wq
HPX9eZDPZT/LjSd/Lp8XmkL+3MOhlT8H//LnHr5P7EL+3IM9JUz+3EOz2SvI
n3vINLwo+XMPGz9P9v15kM89vE9+mvy5h/iLZ5E/95CuUHry5x4itqYjf+7h
3OQj5M89VHi5lvy57E/G+OTPPZy8O9b35/59nsnDjC51yZ9LvX9KRP7cw95n
kcmfe+j1fhH5cw/Tl2Yif+5BKVyE/LmHpc2+kT+X9b71kfy5B6NqefLnHq7E
mET+XOp1xA3y5x4a9t1E/tyDlScF+XN5/oiN5M89LOnTgPy5h1EnFpI/97D4
bjfy5x7qVitO/txDvmXfyJ97KPH5G/lzD1EWJiV/7uGfDwfIn3vQL60jf+5h
Vuv05M/l/O37QP7cw+deRcife+jQeA/5c/m+ySLIn3s4cqMC+XMPBY7/Tv5c
zt/DcuTPPSzvHY/8uYfn53eRP/dw4EQR8ueynh0/kD/38GjSAvLnHqJ2Gkn+
3EOrXA3Jn3vYtrI0+XMPabbeIn/u4c+oacifS/33X0j+3MPBSHnJn0t/PFmK
/LmH1xlmkT/3MORzB/LnHo4m6UD+3EO41Eby5/K8OED+XL7/jKnkzz1EyxlB
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
7lFN8eeol7+OFH+esD9KThJ/nrAu64eIP09Y5/UPiD9H//VJDvHnCftg2yTx
59h/Tu4j/hz96ZiR4s/x/L1xTfx5wo7VbSz+PLDt8wP6cz7vGI9Nc5D+3Pfr
geVdfIj+nM8/xpPmnKY/9/17YMvKv0l/zvUA4wdT7qc/9/18YDkaHKA/5/qA
8Zg/stOf+/4+sPfzxvTnXC8wXnByBv257/cDqz/qYfpzrh8YZ1hVkv7c9/+B
Vf3sC/pzricYt1pZnf6c27v7A6u4bAT9OdcXjDe8XpP+3M8HAvvo8+foz7ne
YLxo24P0535eEFi9rU3oz7n+YDyhShX6cz8/CGxbrbfpz7keYfzO303pz/08
IbA5zXPRn3N9wnjmwdn0536+ENirNVrQn3O9wnjg6jH0537eEFi15qvoz7l+
YTy14Xn6cz9/CGzTrQP051wuMM725Tj6c7b3jwb2Wdlv6c+5vmF8o+Rw+nM/
n8D9eWQM/TkfV4zrz/773/z8znlFYNeHtqU/5/qH8YARGenP/fwisDIT5tGf
cz3EuGOfYvTnfp6B8ZXR9Oec7hjnj3fRn/v5RmBfzpxEf871EuOar+WkP/fz
jsAKr8wx/n/rZ5rAro7eQn/u5x+B3T67iP6ctyNtYM/meYT+3P+eXWBDjw+h
P+f6+lRgB9vXpD/385HAut9I0J/7n8MLLDp7F/25n5dgfl37mP6c6+8zgaVe
8Bz9uZ+fBJa9ZFH6c67H6QKzpjfpz/08JbBmJ67Qnzu3D+x09XL0536+gvuf
chT9OdfrDIGlGHGQ/tzPWwJ7pM9y+nOu3xkDq130WfpzP38JbN6EZfTnvp0P
rGjfOvTnXt7xfvfMpD/n+h4ElvRne/pzP58J7FrdEvTnXO/DwEZ8dpP+3M9r
AnvlPubnvv5HgS1dEtGf+/kN5lty5udeD+LAsvy2mP7cz3MCa9slJ/0560Om
wDbvvkx/7uc7gRUaVJT+nPXiWdyP9l/Tn/t5T2Bn8g6jP+d2MHNgLc6Xpz/3
8x+sR0dS0J+znmTB+79Zlv7cfx9hYLOHp6Q/Z33JGti401/Rn/v5UGDlfi1K
f856ky2w9AMu05/7eVFgyRbNoD9n/cmO8aAB9Od+fhRYhbfr0p+zHmFcdUsp
+nM/Twps8U+H6c9ZnzD+IshGf+7nS5gvk2fSn7NeYXwyUYD+3M+bMH/OvkF/
zu0AxqcqTKI/9/OnwCqlY37u9QzjbiVa0p+75whsV7Nl9OesbxifqL+B/tzP
p/B8rR1Lf856h/FHtYbRn/t5Fb7+1w/pz1n/MM5TexL9uZ9fBXasfBb6c9ZD
jIc+cJb+3M+zsN4WSKI/Z33EOL5vK/25n29hfa1dmf6c9RLjv1LMpD/3867A
ds+5RX/OdhDjTlO60p/7+RfWi0RK+nPWU4y/ChrSn/vnVf59fY/Rn7O+Ylw8
WR36cz8fC6zvCy3pz1lvMZ5UPwf9uZ+XBbZmfEn6c9ZfjIsVKkR/7udnqFf3
V6A/Zz3GuPP5fvTnfp4WWMpUn9Gfsz5jPL1rI/pzP1/D+pH3Kv056zXG5ZN1
pD/387bAGpVaR3/OdgDjXy82oz/387fAVhXb8Z8/N6wvn16mP/fzuMB2LFxO
f856XiSwllNH0p/7+Rzme9JP9OcsR0UDO36xPf25n9cF1uDzLPTnrOfFAtu6
/m36cz+/C2zJpbT056znxQP74PsS9Od+nhfY5++8S3/O5aoEXu/2qfTnfr4X
2Hv1f6M/Zz0vGdib0bf0537eF9jv/ZPoz/m4vR5Y9ZpP0p/7+R9+fu3k9Oes
52/g+j08if7czwOxnr69gf6c9bwU1rvSqejP/XwwsNZ/rqA/5+0oHVhi81j6
cz8vxPox/zn6c9bzMoHtaTid/tzPDwOb0WIR/TnrednALvf7gv7czxNRnz7c
SH/Oel4usDc2NqY/9/PFwPZmPkJ/znpeHv1Coxv0537eGNgz5yP6c9bzCrh+
zWrQn/v5I57HVgXpz1nP30R9SneO/tzPIwNL99nL9Oes5xXRv5SrS3/u55OB
Na3+Jv056/lbgX1TpgP9uZ9Xov97/jv6c9bztzF/Sp2kP/fzS9SLibvpz1nP
K6H+Ds5Df+7nmYE1/uBZ+nPW88qBrXulDv25n29i/Vr3KP056znGTZedoT/3
887A1h7IRX/Oeo7xqF0D6c/9/DOwe9oUpj9nPcd4co+b9Od+HornJ3GZ/pz1
HOO+1fbSn/v5KL7fwm3056znGF+e0Jz+3M9LA/v2id3056znGC98si/9uZ+f
Btb86d7056znGL8/rRD9uZ+nBvbD4qH056znGN96azv9uZ+vYj0LatOfs55j
/PPRb+jP/bwV1/vUb/TnrOcYL4620J/7+WtgacvmoD9nPce46uUZ9Od+Hov5
WW8A/TnrOcbf9UhGf+7ns4F9veMs/TnrOcb1C16gP/fzWtT/jM3oz1nPMV6Y
qj39uZ/fBjbt+wP056znGD+eNaI/9/PcwJ7b2In+nPUc4/zp19Kfs56/j/Wq
SHf6c9ZzjKds+JX+3M97Ayvbfz39Oes5xnPGDqQ/9/PfwC7dLEt/znqOcd6R
i+nP/TwY+5mDl+nPWc8x7rrtHP25nw9jPR9/N/0563nTwFINTkd/7ufFmE9b
V9Cfs543C+zjxB76cz8/Rr3cfJv+nPW8eWCHXs5Df+7nyYEVOXKO/pz1vAX2
F7dfoT9nPcd4RPnO9Oes5y0D23JoIv25nzejPg46Tn/Oet4K/cKBLvTnfv4c
WPshVenPWc9b4/1mm0B/7ufRgd37ai76c9bzNoHVOLGK/tzPpwN7rdgM+nOW
87boP87eoD/382pcj4a96c9Zz9thPzX4Y/pzP7/G8/1gXfpz1vP26Ce+epv+
3M+zsb6/spD+nMt9B/SrqbPRn7OeY7y7YTL6c9bzD9DvvnCF/tzPu1G/u7Sk
P+dy1RHX9/6f6c/9/Buv99lC9Oes550Ce+JSb/pzPw/H81a4HP0563ln9KsV
D9Of+/k49jPfBPTnnM5dML/SDqU/9/NyrNdWkf6c9bwr9l9V/e+f+/k5/n9b
/v52r+cfBpamC39/+53zdOxvhq+lP+fb/Qj9wdF29Oes5xgvf60l/TnreTfU
m9ZX//Pn3dGv9Pzw6cy7bq1hPcf43W//oj/38/fAeidy0J+znmOcq/Nm+nM/
jw+sxOEM9Oes5xifSr6O/tzP51EfdzM/98/XYDz3Eebndz5PF1jOHczP/fM2
GC+7foT+3M/vMR8/YH7un7/BOEVq5ud3Pm+H6/8c83P/PA7GjYsyPzfW836B
Fbhyiv6c9RzjlZ2m0Z/7eT/637md6c9ZzzHevngh/bmf/2O+V2Z+7p/fwfjF
ix/Rn3segP3igBb056znGDdLxvz8zuf3Anvys5z056znGGdOw/z8zuf5sF68
Npv+nPUc4yzdTtCfe34Q2PpL9enPWc8xXpuuEf255wlY7yrtoz9nPcc47FKF
/pzlYyjqT/O89Oes5xgvGT2U/tzzBuzPmxSmP2c9x7jpP+3pzz1/wH7emJ/7
54cwXnegL/255xF43tb2pT9nPcf41HPMz+98fhDr0x+v0Z+znmPc+4Ou9Oee
VwTWsN639Oes5xinajqD/tzzCzy/X99Hf856Piawpwp0pT/3PAP91sDU9Oes
52MD29f5ffpzXj6M7ZFZ9Oes5+MC27luCP255x3ojz/vTH/Oej4+sPn7q9Of
e/6B6xmupj9nPZ8Q2JVp39Kfex6C531zdfpz1vOJ2H90OUZ/7vlIYA8W7UN/
zno+CfvPRqnozz0vCaxjlIz+nPV8MtbLuQPpzz0/wfpUZxT9Oev5FPT3f35J
f+55CuZ7lffoz1nPp6JePj2d/tz/Pm5gf5aoRn/Oej4tsD7DctKfe96Cf68/
kP6c9Xw69vM3P6U/9/wlsCMNJ9Gfs57PwPWu8BT9uecxmP+bH6Y/Zz2fiff3
KPPzO5+fDOynp5mf++erPkb/f3gR/bnnNVjPDhSmP2c9n4X6PiRBf+75Ddb7
W5vpz1nOPwlsaXbm53c+b4n7NWkE/TnL5ezAMuw4R3/uv184sDbzB9Ofs57P
CSx6nPn5nc9jBvZY0dfoz7nczw1sUMUG9Oee/6A/nneR/pz1fB5eb4el9Oee
B6GfTXOG/pz1HOPco1rQn3s+hOuTgvm5f74L46JRSH/ueRGen+aD6M9ZzzE+
fHQV/bnnR4H1KJSgP+d0xnhcszX0554noV7dyEx/zumCceMWH9Cf++9Pwnq2
rDb9Oes5xmG3DPTnnjehvizoR3/Ot4txl5nJ6c89f8J6v2w0/TnrOcYHW+6g
P/c8Cv1vqgP056znGDfY3Jf+3PMprDfPvER/znqO8d5Cx+nPPa/C/3/3Bfpz
1nOMVz5ah/7c8yvsJz54nf6c9Rzjut80pT/3PAv9ZbVz9Oes5xgvKDqB/tw/
fxpYnXf305+znmNceN0G+nPPuzDfTqShP2c9x/jhu/LRn3v+hf1buQL056zn
GO8vdpD+3PMwjA8n0Z+znmM8+GAt+nPPx3C/bkT056znGL/3UmX6c8/LAvvw
VkR/znqOcdiuBf2552d4PR/vpD9nPcc4zeJh9Oeep2E/8dCq//z5N5jfn9xL
f+75WmCl4lP056zna7F+3zWR/tzzNtTfDffSn7Oer0M/nvkH+nPP3wKrmb8Z
/Tnr+Xr090Nu0p97HhdYu5qN6c9Zzzdg/z65Lv2553N4fl6sQH/Oer4R9/vu
hvTnntcFNiTlVPpz1vNNuB6jl9Ofe36Hepk9J/056/nmwMpseIv+3PM8rO/7
CtOfs55vwXxp+j39ued7uJ4ZVtCfs55/i/lYsDH9ued9gb26PTf9Oev5VvSv
YzLQn3v+F9ijOdLRn7Oeb8Pr++MQ/bnngVhv7j1Lf84LuB3fr8cn9OeeDwZW
JX9e+nPW8x2BnW/yJv2554WYr7/WoT9nPd8Z2Pg50+nPPT9Ev/rpPvpz1vNd
WO+K5aM/9zwxsBWD36E/Zz3/DvPtUmn6c88XsZ5N70F/znr+Peb7xRP05543
4vk+/y39Oev5D4FtWnuJ/tzzx3+fX+bnXs93B/bJ0nfozz2PRP+wtBz9Oev5
j9jvRMzP73x+GPWyejn6c9Zz9FU/NF3Z4H8+6GfU3+Gp6c9ZzzHOM2oO/bnn
l4FdzF+A/pz1HOM0827Qn3ueiXr00zD6c9ZzjFMfTkt/7vkm+usPEvTnrOcY
31N+Af25552BBY3y0Z+zXGK8uO8y+nPPPwPr16cX/TnrOcZTVvWmP/c8FPvB
Cg/Rn7OeY/zTrMP0556P4vmdX4z+nMspxjdfukh/7nkp9rvvJOjPWc8xLr6t
Df2556eB7cr0GP05lwOMf31jLP2556moH4vT0Z+znmN8dU1u+nPPV/H9Uh+g
P2c9x7jTj7Pozz1vRX15kPm513OMOxx6jP7c89fAVv2Vif6c9Rzj72cUoD/3
PBb9VM0i9Oes5xjP2TeT/tzz2cBqNy9Ff85vh3G/MmPoz1nPfwvs6Lam9Oes
5xgnX5iV/tzz28Ba1phLf856jvH1rG/Qn3ueG9j7Yw7Rn7OeYzxv0Df0557v
Yn2ZuIn+nPUc4yYvF6c/97wXz8sfD9Ofs56fRj89pS39uee/mG9bStOfs56f
QX82/QT9uefBgZ2o/Tj9Oev5n6g3DbLRn3s+jPnb+Tr9Oev52cC+uv4z/Tnr
OcY7/xlNf856fi6w16cMpD/3/Bj9wH1D6M+5mv6Ffn7lJfpzz5MDmzFvHP05
6/l57B86/Eh/7vkyXt9HvenPWc8vYL/2zP305543o158Voj+nPX8YmDdrvWj
P/f8ObBPz+ygP2c9v4T9b7oO9OeeR+N5WtSE/pz1/HJgP456iv7c8+nAto1t
SX/Oen4F/exHx+jPuTxjfCtLQ/pz1vOrgf0+vQP9uefX2E8UT0l/znp+LbBC
W+fRn3uejfXl3bfoz1nPr2N/u3kA/bnn2/j5lWvTn7Oe38D1T1uD/tzz7sCq
7x9Bf856fjOw5gUn0p97/o31dsVg+nPW81uBvb3ifvpzz8MDmzw+O/056/lt
PM9rJtKfez6O529Yb/pz1vO/A0uXNIL+nC8P46MFrtKfs57/g33nW43En4c2
anKC/tzz89AyPnCA/tzzc+xLpx+kP/f8PLRPxp+iP/f8PLTer1WgP/f8PLSZ
t/fSn3t+Htqwyvvpzz0/D+3bfdnozz0/D61p5oj+3PPz0PrunU5/7vl5aE/2
TkF/7vl5aLPnlKA/9/w8tDUfr6Y/9/w8tM9mV6M/9/w8tI4zhtOfe34e2q68
NejPPT8PrfWs3PTnnp+HNmj1A/Tnnp+HlmtVY/pzz89Dq1SiMv255+f4/mXf
oj/3/Dy0m2ea0J97fh5akZo56c89Pw8t/7ZP6M/9AuL1lGpOf+75Oa7/3NH0
556fh3a2xkr6c8/PQytY5S/6c8/Pcf1O76c/9/w8tL3zxtKfe34eWtuCW+jP
PT/H9X95GP255+ehpbw9iv7c8/PQao25TX/u+XloKbq1oT/3/Dy0lT0y0J97
fh7auKS59Oeen4f2e7ui9Oeen4f28G+j6M89Pw/tYuqd9Oeen4c2deRE+nPP
z0Nr9lwO+nPPzzH/5mQf/7/f35EmtEZ9N9Ofe34e2oxfFtKfe34eWrIwJf25
5+eYrz8Opj/3/Dy0PA1r0J97fh7aE2cy0p97fh7atV/+mfVvffD8HNfv1Ez6
c8/PQ2s/JTf9uefnoe3JV4T+3PNz3J/aN+jPPT8PbcWey/Tnnp+H1r9cWfpz
z89De+7ukfTnnp+HVqXvAfpzz89DW95pGf255+ehvftKJvpzz89xfYctpT/3
/Dy0B7rWpj/3/Dy0+3fOoD/3/Dy0DCfa0Z97fo73W7U4/bnn56Hd9ekN+nPP
z/H8/X2D/tzz89DumRfSn3t+Htq52+vpzz0/D+39XxbRn3t+Hlru9jnozz0/
D+2fHZfozz0/D+1S3yL0556fh/ZFqzX0556fh/bpC0Ppz/n5q8yhTfizHP25
5+ehtTz0EP255+dYf66VoT/3/Bzzc+jD9Oeen4eW7tSX9Oeen4fW4EQR+nPP
z0PbnnSJ/tzz89DKLZpOf+75eWh/DEqiP/f8PLSfK9WhP/f8PLQeW9+gP/f8
PLTuew/Rn3t+HtoLmbLSn3t+Hlrd6TPozz0/x/3OlJ/+3PPz0H67+Dr9uefn
oaWpMpH+3PPz0F6KWtKfe36Ofy/Xgv7c8/PQEu2X0p97fo771Xw9/bnn55gf
28bQn3t+jnGjofTnnp+H9sz5rvTnnp+HVrTJRPpzz89DG93oWfpzz8/xPMRn
6M89P8fzV7Uf/bnn57g/mbbQn3t+Hlqfj96mP/f8PLTVuabTn3t+juu//Qb9
uefn+Pr1nenPPT8PzUqmoD/3/Dy0GqUa0J97fo5/7/Qo/bnn51g/cteiP/f8
PLQ2dZvTn3t+HlrVUdnozz0/D63stuL0556fhza3ZQH6c8/PsT4XKkd/7vl5
aFOy9qU/9/w8tLSlltGfe34e2sgV79Ofe34e2kNtL9Ofe34eWlykA/255+e4
vwO+oT/3/Dy0hXmb0p97fh5az/7b/vPnFtqqSxfpzz0/R728upT+3PNzvL9T
w+nPPT8P7amfd9Ofe34e2uWi7ejPPT9Hf3B/Zvpzz89DezrtW/Tnnp+Hlql0
Gvpzz8+xnmYrTn/u+Xlo3ZbXoT/3/Dy0pVmn0J97fh7aiHUn6M89P8fr77mZ
/tzz89CGnO5Hf+75eWjF1j5Of+75eWhHN95Df+75eWhb2k+gP/f8PLSf1qyj
P/f8HPdj1SP0556fo17V+pz+3PNz3M/8Y+jPPT8PbXeQm/7c8/N/17ep9Oee
n4c29uSn9Oeen2P9vnc1/bnn51hPbq2nP/f8PLSkko3ozz0/R3807zD9uefn
oR0+e43+3PNzfH2nkP7c8/PQzlytTn/u+Xlop27npz/3/Bz9yfw/6c89P8e/
v/4S/bnn56FdP1ab/tzz89DqnC9Pf+75eWhlfmtHf+75eWg1d+6kP/f8PLSX
sYn61597fh7ajVd/oD/3/Dy0F194jv7c8/PQwkQm+nPPz0PLcqwW/bnn56E1
bvkI/bnn55jv9U7Tn3t+jvVmSE76c8/P0S/1HkB/7vl5aLeyvUp/7vk55neh
G/Tnnp+HdvLgRfpzz89D2/nUHvpzz8/xfLTeSn/u+TnWr7rN6M89Pw+t66Hv
6c89P8f7P9qb/tzzc9yf33vSn3t+Htq01gXpzz0/x/XvPYT+3PNz1Lts2+jP
PT9HPfixBv255+e43hPX0J97fh7a1rkn6M89Pw/t19830p97fh5ajrTZ6M89
Pw+t4qZp9Oeen6M/L9Cf/tzz89Bm1b6L/tzzc8zHxWfozz0/Dy17pr/ozz0/
D+32w03ozz0/R7+bvC39uefnoX2wfR/9uefn6H+zBvTnnp+jf97+Af255+eh
vZ3ta/pz91Gh5av0Ef255+f4+kPH6c89Pw/tx9lr6c89Pw+t9ldJ9Oeen4f2
S5Yy9Oeen4dWbeNC+nPPz0O78sQl+nPPz9H/PHSW/tzzc1y/w/+k+tefe36O
fn3v0/Tnnp+jH0//Of255+d4vx/8RH/u+Xloc569RX/u+Tn6swm56c89Pw8t
c5mz9Oeen6PfapGX/tzzc6xnmzrSn3t+jvtbYwL9uefnoXUZfYT+3PNzvL7z
HenPPT8Prd6SSvTnnp+H9lH1sfTnnp+jf+iUnf7c83P8vNwr6M89P8fzNmEq
/bnn56H9+dY1+nPPz9Ev7+1Bf+75eWjDU8ygP/f8HM/jqFr0556fh/ZD5Yr0
556f4/0fmk9/7vk56ufGzPTnnp+H9njWu+jPPT9HPfjnIv255+d4P883pT/3
/Bz1au/39Oeen2N9TpWP/tzzc9SX693pzz0/Rz9QpxT9uefnmH+D9tOfe36O
/WaaDPTnnp/jeek/kP7c8/PQtlUtTX/u+Xlod89aS3/u+Tnm65XC9Oeen2M/
9lJh+nPPz/H9W31Gf+75OcY5G9Ofe34e2uCF1ejPPT9H/bh7+39//7w76u87
yeal23WrsOfnmA8/PsW/f+75eWgdyhSmP/f8PLRXZ35Hf+75OZ6HCZnpzz0/
R/+TaxP9uefn2I+t5+9v98/DYXxhC39/+x3vhvf/Jn9/u38eDuPs047Rn3t+
Hlr1ZPz97f55OIzX93iG/tzz89Aq9H6Z/tzzc6xPXQrTn3t+jv3k42fozz0/
x/60i/tzz8+xnxnm/tzzczxfadyfe36O/fun7s89Pw/trVfdn3t+jte3mfm5
fx4O48eed3/u+Tnqx0/Mz/3zcBi/mc39uefneB6LMz/3z8Nh/FMH5ud3/B36
9cPMz/3zcBhfvNqQ/tzz89AWR8zP/fNwGO8tyPzcPw83NLShAfNz/zwcxn8V
YH5+x+thPt/N/Nw/D4dxxQ3Mz+/4vdDu/SeJ/tzzc3z9CObndzxfaH+3Zn7u
n4fDuN6+tPTnnp+Hdmwg83P/PBzGZR9nfn7H+6GeXttCf+75Oe7/9en0556f
o596nfm5fx5uTGgDVnehP/f8HP1Rcubn/nm4sai3fzagP/f8PLTCnT+mP/f8
HPUmC/PzO14wtIFPMD/3z8ONx/r1AvPzO34Q61XrVfTnnp/jfp7aQn/u+Tnm
+0PMz/3zcBOxzqw4Sn/u+Xloaz/oTX/u+TnW97GP0p97fo77V/pu+nPPz0P7
cusA+nPPz7G/6TyS/tzz89AW3c38/I5HxPev9y79uefnoZUMptGfe36O+VWi
Kv255+dYT5Ny0J97fo73X3UA/bnn55h/vy+gP/f8HOtzuYn0556fh1b+67T0
556fY7/9IvNz/zzczNAKdDxLf+75Ofqrbi3pzz0/D+2+IszP73jHf/th5uf+
ebhZ2H/9kZH+3PNz9A+VmJ+7j/oE/V33iP7c83Psz88Opz/3/Bz9UTrm53f+
Pm9oK64Moj/3/Dy0bDXy0597fh7aob6F6c89P0f9Hlmf/tzz89DanrxAf+75
eWj5lyyhP/f8HPej/Gn6c8/PMV+2NKc/9/w8tH6vDqI/9/wc/dGbAf255+fY
X4wbSH/u+Tn67weZn9/xl5hf72akP/f8HOvtkK/ozz0/R//4NPNz/zwcxieT
OtCfe37+b39Ui/7c83PsL0alpz/3/Bz1dE1f+nPPz7EfWnov/bnn5+hfvh5F
f+75OfrFjtvpzz0/D61Emv30556fh5Z3ax/6c8/PQ+v0zIv0556fhzYm/zH6
c8/PQ0vUeJ7+3PNz3M/7atOfe36O9ahpSfpzz89DS7ekCf255+fY/5U8S3/u
+Xlo7XONpz/3/Bz9b6l99Oeen6Pfmr2e/tzz89CSb3qS/tzzc/QLv+SlP/f8
HNcjW376c8/P8e8ZDtCfe36O6/tZf/pzz89RvxfXpD/3/Dy03NtC+nPPz/Hz
k1WiP/f8PLT3Nof0556fh/Z8oeb0556fY7/UeAf9uefnmE9thtKfe34e2qSt
K/7z59+ElqzePfTnnp9jPT50kv7c8/PQnlk5nv7c8/PQNne8h/7c8/N/+5/v
6M89Pw+tz8km9Oeen4f2esEb9Oeen4dW6L5G9Oeen2O/W7wO/bnn57h+e8rR
n3t+jvsxswH9uefn2I8vmEx/7vl5aCleWEZ/7vk5Xs+G7PTnnp9jfa9Rkf7c
83OsJy1epT/3/Bz92u1d9Oeen4e2Y8Fn9Oeen4f285aG9Oeen2M/XCUX/bnn
5+h/MqanP/f8PLQli5+mP/f8HOtxs4P0556fh/Zd7zP0556fYz7+8zH9uefn
eH4+e4n+3PNzfP3sCvTnnp+H9lzI/Nzr+U7s545Noz/3/Bzz4be99Oeen4c2
vcsr9Oeen4fWa0N1+nPPz0MrmJ35+R2fi/7m5+70556fYz+cmfn5Ha+Lfidm
fu71HH3yvgsX6c89P8f1Lj2O/tzzc7y/o9Xpzz0/x+v9pSz9uefnGJe/Qn/u
+Tnma5+y9Oeen6P/GbOiwf/+PuXPWA9WP0Z/7vk5+tUvZ9Ofe36O+vFufvpz
z89De+e76/Tnnp+H9uLNofTnnp9jfiZjfn7HB2P9mZCR/tzzc1zPVvPpzz0/
Rz1LeoX+3PPz0I58spT+3PPz0L74uCf9uefnoe3f04v+3PNzzJdmD9Kfe36O
/ci6Q/Tnnp+H1mRTUfpzz89x/StcoD/3/BzrR7uM9Oeen+P6H29Nf+75eWid
C6WiP/f8PLR5dcbQn3t+jn5o0zP0556fY/+/Oxf9uefneP4z76c/9/wc7+f3
j+nPPT/H85puCP255+eh3XMuFf255+ehtbqb+bnXc4yXL81Pf+75Oa5XU6M/
9/wc9ev3GfTnnp9jf935Dfpzz8+xH6w2mv7cvfO/17MJ/bnn57h+q7LQn3t+
jue3wRz6c8/PQxv3wuv0556fh/bG1IP0556f43kc9TX9uefn6NdmbKQ/9/w8
tKhQMfpzz89Dm3wuBf255+eYfzPb0J97fo5+bHsp+nPPz1H/Zx2nP/f8HO/n
vdT0556fh/Zgo6z0556fYz/e9Rr9uefnoYU3f6I/9/wc+9G7mJ97PT+H+jdl
AP255+ehNb9vMP255+fo11ZcpD/3/Bz9+dyx9Oeen+Pntd1Nf+75eWiZuvai
P/f8PLTrae6jP/f8HPVlSUH6c8/P8fou9aU/9/wc9f737fTnnp+HtvDJ9vTn
np+jX5rbmP7c8/PQ2gxJS3/u+Tn6oWEt6M89P8f1/eAo/bnn56gHwfv0556f
hzZ/fHv6c8/Psd8s9DD9uefnocVr59Kfe36O/qxaRfpzz89xv75Koj/3/BzP
T5la9Oeen4f2cMp36M89P8d6sWs4/bnn5+hnn5tAf+75eWgn5g+iP/f8HPd7
/n30556fo58cnI3+3PNz9F9LJtCfe36O+t+rF/255+fYj3YZTn/u+XloL+e6
Qn/u+Tnma/GG4s8jqzk0o/jzyGZd3yf+PLKNIw6IP49s6YA/xJ9HViVPefHn
kRU+u0f8eWTXSuwTfx7ZXVuzij+PrE2aUPx5ZO9umSb+PLLNbR8Sfx7ZC+OK
iz+P7NlRq8SfR3ZzTFXx55FNGz5M/HlkB599R/x5hH41l/jzyJrNvV/8eWTX
ZzcSfx7Zoy9VEn8eWeaCFcWfRzb1QGPx55EdKp1D/Hlku1bNEn8eWb18zcSf
4/qOHSX+PLI+pVeIP49sb/Fz4s8je2z/PvHnkQ0YP0b8eWQvZt8s/jyyCZmG
ij+P7OLpkeLPI6vW55b488gSLVqLP4/sZKv04s8j+73jHPHn+Pr6RcSf4/r/
NFL8eWQLk+0Qfx5Z714TxJ9H9lEiu/jzyNaMyyb+PLIDHTaJP4+s1Hefij+P
7OhjD4s/j+zrjYPEn+N6VntH/Hlkcw5lEH+O+/P937P+8+eRDT04Q/x5ZPuG
5RJ/HlnfHCb+PLK8Fa+LP4/snm2XxJ9HlqVIGfHnkWW6PFz8eWQzO+8Xf47n
s8VS8eeYrzlj8ed4fvosEX8e2Xeta4k/x+vZMF38eWTL9rcVf475Xb6Y+PPI
Wn18Xfx5ZJcuXxd/HlnlGYH488hWXVkn/jyy2XsXij+P7I8W2cWfR5Zvy0Xx
55gPPUz8eWRXm34l/jyylrmH0J97fh7ZiT/Kij+PrPj+B8WfR3bfldLizyMb
ODiF+PPIpp/8Qvx5ZN2Pm/jzyLolXRR/Htn4RdPEn0e2e3B/8eeR1a1SW/x5
ZAu2vy7+PLI3DxwUfx7Z3CxZxJ9H1nPWdPHnGGfLJ/48svrXS4o/j6xEzQni
zyNLm62F+PPIFlVqLv48stYfLhF/HtntDuvEn+P9/Dha/Hlko9sMEX8eWdNb
XcSf4/nuMEH8eWQVe8bizyPL+top8eeRDWvXR/x5ZLmKbRJ/HtmSKRXFn+N5
qzBV/Dmex3PXxJ9H9vPJjuLPI8vW/EHx53h/reuJP4/sk5kpxZ/j9bxTQ/x5
ZA2GNBV/HtnTG7KIP8d6cquo+PPI0szMJ/4cz1ebMuLPUS/r9BZ/jvrQc4n4
88gGX6gv/hzP16KL4s8j+6dbO/HnkT2wbY34c8zPTo3Fn0dWace34s8jG17w
gvjzyPrbEvHnkb3+8jDx55Glj38Qf456MqKN+PPItlbLJP4cz2OTN8Wfo95N
fUL8eWQruhcVfx5Z+Udqiz/H+tN7kvjzyL4Njos/x/08vlH8eWSFyvcVf456
ljm1+HPcj1zJxJ9H9sYv48SfYz3Nvlb8Oe5XlpTiz7G+7lwu/jyyrxaMEn8e
WbIxOcWfY72sMkX8Oa73ewvEn0f2RfeV4s9R/7qsE38e2Y7N74s/j6x07kPi
zyNL3f6q+HPUw2SB+PPIMvaqJv48shkD84k/x/Nb8Iz4c6zP+18Qf47nt2Mt
8edYn5LKiT+P7KfubcWfR9ar6Q7x53j//X8Vf4716ch34s8jsz25xJ+j39oU
iT+PbMigmuLPI+uRPqX4c/SHj58Sf47nyXKIP4/s4QJJ4s/xeo4WFH8e2ZNX
r4k/j6zJhAviz7Fe7vtJ/Dnu10vfij/H9crcVPx5ZHk++U78OfqJBb3En2M9
+7yH+HO836IFxJ9Hdm/1weLPI/vrrq3izyM716+6+PPITlX6Uvx5ZDkaHxN/
jn7s0/Xiz1EPjmUWfx5ZhbFTxJ/jeX2sr/hz1LuCf6f8z59H9s7IU+LP0a8/
fFb8eWTbbjYUf47n+UYr8eeYT5v3iD+P7HS2jOLPI3t5d3vx55G1zfsV/bnn
55F1athV/Dn6/6tHxZ+jP978tfhzrFfH+4k/j+z7t0uJP0f9vLpA/Hlktcpd
EH8e2aY3zog/j+yp+O9U//nzyLrET4k/R/1ovlz8eWRv79ot/hz9fa8b4s8j
u/B3TvHnmG+fnxF/HlnZIy/Rn/vvN40s5asfiD/H/mL/OPHn6I+mHBJ/HlmN
+zuIP8d+5ceK4s+xXiSNEn+OfunzLOLPsf53XC7+HPPn/CTx51h/VlwWfx5Z
i1LdxJ9HdjZpqvhz1P+ghvhz9PNny4s/j+yhXnPFn0e2pWMm8efoN0/eXvWf
P8d82XFe/Dne7+/viz+PbMycHeLP8fzffFH8eWQj/ukq/jyyG91KiD+P7MvN
P4s/x/rS7Gnx56hn1/uJP4/sh5bFxJ+jn72wWvw5+qfO+cSf43qefUX8Oebv
m3PFn6P/61hL/HlkYxNFxZ9H1nD0NPHnkeWsM7PgY//z55j/B+zJ//w5+ov2
FcWfR5Z72z7x53g9lZ8Tfx7ZW5W2ij9HvVxeX/w56mXPbeLP8f529xR/jn6j
5Anx59h/D94j/hyv93w68ed4XvbmFX8e2Zllr4k/j+zXPH+KP4+s34czxJ/j
53XoKv48sp1dFok/jyxOfrf4c8zvft3En2M+3NNS/Hlkg+qoP/93/6L+HPWw
kPpzXN/S6s8jq9JC/XlkHbaoP4/syu6G4s8ju/zXXvHnkb13q7L4c8zv3S+L
P8d+8cgQ8eeR3T/+VfHnWP+T1J/j+3+ZJP48suSl1Z9Hlj9Sfx7Zhp5pxZ9H
1ji3+nM8Lwu7iD/HfBq8Rfw56lG/6eLPcb13Jhd/HtnxAl3En6Nf6faY+HP0
W3UbiD+PLPptpvhz1O/Bg8WfR7a3TSfx55GtT6om/jyyWetWij9H/Xlpi/hz
9Gflqok/Rz2+dET8OZ63T3uJP0e92PSI+HPs99vcJf4c/emZJPHneD+jR4g/
x3r95BfizyN7sHVd8eeoF5mnij/HfC5RRfz5v+tldvHnuH6lk8Sfo//YPV/8
OernCxPEn2N/mzut+HP0r9NSiD/H+n3kT/Hnkc0/0UL8OZ6nmQvFn0e2btyr
4s/RD5XIKP4c+7MFm+jPPT+PLPtPofhzzB8bLv4c87fJWfHneF6KDBJ/jvk1
M5/488g+3vaq+HO83h/riT/H/iTzBfHneJ7OLBZ/HtmkvqfEn0c253Yz8eeR
PdFyoPhzPH/dEuLPI3t8wwDx53i9z68Ufx5Zmb4Z6M9ZzzH+cPGX4s9R//M9
K/4c9WBWe/HnkQ04UVP8eWSz56YTfx7Zre/6iD/HfmLtPeLPsd/eNlL8OfZX
PbaJP48sSL9P/Hlk9+3oLf48slefeUH8OdbbvEfFn2O/XSmP+PPIMt2uKf4c
61OdEuLPUS+nNxZ/HtlrL/0p/jyygk+NE3+O1/P8XvHnkf09cJ34c6xvs58Q
f45+bc3L4s9RT5PnE38eWakr+8Sfo98d2E/8eWRtetUQf45GfGIg/hzvd9db
4s8jKz4iEH8eWeF7m4k/jywp93bx55FdfWmI+PPIig34XPw51sdEMvHn2M+P
/V38OepJy3HizyN7P1cy8eeR3UzaJf48suVjG4s/x/r4+zXx57g/i98Xf476
cKaW+HOsh13Lij/HuER98efYj5SZJP48sok7l4g/j+yR2tnEn+PnXawg/hz9
Q7JC4s8je2zYTvHnuD+Flos/j+yfyu+LP0c/fzSH+PPIJn/yjPhz7D/yPiX+
HPPv3H7x5+gnkp8Wf45+78OZ4s/xfp9/Ufx5ZLVPlBd/juepZm3x57j/GaaJ
P0c/kNgr/jyyCcvyij/HfuxmNfHnkf1Sp5T488j6PNRd/DnuX/Xj4s8jG195
i/hz7Bfji+LP0a92Hiv+HPu5VNXFn0e2IGVZ8eeRjexyWfw5+sklZcSfR/bd
N5+LP8d8OZFK/Dn6txOfiD+PbHT/fOLPUX+uXBN/HlnrYKj4c6yPmdOIP8d6
/lUG8efY/42YJ/4c+5l5ecWfY3+yeYn488guru8h/hzrw5We4s//7RceEH+O
enn4oPhz1I+jRcSfo943Pi/+PLLFgzOIP8f7udVK/Dn6gUqPij/Hv3cYLf4c
+6eDT4s/x/pwMqf4c9z/AvvEn2P+35gp/hz9eu7B4s+x/7krlfhz9NupY/Hn
qHfr8ok/x/6o82vizyPLe2W6+HPs3/q/Lv48st/rj6I/9/wcz8vxxuLPIyu3
IbP488iebzVb/HlkhQqVFH+O+j/ngPhz1LNJa8SfR9Zy3gbx55EdKVpU/Dnq
4eWHxJ9jvzCntfhzrI/fvyH+PLJX5h4Tf471ucFj4s8jW9Eki/hz9Efdroo/
j6z/rR/pz/33lUfW6O5R4s9xfackiT/H/Uo+SPw51pvPL4g/x/589hjx55Ht
aP2D+PPImnTqKf48sqWPJxd/HlmXTwuIP8f++Vwf8ed4Ho9tE3+O/UuqduLP
sV7NbCT+HP11/zTiz9GfDGgu/hz1utUR8ee4P081EH8eWfvh7cSfRzbuxRTi
zyNLtXKO+HP0S+XfFH+Ofn5Zf/HnmD9Faoo/j6xusurizzGfNgwTf475n2m8
+PPIwmkDxZ9H9szU5OLPI1vdPav4c+znZo0Xf45+tENP8efoH1sME38e2ZDE
ZfHnqHevvC/+PLbsPTKIP48tz+m94s9jS917v/jz2NZ1OSn+PLacYTnx57Ed
Pvyz+PPY6uXdK/48tgKrs4g/j+2j+wLx57EVWTlV/Dn+vd6D4s9jW9+vmPjz
2Eb0Win+PLY3+lYRfx7bru5DxZ/H9tcT1cWfx1a3V07x57FVGHef+PPYto1p
KP48tu+it8Wfx7Y/25viz/HztzYSfx5bt/zZxZ/H1mTOx+LPY7uVuan489jK
9h0p/jy2KP/n4s9j6/LiWfHnsX25Za/4c1y//qPFn8d29alN4s9ja/n4EPHn
sR3YP0L8eWxV290Ufx7bK7VaiT+PLX3ddOLPY8vfaLb4c1wvvPT//Dm+fuMI
8eexNbuwTfw5xm3Hiz/H/Xw0m/jz2O5Jyir+PLa3Gm4Ufx7b5W8WiD+PbUOy
FOLPYzv0+UDx57EdKVVd/HlsxXalF38e24L1t8Wfx7Zk53Tx57EV7ZVT/Dne
f8bXxJ/Hlq/4NfHnsVVac1H8Oa7PS6XFn8eW4Y9h4s9ju9Rin/jz2O6vt0T8
eWytwkj8eWwHOy8Wfx7b5IY1xZ/H1mj1NPHnmN/ftxF/Hts/JYqKP4/t2MRr
4s9j2/PnNfHnuD4TEuLPY+t9bq3489hOf/+p+PPY5jTKJv48tvbrLog/j61p
19fEn2O+NPxS/HlsL2UfLP48thd+KyP+HPNxzwPiz/H9LpYSfx5j//SQ+PPY
sv2+Wvx5bFOOvSb+HD8v6YL489hOLZoq/jy2b4b0E38e25mqtcSf43naWVL8
eWzx4QPizzHOkVn8eWyz5k4Tf475nfsV8eexHf+7BP056znGb783Xvx5bDef
ay7+PLbSNZuJP49tY5/F4s9je7j7WvHnsU07PEr8OdabDweLP8f6cn8X8eex
teg5Xvx5bI9MCsWfx9bxnZPiz7FeDe8l/jy2le9uEH+O53FNBfHnsb3ferL4
c7zfx6+KP8fPe+QD8eexpRl1v/jz2GZPeFf8Of7/zhTiz2Nb07e6+PPYan3Z
WPx5bL9cfFb8OV5/7iLiz2Pr93Ne8eeY/7NLiT+P7cqYnuLPUe++WCT+PLaB
ueqJP8f7P3Ne/Pm/16ON+HO8nhRfiT/HevJlQ/HnqN+pt4g/x3ra8y/x51jv
kxaJP4+tYPch4s9jC1t9J/48tlxHW4k/jy3ZvEj8eWybviov/jy2Zy6nFn8e
W429Jv48tqBRTfHnsX1+ZIL4c3z/bkfFn8c2sdgG8ed4vhb3Fn8eW6aBqcSf
x1Z+1F3iz7G+vjFW/HlsbcZ8Lf48tmqjU4g/j+3nwsvEn8c2MjFS/HlsL6fI
If48tiE7J4k/x/jgPPHneH5ufy7+PLZ2N74Rf475WqqB+PPYHlx6QPx5bKVu
XhZ/jvVuYEbx56jPj1QVf47+5elXxJ+jHmw7Jf48tkHNnxd/juc5ZU3x5/h5
YVnx57E1SNdG/Hlsix7YLv4c/VfWE+LPY/u+5y7x53heu+YUfx7b6Bah+HM8
H3lriD+PbcK3KcSfx7Zz3Unx5+inLmYTfx5bmXP9xJ/j+40vIP48th+XXBV/
HtvZqufFn6MfHf+j+PPYfri6Wfx5bFPPNBZ/HtvJFrvEn6M/69hT/Dn6ld7d
xZ+jHj2RX/w55kOuQeLPYzu3Z4v4czwPBauKP4+t6yOrxZ9jPmY9Iv48tnfb
rBV/jvXy00ziz2Or0miS+HP8/5O9xJ9j/NStlP/5c/T7HU6KP4/t28unxZ+j
Pp5qIP48tiznWog/j+3VdT+JP8f6lT29+PPYCu9vK/48tvHFvhB/jnraubP4
89i2pzoi/hz397evxJ+jP3mgr/jz2LZ0e138Ofq1bPPFn+P99PlL/Hlsbfud
En+Oetjolvjz2Fa1SCP+PLYXv14q/hz9QZYfxJ/H9sSxa+LPY+tbL4f489ge
Ck+LP4/t44ov0p97fo75vry9+HOsz9XGij+P7dfZ+8Wfox5laCv+PLYPr5YX
f476tGq4+HP0YxcziT9Hf7FuifhzrNdvTBB/jp+f7qL489iWre4q/hxf/8Bk
8efY782vJv4c97tfWfHnsd3IOlv8OZ7HHJH4c6y/c26u+s+fx3Z0wjnx53j+
J78n/jy2zJ2+FX+O9fn358Sfox4n7yT+PLaF04qIP0c9vme3+PPYnlr/pPhz
rGdNeos/x/6jfyHx59iv2XLx57Ht+/t58edYH+Y8L/48tjF5Jos/Rz3cWFH8
OerX8Bziz/H9srcXf4759f6kHff9z59j/T/SSPw5vt+U+uLP8TxdOCb+PLbd
j+YTfx5bqi47xZ+jX/i4kfjz2LIW2iX+HOt/lb7iz2NreOZX8ed4vWn3iT9H
v103g/jz2F7LmU/8OfqRMyb+HNez3Fnx57Hl7jZT/Dn6pZofij+P7bmj6s/x
/Ne8W/x5bM9/r/48tq9fayn+HD9vsPpzvP+0ucSfYz9YQf05+sMK6s+x/2+g
/hyvZ6n689guLFJ//u/6sVf8eWwnvqws/jy2RN+XxZ9jvegzRPw5+r08r4o/
Rz0qp/4c62Fn9efoL+5Wf4794g99xJ9jvuRUf47+6rvC4s9j+6R0F/Hn6M8i
9edY/59Ufx5b88rJxZ9j//ZFZ/HnqKfXUok/x3q7u774czxfb80Uf4792YVB
4s+xP/6+o/hz1JujVcWfx1b58ZXiz2P76aPN4s9RX4dVFX+OepnniPjz2JIf
7yn+PLZCl1OKP8f+asI/Vf7z57ENTZkk/jy2BxYPF38e24xsq8WfYz34qI74
c8y3XFPEn2N9KlFZ/Dl+ftds4s+xPyzUX/w56vHX88SfY31OO178eWx/Tk4j
/hz7+xQpxJ/HNrnUn+LPsT8q3UL8OX5+8oXiz9HfXC0k/jy2FdMyiD+P7bHk
m8SfY33OHoo/x3wdPkz8Oer/yj/Fn+N5HTxQ/DnWn9OviD9HP5rqVfHn6IfT
1BN/jv1Hg/Piz2PrkGWx+PPY+qz5Q/x5bLVfaCb+HPuNaQPEn8dW89OM4s9j
K3ouSfw56ln1FeLP8Xrnp6c/9/wc8/+HL8Sf4/5WyST+PLb937QTf4714FYN
8eex/b7mGfHn6B+P9xZ/ju/3XTLx5/j3PSPEn8c2acBW8eexXQ/3ij+Pbdeu
XuLPsR4+/bz4czyfLx4Rf471t/xz4s/xfF2sIf4c/dJbxcWfo/8Y0Uj8eWxX
wzPiz2P7O9lY8eeoT0/tEX8e24FWa8Wfx3Y86XHx56jXk18Sfx7b2qN5xZ/H
1mnXXvHn6Cff7Sv+HP1plXfEn8f2ZrOE+HPslyZXFH+O9bJWQvw5+pHtTcSf
4+df3Cr+HP311UHiz7E+l/pM/Dmu18G7xJ+jv6/4m/hz9KuZx4o/j+320bvE
n6PeFtwp/hzzqWQj8eeYf6Ouij/H96veQPw5npeRNcWfx9Y6KCP+HPvn394T
f4714fQE8eexxU0Xiz/H+ng1i/hz1MsB5cWfY/83toD4czxP0Q7x59jPb18q
/hz7p+P1xZ9j3Cy7+HOs57mfFn8e28Uv0og/j+1ym33iz9Gv9/1D/Hlsd92a
Lv4c+78Fz4s/R38Ulhd/jvo9rpb4c8yPqlPFn8fWvtoe8eexDT79svhzzNcX
qok/j63b6DfEn2N9LtxN/Dn+/+Bj4s9xP/ptFn8e292VL4g/x/yZN0b8OdbH
16qJP4+tccEy4s9jyz/nkvjz2OYdLC3+HPvr05+JP0e/ljKV+PPYSqb8RPw5
+vVFr4g/x/Oa/pr4c3z/EkPEn8e2uPST4s8xn4+kF3+O67d8rvhzfP22l8Wf
x2a/LxZ/Htuzx7uLP4+t4hM9xZ/Hdu/s+8Wfx7bpxgHx56hXt038eWwlev8l
/hz96Oz04s/RDz3ZSvw55k/TR8SfY74NHiX+HPX/wlPizzFfb+cQf45+ofxe
8efolx+ZKf4c9dYGiT/Hep/6UfHnuN5RJP4c/fcPr4g/Rz85oLD4c6yP904X
f471YXRJ8eexjWo9Uvx5bPPPNRJ/HluLXc+KP49tWOdPxJ9jPSpRQvx5bI8u
2S/+PLZw1lfiz2M7uGS9+PPYxpYqIv4c9//mg+LPsb4tbCX+PLYUP78u/jy2
PJ8eFX+O+dUolfjz2Oo2zyz+PLb7e1wRf45++PZu+nPPz2PLlWyk+PPYNk7p
L/48tiHJB4o/j+2jz86LP0e9nTVa/Dn6t5bfiz+PbUGHHuLPsb9Kda/483/z
gfziz2Nrcrq3+HO8/8NbxZ9jv/9QW/HnsVWf3FD8eWzLezwp/hz7/V7NxJ/j
/Tf6hf7c/944+o1U9cWfY/+c1Fb8OfrN7A+JP4/t2sLZ4s9ja1eigvhz7P/n
9hN/jvqYt4b4c/y8q1XFn8eWY9VQ8efot54eJ/48tmqjBog/R78z4l7x53ie
22URf477P26c+HP07417iD/H19cdKv4cr++xS+LPY0uXrYH480yWsW16+vP/
P/4/94e4jw==
         "]],
        FontFamily->"Arial"]},
      Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}}, {{}, 
    InterpretationBox[{
      TagBox[{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[2], 
          Opacity[0.8], 
          StyleBox[LineBox[CompressedData["
1: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
4H/BNuMK
            "]],
           FontFamily->"Arial"]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], FontFamily -> "Arial", 
               Opacity[0.8]], 
              Line[CompressedData["
1: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
4H/BNuMK
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0, 10.}, {-82.3455386269981, 
               81.69097476884927}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
             "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 120]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2], FontFamily -> "Arial", 
                Opacity[0.8]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 10.}, {-82.3455386269981, 81.69097476884927}},
             "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], FontFamily -> "Arial", 
               Opacity[0.8]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], FontFamily -> "Arial", 
           Opacity[0.8]], 
          Line[CompressedData["
1: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
4H/BNuMK
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0, 10.}, {-82.3455386269981, 81.69097476884927}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {FontFamily -> "Arial"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[1, 120]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2], FontFamily -> "Arial", 
            Opacity[0.8]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"t\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{
        StyleBox[
         RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"s\"", "2"]}], ShowStringCharacters -> False]}, 
       "RowDefault"], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TemplateBox[{
         StyleBox[
          
          RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            
            SuperscriptBox["\"s\"", "2"]}], ShowStringCharacters -> False]}, 
        "RowDefault"], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"t\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{489.80859375, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-78.95683531411811, 78.95683531510099}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.935753182269595*^9, 3.9357531854696417`*^9}, {
   3.9357583571172743`*^9, 3.9357584591761303`*^9}, 3.935758739300439*^9},
 CellLabel->"Out[220]=",
 CellID->137969653,ExpressionUUID->"871cfee5-1111-49e6-b74e-d2830d1703f4"]
}, Open  ]],

Cell["How does our smoother do at smoothing this data?", "Text",
 CellChangeTimes->{{3.935758515257525*^9, 3.93575852781558*^9}, {
  3.93575857119413*^9, 3.9357585715906677`*^9}},
 CellID->1065906387,ExpressionUUID->"0aeb516b-f340-48ef-8b91-761fdd0c1ff6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "2"], "1"}]}], ",", "f", ",", "h", 
       ",", "system", ",", " ", "measurements"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1_", ",", "v1_"}], "}"}], ",", "\[CapitalDelta]t_"}], 
        "]"}], ":=", " ", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v2", " ", "=", " ", 
           RowBox[{"v1", "-", " ", 
            RowBox[{"k", " ", "x1", " ", "\[CapitalDelta]t"}]}]}], "}"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x1", " ", "+", " ", 
            RowBox[{"v2", " ", "\[CapitalDelta]t"}]}], ",", "  ", "v2"}], 
          "}"}]}], " ", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"{", 
         RowBox[{"x_", ",", "v_"}], "}"}], "]"}], ":=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", " ", "k"}], " ", "x"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"system", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"f", ",", "h", ",", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"0.0001", ",", "0.0001"}], "}"}], "]"}], ",", " ", 
         RowBox[{"{", "shmVariance", "}"}]}], "\[IndentingNewLine]", "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"measurements", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"List", ",", "shmSamples", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Measurements", " ", "are", " ", "expected", " ", "to", " ", "be", " ",
         "vectors"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"UKFFilter", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{"0.001", ",", " ", "4"}], "}"}], "]"}]}], "}"}], ",", 
         " ", "measurements", ",", " ", "system"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"shmSim", "[", "\"\<mass1.s\>\"", "]"}], "[", 
      RowBox[{"%", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", "Dashed"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9357585298084*^9, 3.935758744375084*^9}, {
   3.935758784095604*^9, 3.935758888333675*^9}, {3.935759261268632*^9, 
   3.935759319218103*^9}, {3.935759349636642*^9, 3.935759353741358*^9}, {
   3.9357595199165697`*^9, 3.9357595264045486`*^9}, {3.9357620159870872`*^9, 
   3.935762016818552*^9}, {3.9357673694623623`*^9, 3.935767398542192*^9}, {
   3.935767470725638*^9, 3.935767473981504*^9}, 3.9357675214046373`*^9, {
   3.935767551862814*^9, 3.935767552007256*^9}, {3.935767739793622*^9, 
   3.9357677401482563`*^9}, {3.935767777874144*^9, 3.935767783277076*^9}, {
   3.9357678284700823`*^9, 3.9357679495090847`*^9}, {3.935768040132188*^9, 
   3.935768040218025*^9}, {3.935768654380321*^9, 3.935768891131181*^9}},
 CellLabel->"In[315]:=",
 CellID->1320646506,ExpressionUUID->"67cbe1db-d393-4b23-8131-a58d71d05736"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[2], 
         StyleBox[LineBox[CompressedData["
1:eJw9e3k81dv3vuqGLt1UlIZbp5nqohkNHjRoFiVzxzznmGeO+eAYSopGCWlQ
SqTRKQlNTlQooYEQ0aBo/Pm9Pmt/7z/d57W9vd97rb2eZw3bNGt3A7uhEhIS
ncMkJP7/v//7r1eL/gfs38bnLkMClzIsjVMPOjrjJzIshxP/XHowdDjD8ug7
8Hi4zJw/9HsUsUch8Gnow9+EJ8NwxUC2rSLDHBy5Vj8qU+cX4ekoLpJ9sazu
J+GZeBHGWZO0mOHZMOz6VPfR8wdhJYy23fng7oTvhOfC5Xl449GyfsLzsTh8
ZEyWzzfCKlhzou5Y3oyvhNWw4N9C3oj8L4QXoH258EL17U+EF+KQsvrinPfM
Lotwvznzubq4m/BiLMv2V3t9tJPwEviVLDZz4L0jvBSnFGrCSpXfEF4GdxfJ
O2FtzYTVITc2z2WTUx1hDehu8ZBR+VRNWBMWn0bt1La6QXg59j/l8gqL7Qmv
wKpr/g/9fEtL/4dXQjD8e0/SQDXhVTjh+PlwsGo9YS3MV9vhw4lqJgzE3HOr
3pDx9n+YD7T37dzTqdFO69r4EeapMOHTe1rXxp90ZfFF3x5a18ENhQbDGUs+
0roOnpqJ0kdf+0TruojCwH07rS+0rosp/+3rWDr2K62vxqHDvyOVM77R+mpc
kUpxmFjQT+trEKV9aW/yv99pfQ2GLeubIWH5g9bX4tnRhKsmM3/S+lqounrd
qJ7yi9bX4UqkWKLgD2H+Ovik7eU+Tv9N63p4/USvTK2PMF8PBulH/Q44/aH1
9dB4VFKbrk+Yvx5+D0Omv73E1jfgnqPrg86HbH0DPmsNZKy6ztY3ovJjkNDt
KlvfiNwpgtU7FrP1Teg7aKDcdZC9fxOkOn3vTVZn37cZ32VnedTvYN+/GXmz
vV6PPEf7ldiClaUx5TkPyR78LZByjlOYtZfsJbEVUDPqLF4zQOtb8aFTzlJo
yuyrj9Gnr0YYriX7Qx+bq7bN+/Orj35eH82pHbuxjvwn0seP1V1CyXLm321o
PSS+GzWG/I9tkIgsd3xz9AM9vw1jqm75Kpp30vPbIBOscnLtinf0vAGuuNW/
uJnyhp43wDuntcXlPnQ++QZYYfluw73COnreAL9cZ48UnGDn2xC9sampXn/o
/MMQdbqfCpt89vwvPviGOPavi+epZtH/sMgQHlaljyArpvjZDpfj/43qv0rx
h+3I8eQ3Z9VQfPK34+V3uevccxS/ou3QvBijPGE7i+8d2Hzx29h5Y9/T8zug
Ni2uJ675Az2/A/bWZx3mr/pIz+/ATKsXroseMn4xgsGSft3QVcQ/MILv56i0
jIg+et4I2el654s6iK9ERvi06dz8imWM33biyVdzu4prA/T8TqxeNCry6jXi
Q/5OzFd9U/S6hvhStBPXJNSyr3QyPjXG/WLYXckh/oUx4gM/aeluJn7mG+Mt
t2ur4wvCImO0JrjcK/Bm/G6CpZc5cpPqCcME6etl8q4OJT3gm6BvWV79uD+0
LjLByU+HLprKMb0wxfwvU0eurmDPmyJzX3DguQDCfFOoGo+23/SFvd8UFn2/
a7TNmH6YwahJZdSn4+z7zSCZO2kg8Cztj2+Gj3/pe7Y9Y/s3Q52L5lbvKqYX
5mhMWyfnfYrZzxyLBBGVyulkX745Pi968j7OiPRDZI6VM/rXHVRn+mEB81MS
HyxTmf8s8Ko/0ffMAPmXb4FFU60SDcyY/y0wYYiLOCmth563xMHZ44Je5rDz
Y4lWLR/ZpQvb6XlLVHdn6TobvqXnLXHMzNxquEYLPb8LQ20Dzk60b6Dnd8Hh
5chZnfI19Pwu9GWae55JuE3P74Lsmo83Vvp70vNcFL3JrThSePN/8cPh4v3h
DpnXi8UUT1w0T/pVHnuV9IPLhUpr6/lT51h8ciGv5jbQdoziN5OLi6dlnfsv
U3yLuAj2XtgcbEH60cJFsp2Va7cC0w8ryBW1FVz53Uvvt8KYLsOfmlnEL7CC
W/u/q+XUiH+4VsCzB4rOjxg/WeFyvGhGrRXxV6YVNozRCPhyhPhNZIXzvIn7
nvcT/7VY4a+gQydeTGH6YY11N7cuDVMlPuVYY2q9akzRHOJbWMPdfNJR1THE
x1xrZG+3Ulc4zPjaGsqXpn6RnUp8nmmN6RYnxbe1CIussTyjX8ea8X+LNbZb
LAxp7GT8b4NHn2SMHXsIc2yg37Kg3riJMGyQenFP/t4CwlwbxIWI/KI3MT2x
gdlKN+kHZfQ9mTbYM84ubP92wiIbOChdtJ9ZSPtpscEYvyGtYTeYfthC+cda
rTOz2f5tsV748eiz16QfsEXN6MIrH8rJflxbPHt1ZIFBEtmXbwuLOY3ZqQbM
/rZQjzZLKXhF/hHZonZx/BhdVfJfiy3i1CfbdvCYfthBfrpO1aWnzP92cP9Y
vlTDivQDdngoLtyis43OD9cOP6bYHzh5i84X3w52mjl9s1Uof8m0Q//RVYuW
O7TQ++2wRdXn/eE6Or8tdnjU3lwbp/iY3m+PyqVvH6b236L326PUqL5EpjSR
3j+Ie/7tVzKm/ItrD07EnSUrkyk/49sjWheeT5pIPzLtYVH77OmUw6QfInsY
7hIu+FlI+tFij+m3zv7zyZ/phwOWNa8QWnpT/HMcsHfV8z0iaeIHOGCbn25y
XQDxB9cBPINd+hd7GL84oNihe6NxGvFPpgMU+w0EBV9JP0QO8PnNKXivQvzV
4oDyf89f6TNh+uEIk3t6W7suE/9xHLH4QMP4hDHEl3CEbTDnxrdRxKdcRyy/
vGpEkxfjV0eU/2zpzN9C/JvpiMffris3TmR87YiGzrCVeVWEWxwxr9tn2JLp
TD+cBvOp1v3+2YQ5Tui8fuBxIKs/4IQ1WToWfAXCXCc8UG2o3zyM6YsTjrw/
obnpLT2f6YQhxi9uW+cwvXHCMKuESoN5hFuc0KU4/+Oy40w/nNEU6R7cKUmY
44whKz4P7ZvG9MQZkquqDz77RfbgOiOjd+BYhSRhvjPKYg6s1BpFepLpjF/b
4ny+9JN9Rc5wbPbp++7F7O8Mne4Sr4Jq8o+EC4Z4b3n9kE/+47jg2/YXw0sK
yL9wwb27o6S/iqn+4Lpg75mAjJujWX7hAmF4TYy0JtUfmS7QeDqlcdGPNnq/
C/ZXLGy12cXOnws+V0xKKD7aRO93RWFP1LB16s/o/a6o/pm57angPr3fFRcW
jHiiV8vOvysG5s9aYbVBSPHnCotG9/OfDG5T/LkiZb2JLE+b4kvkCn6RWpP9
TRZ/rlj2fuNLQRKrP9yQ2x9ybeAZ6QfHDaOGlvwc+4HiG27wzuDOfjCui+Lf
DaE7JhYd9yD94LuhLydop0cA5Z+Zbrgf/vb9zkvELyI3jPm+ydVKnfGPG34N
1W7TTyN+ktiN2bbx47kfqR7h7EaESUX5CZYfYzem6r4cz9vL+G83jN8ePVud
zOqR3fgWWlNW10J6krkboqvfu8UVxKei3bi+QTV3917Gv7shvt79Y4smy+/d
sV+paILmV8Icd+iIR148H8v43x1CxVJOXQ7jf3f8U3tMdhOrL/jueOmiP9Nh
hITof+93x/X44Mn/vWP6446wyS+s8o4z/XGH999NhQ4TmP7wYDzxTrvWMXq/
HA+tYy1vpPyi7+Xw0PdibNXsMMJqPCh/uD8qt472Bx4uaU/bNK6H9q/PQ+7P
aP1LYwlzeTg3ZjHX8gfZj8fDF9FJD9t9TD94SN/hI92mTPqRwoP7zA2dPfXk
n0wezA//qZCxJv8V8LBs3+7+4h7mXx5stsuI3TaS/8WD630etXF5pB8tPOhU
C4dockk/ennAke8Fx8pZ/eGBGQOazeNi6PzJeeBusKqweA6dT44HaqebfNs0
m86vmgf+bFOS8ZZn+ZEHriT6HXOZKqL9e0DWz9BDydiG9u8Bn+j7i1XEpf+L
H54HcqfPulPpxfTDA8tfBUZdqCT9SPHADbXhfhXzST8yPRD9dIWx81mK3wIP
DOiWNbew+kPkAe7YxsMvayn+xR7wPTg2UJxM/NDigd3J404mPyf+6PXAjzet
5y2FrP7wxORxbXcD5hL/yHmidKZv67IY4ieOJ/K/VsmenEb8peaJrrmWxVH5
xG/wxJhFGtMqU0k/9D0RsvbkCIszxIdcT1RfcoD5feJLnifMvktwW0cRv/I9
YTe9rCisnHCKJ1qW1BntXUl8nOmJ3ev119/sI1zgCSXNAG2bg4zfPfF8V2L6
wdeExZ4I2/Hx+LcxpA8tnpj61+cM/Eu41xNRtY9utDE9kfDC87BcfmkuPS/n
BaU3SYr2JUyPvCB4l2bapUJYzQt5WQFyfSn0PfBCS5rF9A/Z9P36XsiIfzA8
nNUfXC9U7v7Wvf8vwjwvLBZVL05uZvWZF45kNze5PiP7pXhB6uWNzvZ9ZN9M
L8x9uf1vR02yf4EX2kXd+ywymL574dC5eUf2S5H/xF6YeqIjj8Mn/7Z4oVvd
NEV+BOUPvYPvn+W8xD2czoeEN6R6hlx44Ez5h5w33O0tQtJ06HxxvBEdWH3T
rojOn5o3ni8uH/XWgs4nvDFi1kwrm146v/reEDzYPpH3jc431xvx1qr9BUa3
aP/eyMmue+sdH0n790brrcf1in+o/kjxxodg07Tt6Y8o/r0x/uyA0ZH3zyj+
vdF0c/+P8mEUnyJvfG5I7f7hT/Er9sZuw+knxx+j+G7xxmx9rl3nChb/3nAs
7aozqyN+kPBB0+qGV1briT/kfFDEL/AxuUz8wvFB16TWqXWsf6Xmg+Fpa7+k
sfoDPphyOStX3ZH4S98HEUH7nN4eI37j+uBK85KN724w/vPBEYWPb6vlWb/G
B6uLK34c7SKc4gOxSq2zVCrxa6YPbmgdeHVag/i3wAetrxOEx78SFg3+vOSo
gBeriL/FPnjpYRYa9pRwiw8Q8n7VRiXi+14frJtb/kXOi/G/L1Y9DR09M4Kw
nC/k36UWVx9k9YgviparDetYT1ht8Ofdo6YJftHvhy8urvyoVX6XsL4vJFRr
PvyZyOolX1hbZY10W0rfy/PF3hDelHNHWL/OFwbitnNSt9j+fXGif8fT47Gk
r5m+4PWYvTiYRfYr8IXLsp2nxvJZfecLjWPi7Ut3kP3Fvhh4vEBi4hfyT4sv
LG5Jpm4wIf/1+qLUxfShWierP/ywZf90Q1VX5n8/NLvMVj+qS/kFxw9vR50c
6Tyc8g81P2xo6/5lqkb9UfhB3Ut39AJTqj/0/XBxw5Yhc3dS/cH1w8LWmT1Z
20g/eH643c3nufqTfvAHn0+dP73pIelHih+WR4ufO9QEUPz7Yc3Vp7FdttS/
KvDD5ef+4/tdH1H8++G7s/zXjLeUv4n9oHg/s+bNZorPlsH9tRyZK+lI8dvr
hwVbF0yrc2X1hz+67aZs+3sbi39/mA7dyxMuovqD44/cTWrXcrWIP9T8oXZS
efnWIZ8p/v2hdXfgS1Ig8Y/+IDY8O2baa+Inrj8kNJZ2np1L/MXzR9fOly6R
mqy/4o8mp0Zli72M//zhf3H76Yx3LJ/2xzPTN6Y7hhN/FvhDo6723oL3hEX+
ME7b5Me/TPwr9ofbRZVXHGNWb/jDJkt1Y8c04u9ef9xe3uNoYMPqjwAENl42
WnKE8X8A/rORWPuI1ROcANw+pmK4oIfxfwBMnys4SV5j/aoARN+J0si8RFg/
AJuV7YOdwglzA3DztXfSpl76Hl4Askaee7B3J+uvDb6v1lRuzgWmfwFo3d1T
qTic1VMB+Gjh4xKsxPYfgFVyd/ODOKyfFYARhjKndWXJXuIADFuRf82+muzb
EgA9pZwB0S6yf28A/CbzG1ResPojEOqTMnyj/Zj+B2L5NIuP65tJPziB6Hxj
GnpWnvk/EPwIJxmDXaw+DUTO7B+6cX10fvQD4ffmVH+GiM4XNxApSLH2HU/9
K97g7z9iF+C0kPpX/EBEN6xQaMmsp/0HoutC6NZ5sXS+MwNhOpD+WufZNdp/
IHxfb5b3nED1uSgQl7T0Hb82Uf0uDsTIhmm8iACKr5ZA2EekOMmcpv5xbyBm
rj2uoHemieI/CLclVH2LzrD8LwieOi/1Frwg/eAEoV1h621pNv9QC8LKbs2S
k6z+QBC+iUfvfRRC/KEfhFUzqqQa/xC/cIMwylh29mId4h9eENZUOB42e8b6
V0HIMZO58Ws5y3+D0Gbz0f39ceK3zCDsmnJwBucv4sOCIJxSu/RaZzvxpSgI
78yXhM1YS3wqDoK4bVRTLpt/tATh55oBdR0F4uPeIHwxTL3flMDqj2B0Lc2f
NuU1y/+Dod8f8nC4NuP/YMyY0qVR0sH4PxiNsVayE8ZRvYFg7Hbv+ZakSFg/
GGM0Wh529LF6JRhbKlS+VDYT5gVjYXFtck0eq1+CkdwxLrxWj3BKMC5rRE16
J2L9rGAcMZeztRYz/RvE93iZ/o9ZfRWMqm8ej9pekz3EwfD4zzghp5fs1RKM
sqgtpSmsf9UbjFLvvLP++Wz+EYJLTipTlTeS/eVCcOej4/o138k/nBAU3sjs
NY5g+h+CtoZvgu7vrD8ZApszZzzljZj/Q+CS+m33X28ov+CGIEJOPa9Akc4P
LwRpy3vHWNmy/lUI5k4983Z1Ap2/lBDMyWoPk3Wl/CZz8H1zLyTnfGL5Twg4
c6bITFGn/EgUgqLfFkUfRrDzP4gXmhzmjEmm/YdAMXVzaFnHVYr/EDzhLrzR
xGfzxVBYaxYP9H6k/E0uFMUKcXd791B/gBOK+ze9F/GnsfwvFK762ZhwjvoL
CEVBZ3XS9KdUf+iHYqfPfdvnSpRfckOxau6CF23NVH/wQtE9zqd3TgTrX4Xi
2YpijZX6xD8pocgvfJdx8TzxU2YoAvba7tFi/auCUPg7T5UvP836K6HIKa9T
7LtH+iEOxQzHmbMCnxIftoTiltvvF5yvxJe9obC4GT23sZvNP8IwxatIpZ3p
h1wYTM1OdLbtYf2gMKT63OucMZXxfxi0azYd/lbE+D8MR7s+NH+tZfwfhn/m
nVpoOIn1q8KgonW79fEswrwwBO+5flpbhvWvwnB/3q14LTYvSQlDwh5hIW6x
flYYZGaaLzTQI1wQhm8jFtacLWf9tTDc85gwy30GYXEY9AqGOueso/20hGHP
NsWDfVq0394wCHsfBf9YyObnfFie6F6oepXsJ83HXsnmU8+2k33l+Gg6EvCP
sQTZX5GPkd86ppceYfUhH10zRnTYzCf/KfHBW7Tz3Aot8q8aH5NGrBwlfZH8
r87H5Yhj63MW0PkAHwtPNFSVSJN+6PExUPaPxlMT0g99Ph4XGHqJT9D5M+bj
p637nE2SpB9cPtLUzStDjpN+OPLxS1L+Uu4Jmu/x+Bgy6XpjdDflT/587Lul
HHinOZjOHx9FHdMabYVUfwj4OJL0ZoK6PM0XU/hwVV6isfk35W/pfLSUW4Yd
N6X8LpMP316fIsEHit88Pg48u9fXeIjiu4APtZwvX2b9pvlnyeD3BklO236K
+EE0aM+N64+/a6D+dyUfXxfn1uZ0EL+I+Xim/+aFbCzxTz0fng4b5KW+sfyW
j1t96Qf2+BF/tfMx7NjJ2wMNxG+9fBR6XE/xGUZ82M/H2WSEzRnO5h/heBgb
ve6vT4Slw6GxuXzK3WbiV7lwjBgws7l4jfhXMRzbV92Qe72Z9avCUR3+LiBI
TFgpHE8Hfs2qk2V6EQ63BRU9Wqx+UA9He+fRW1fPsv7WID75oG8G62fphaPc
UlWxbijTk3DY3pYXh/+ideNwyA51nGdWyPQlHAq5fTWLZxN2DAcvIj/VwZe+
hxeOkzczVG6doe/3D0fRtLdRz4eyeXo47h7pOFU1QPsXhOOHw4wAj5GsHglH
22+ZVUmvSD/Sw7FiaKJOXQbT53CYK92e+n092T8vHJ3FP6ozj5N/CsKhkvjP
sjtM/0vCYVfsJ2VdxfpX4Qj7W+rEf6qkH5XhqJO4qXnamfILcThCCvQeSf9H
+lE/6J8ugdGfA6y+DUflTu/qN7l0/trDcakwMyRFh85nbziil/br+2jQ+e0P
x6bV2We1JSg/kohAsGN9w+UC0g/pCLiNnTHa5GMI+T8CxhpXs2rfUPwoRuCo
7nnHi/MpP+NEYOOt6J6KQ1R/KEWgSmvn2PlVpB9qEYi7ZGvynzzFr3oEnDKE
EsMamX4M/v5OM8lpn0g/9CJw9e87ZwYiiR/0IzBkR978jLmUfxpHIHuSa6PB
c+IXbgR+yafr5NsR/zhGoE3JqWTMYprP8iLwKZRT5nCE+Ms/AgUnrnAnSRLf
8SMQEui++rY16YUgAqr9PWm7jIkfUyLgeNnY57Qm8Wd6BPxHSI4vmcTy8wjM
rEqVPTuH+DcvAq492+8q3mP9qgi81JvRW7GQ+LskAnlvWjP9DVn/KgLtXq1j
He4SroyAd3VNyqhK1s+KwCnVNf95vCRcHwH1orFzW9+xeUYEalw7zItSCbcP
2j8qpP2nNqt3IvBdZ1FM/DX6nv4ILBsyvmjkNjb/iMQal6xxNmdpP9KRyM+2
+09BiulhJI6XXLi8Vor2rxiJ7z/mbmv/SvbiRKLQYtRVmY9kT6VIrP8w1WnP
LdIPtUikXRDalVmS/dUj4RFXp2zQT/qBSDQs2HduXwD5Ty8Sh/KjPr/qI//q
R+L61EM+ZoXM/5HQTr86U/MX1R/cSJzPdrY0dOsi/0diUpE4XhxJ83NeJFYF
2R6XuE71h38kHnTMeuqYz+qPSBw1TX25zJbm54JI+L6K3lvcSvqREokF4/PX
yjRS/yo9EpIta15K7zhK/o/Ek4cmJ5OdrlP8R6JFb1GJ33SKr4JI7Py8sHVS
PcVfSSTOnjgjZaXB5pORcLipO/F5NcVvZSRGD1k1ZEwSxbc4EnOu1wnNTFn8
D37/Dj37TRLEDy2RuLM/uXQi61+1R0Lpk924vAril95IxM9rSXfZTfzTH4na
SebDU2+z+UcUphk9Cx4/gfhLOgoaetg/Kp74TS4KeSu3JsheI/5TjEIsf8/4
e7WkJ5woGO+PUHKXIL1QikJksFlfVBdhtSjsPd3t+qGT+FY9ConBrYuPpbH+
URRezJYTtLky/o/C37uTvvn2EtaPgmz+CH6YEumBcRQsi/LnGC8mzI2Cp3TX
4T2s/nCMwtL6wEcH/iLMi8KxjxuDa6vp9/lHIUz/5HcjA1Z/RMEn602zTg19
jyAKOY8EGfLWhFOisNhkatbuWvr+9ChMmnHrP+de1p+LwsQVd9OzFQnnReFm
2yPV4tGkHwVR+DwuyX5OHdmvZPD9T35muLL5hygKAQbV77O/0vypMgpamouf
7jhN/hFHYeRYoeR7S6b/Uej6N3PAvZL82xKFnWEVuzYoM/9HwctDfPjLR8ov
eqPg0pHrd9SMzk9/FEKW3Hu1v5bNP6JxdkN7zx0N6l9JR6M/xXXjY3U6n3LR
GCk/fpTUEjq/itHINRk6v0qK5nucaLg1Su3K7yb9UIoG3pja15avJP9Ho1J9
b+YEa9IP9Wgs8Vg1sGIH1R+IRqrTo57suVR/6EVj7pR6j45u0g/9aBQp5a/L
FrL8LxrTfkSkBHFYfyEa8mGvcmvFpB+O0VhuEaKqYEP6wYvGphHt7XNZ/9s/
GrzrvEm9l1j9EY0X+jp1NV7EP4JoPK/61ec1jvQjJRpTkg1/lGYQf6VHY62d
XXVPK+vPR2Pe7z8uD9cRH+ZFw9Tmg3bWEtKPgmh0TS/7snYK8WdJNNaYpJ9L
kyB+FUXjuINj9YSbhCsHfz7CoLTSk+Xz0Yg9oZcv3U64PhoT3655tCSO8X80
Tu37mCxoYPwfDcdbaftt+xn/R+Pg6EWSyV8I90dD959Ql8pW1v+KQam285S9
CYSlYxCmWH/xqhvrh8XgtXr2OB92/0oxBkNvvK6b5sHqoxgsnR5q+Ok9fb9S
DJYZ7VFc84H2qxaD0dl5NV+cCKvHgO9Q2TNiA7tfEIOWqwpLUp+QfujF4JuC
apH6FbKvfgw0XM4Z6fPI/sYxyNm9Y/JRbfIPNwYbDdxGLzjE9D8G4j97F/4a
Rf1JXgx+qK6epbia+T8GxkeWhud0s/l5DDr8E7++zKb6QxCD+FN+WgVxpB8p
MXCe/N+EfYdIP9JjcLx9xd9/akk/MmOw5u7I+16RpB95MfCqX+dXbEv6URCD
6bdXlx7/XEL+j8Hzosm7Nqnso/iPgU+i2b7N9jQ/r4xB5FadOWvCSD/EMdCy
en5kexXFX/2gfXP5f8uD4rMlBgaKITP9nrP8LwYeeyIfHnKi+O6NQavG6QEE
sPiPgUqYnyR/C7t/FQv3kIsCw2jiD+lY3DddZlk87jPFfyxyhpZrXwwi/lGM
hYvurrGTHrD+SCyqs1ClaU76oRSLjKFTe2IvEr+pxeKC3T2x0U/iP/VYdHy3
iIzVJH5ELHglkty3fOJPvVj43CqeN9aG+FY/FjeWDmyOeEDYePDn1VSkNrqy
+UIsTMI//k6tJ+wYC1/LkvirrH/Fi8XdxinSO9j9Kf9YLOFmnGnKYPwfCz/O
cml/pjeCWPwlcL1c+ID1o2Ix5FjNvuIrhNNjYaP9pKKR3f/NjMXs8ZfkZg7Q
+/Ni8atUsjo5l3BBLLrNHQ48ZfVTSSwmlo3d5PGV9a9iMT9hketRdv+qMhZG
UeMP9CqyflYsNgrviHznkN7Wx+KKN/fwqCtk35ZYbFOe658XyOq/WCg65EuZ
PyX/9MbiTeSi57Pcmf7HIk0wceDuDTb/EODTuYobtlep/pQWYMsO3fz3lqQf
cgJc1JBoaLGi+lVRgI17/mjXF7SR/wVokJ8tMTuWzp+SAOPHLBm6jM3P1QSY
OjtCf81M6r+qC9DR2H+iqv0h+V+AyjPtWruLrpL/BeC8Sn9dp+pI8S/ACI2s
7Mgcmp8bC/ChZ4q5m/Rjin8BGiv8hM+qWP0vQIqkR/qXXJp/8AS4te2T4PBx
0g9/Af680l4u00v1B18ADf+iX39iST8EAtgfL4kfu4P4IUUACbUE/1m2xB/p
AsR/ntfooEL8kjlon5ZlDy+kEP/kCeAVPc64aCTxU4EA9ZPndP3kEn+VCJD4
fMiwIYdY/0oAqXOanSYviP8qBTix6MtfUycSP4oFyPu0Z8N2Nv+oF+Bl/NyW
UdNZf0eAhUg9L3WIcPugfUvWnlaWJX7uFSBcHDHZ4yrL/wUY9UDfeOYExv9x
MAmTMzpdyvg/DmWqM46l1TD+j8OWpOeSs6sIK8bh16GZus9YPcIZxIk2W+QL
CSvFwbIh3KSA6YdaHKrPZd/ht9L71eMG84d9+bVabH4eB8ULn/rH59L368Wh
ScXsscRQNk+Pg83hgxNjJGn/xnE4JKlb9mQfu18QB/mQl0ZZZ8h+jnFw9Fym
1mpP9uUNrtfoSnBmsPovDoPsGNZxk92vjsPBv4QeE2yY/sfhwJEDHovPU36Q
EocEg8q6LzuZ/+Mwf2NlkrYK1R+ZcVi96ad96mbSj7w43Dox/UpYI+UnBXFw
+9c9fMkY0o+SONT6exbKWJB+iAa/t7iwfJEsnd/KOPgJ/Sb3K5B+iOMgZfbl
2gN1qj/q43B4GnezcFcG+T8OmjoVg5JE8dMeh3qPMeFZBg8o/uOgsNDd5J80
6h/3xyEpb4+KxD9s/hGPB7ft8iQMKX6l42HgpXNOoEX6IReP6tnndpyVIP1Q
jIdAXfvxVjHxAyceYQ0xWspypB9K8biQxZcMyCV+UYvHf1G7OxaYE/+ox0NC
iBVjK9n8PB4qjhIDZVziL7141J+aW/s2m/hNPx5a8ibfNJtIP4zjUdbr9v2X
KrtfFA/9h22vKkcTfzrGY1vhh/a494R58fhmVlp6l83L/eMhvef8/eL/u78b
jw319T4h4Yz/4xEbUr66nd3PTYmHjKnOc8Fdxv/xsNTOe77wDuP/eJxwjjn5
6h7hvHgYnRaVNbD+VEE8st8sS1rG9KckHpP3KK/+v/mKKB6uM/Pnn2P6VTlo
7/jhmQFBbJ4fD3HrqNf1X+j76+Ph9bfFQmknNt8ZtO+Pz/0rzWi/7fFIDFLa
v+Ufsk9vPJ4nzTv5+yDZrz8eS/bF9G0KZvOPBDSFN5k0sb//kE5A9U0vuWG5
5B+5BCy5cmBE4BSm/wlolzUd/zKa3Y9IwKeBU0cLj5F+KCXAcsUZhxgtOh9q
CVArm/A05xvph3oC5CI7K6202f2+BFxd4X/IcATVH3qDv2/6TMGiC6Qf+gnQ
GfvdpNGH8h/jBMz4VrluXwzlR9wERF/Y5jX+LPVvHQefj3H+d0vVPor/BPC/
Www8ullG8Z+AVxbHh1dlkX7wB/f/RFKpo5riT5CApRvmntnL7tenJMD9Rtje
BrD8LwFZEx8Oscih+M5MwPDPh7PWybD4T4Bo7EJzw32kHwUJqCl6sv/8D+p/
lySga5yvfLsl8YsoAVWB/k8CJhP/VCYgcvT2+w9KiZ/ECdCz9+F6TSD+qk+A
INer9ye7X9qSgL8XCUVRn4j/2hPw086H12/A5h0JOCD196Fr5sSf/Qk4cdOt
4Pcw9vd2QsT/TpFtr2L9HyHsra12tTkQP8sJobzOe0JbNcv/hbDwybS9PJfx
vxAfkl98emzE+F8IqYu33VOjGP8LwT/yb2HlacLqQuQ/SoHcYzY/EcKwpXTY
eEmaf+gJcdNSdzmvkc1ThDgvtWLk2RWEjYW4Wzlb+OUOfQ9XCJU0iQPNQfT9
jkKMl/Y5GdLM7lsJ0Z96puPVa7KHvxBrjGcsa5jO7u8KsXWu7EEPZj+BELfC
rKvPnyH7pghRdS97xWFbVv8JEftukUb3MNL3TCHa9AvCcyyY/gsxbNGBOIU0
8m+BEIdtxB/i2f2JEiH23FW8P/of0g+REJ4Nj1/NL6DzUynE9+bdzZoP6XyJ
hbhhffbC5w7KX+qF2Kcd+m6EJp3PFiGmVAwkdcym+qNdiBh5myDt+3S+e4W4
9m7HtJWXqP7uFyLx3l3TiuQgiv9EXCk8UPhame6fSCfixc4nge7rKL7kEjG2
tl36wXHK3xQT4RomVVoxk92PTMSGYfMPfLVg+V8iJj891FW4nOJbLREHA0NH
RCwg/VBPxI6EFxdl5rD5eSJ8lusvGRgg/tBLhPyB6ogJrD+unwjtoJwLN9n9
HeNEGFb9/TapkfiJm4gsDZPxZkuIvxwTUZUX0RlykPiNlwiX+SNP3S0h/vNP
xN/fe3fcrmD3dxOhcHhS5tE3rP+fiJM1fVtV2Xw5JRHjnQJevjrK+j+JkJm6
ctEkfTafHrSHvcblYz9Y/j/48zfH3DNcwfg/EQdGrEkZKGL8nzgYTzvX3R9G
/SlRIuZwxQrKUoQrE9H/0LV/3W36eXEitt6T3iBVTrg+Ed6cmZ1SW9h93kR0
lfk1fP5M729PxDzfwwrZb9i8PxGnEvMHpPvp+/sTcWnd5XPT+9nffyRB1UhU
FschLJ0EyR/rjL8uInvIJaFeFHpgchnr/yUhvENy4gRLsi8nCeN8pA+9Z/ZX
SsLcjQ1pHKYfaklI2V7x+Z8Apv9JsNkSa+jay+bnSTAsGbspbQ7lD3pJOH2X
I7a/T/qhnzTIv5MuzGP5h3ESdGVePNJwo/PFTcLHmcnxP8/T+XNMgu+kW3Xp
KlQf85LQk33upziNzq9/EhJGNNasmUjzc/7g912fPGHopWvk/yRI24tv9Rcn
UfwPvm/rzgUH196h+E/CFVujIslyys8yk9C5XHbX+ETSj7wknLx/tX18EMVn
QRK8vMtqMoxY/jeIGw2+NlWw+7tJyJ9UMaL+Oov/JKhfGnA5ak38IE5Ce9nN
gaQVxB/1SSh6FXKvrZjd70yCy1DzB2U84p/2JHjb12363kH60ZsElTMO96yP
En/1J+Fq8mGz6EL29x/JGFjtrP/vUsqnpZPhve73zUx14ke5ZGzjOzm6qrH+
fzKuPxLLHXtKmJOM7x8mzxt5nvV/kvHBJ9965TjiZ7VkFL4V7t8Vy/L/ZLhd
keH/Wcv4Pxm6137dirlBWC8ZHk6i+/lDSA/0k5Fzwf6wuYIE/h9Zh+uh
           "]],
          FontFamily->"Arial"]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.006944444444444445], AbsoluteThickness[2], Dashing[{Small, Small}], 
         StyleBox[LineBox[CompressedData["
1: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
           "]],
          FontFamily->"Arial"]},
        Annotation[#, "Charting`Private`Tag#2"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"], 
             Line[CompressedData["
1:eJw9e3k81dv3vuqGLt1UlIZbp5nqohkNHjRoFiVzxzznmGeO+eAYSopGCWlQ
SqTRKQlNTlQooYEQ0aBo/Pm9Pmt/7z/d57W9vd97rb2eZw3bNGt3A7uhEhIS
ncMkJP7/v//7r1eL/gfs38bnLkMClzIsjVMPOjrjJzIshxP/XHowdDjD8ug7
8Hi4zJw/9HsUsUch8Gnow9+EJ8NwxUC2rSLDHBy5Vj8qU+cX4ekoLpJ9sazu
J+GZeBHGWZO0mOHZMOz6VPfR8wdhJYy23fng7oTvhOfC5Xl449GyfsLzsTh8
ZEyWzzfCKlhzou5Y3oyvhNWw4N9C3oj8L4QXoH258EL17U+EF+KQsvrinPfM
Lotwvznzubq4m/BiLMv2V3t9tJPwEviVLDZz4L0jvBSnFGrCSpXfEF4GdxfJ
O2FtzYTVITc2z2WTUx1hDehu8ZBR+VRNWBMWn0bt1La6QXg59j/l8gqL7Qmv
wKpr/g/9fEtL/4dXQjD8e0/SQDXhVTjh+PlwsGo9YS3MV9vhw4lqJgzE3HOr
3pDx9n+YD7T37dzTqdFO69r4EeapMOHTe1rXxp90ZfFF3x5a18ENhQbDGUs+
0roOnpqJ0kdf+0TruojCwH07rS+0rosp/+3rWDr2K62vxqHDvyOVM77R+mpc
kUpxmFjQT+trEKV9aW/yv99pfQ2GLeubIWH5g9bX4tnRhKsmM3/S+lqounrd
qJ7yi9bX4UqkWKLgD2H+Ovik7eU+Tv9N63p4/USvTK2PMF8PBulH/Q44/aH1
9dB4VFKbrk+Yvx5+D0Omv73E1jfgnqPrg86HbH0DPmsNZKy6ztY3ovJjkNDt
KlvfiNwpgtU7FrP1Teg7aKDcdZC9fxOkOn3vTVZn37cZ32VnedTvYN+/GXmz
vV6PPEf7ldiClaUx5TkPyR78LZByjlOYtZfsJbEVUDPqLF4zQOtb8aFTzlJo
yuyrj9Gnr0YYriX7Qx+bq7bN+/Orj35eH82pHbuxjvwn0seP1V1CyXLm321o
PSS+GzWG/I9tkIgsd3xz9AM9vw1jqm75Kpp30vPbIBOscnLtinf0vAGuuNW/
uJnyhp43wDuntcXlPnQ++QZYYfluw73COnreAL9cZ48UnGDn2xC9sampXn/o
/MMQdbqfCpt89vwvPviGOPavi+epZtH/sMgQHlaljyArpvjZDpfj/43qv0rx
h+3I8eQ3Z9VQfPK34+V3uevccxS/ou3QvBijPGE7i+8d2Hzx29h5Y9/T8zug
Ni2uJ675Az2/A/bWZx3mr/pIz+/ATKsXroseMn4xgsGSft3QVcQ/MILv56i0
jIg+et4I2el654s6iK9ERvi06dz8imWM33biyVdzu4prA/T8TqxeNCry6jXi
Q/5OzFd9U/S6hvhStBPXJNSyr3QyPjXG/WLYXckh/oUx4gM/aeluJn7mG+Mt
t2ur4wvCImO0JrjcK/Bm/G6CpZc5cpPqCcME6etl8q4OJT3gm6BvWV79uD+0
LjLByU+HLprKMb0wxfwvU0eurmDPmyJzX3DguQDCfFOoGo+23/SFvd8UFn2/
a7TNmH6YwahJZdSn4+z7zSCZO2kg8Cztj2+Gj3/pe7Y9Y/s3Q52L5lbvKqYX
5mhMWyfnfYrZzxyLBBGVyulkX745Pi968j7OiPRDZI6VM/rXHVRn+mEB81MS
HyxTmf8s8Ko/0ffMAPmXb4FFU60SDcyY/y0wYYiLOCmth563xMHZ44Je5rDz
Y4lWLR/ZpQvb6XlLVHdn6TobvqXnLXHMzNxquEYLPb8LQ20Dzk60b6Dnd8Hh
5chZnfI19Pwu9GWae55JuE3P74Lsmo83Vvp70vNcFL3JrThSePN/8cPh4v3h
DpnXi8UUT1w0T/pVHnuV9IPLhUpr6/lT51h8ciGv5jbQdoziN5OLi6dlnfsv
U3yLuAj2XtgcbEH60cJFsp2Va7cC0w8ryBW1FVz53Uvvt8KYLsOfmlnEL7CC
W/u/q+XUiH+4VsCzB4rOjxg/WeFyvGhGrRXxV6YVNozRCPhyhPhNZIXzvIn7
nvcT/7VY4a+gQydeTGH6YY11N7cuDVMlPuVYY2q9akzRHOJbWMPdfNJR1THE
x1xrZG+3Ulc4zPjaGsqXpn6RnUp8nmmN6RYnxbe1CIussTyjX8ea8X+LNbZb
LAxp7GT8b4NHn2SMHXsIc2yg37Kg3riJMGyQenFP/t4CwlwbxIWI/KI3MT2x
gdlKN+kHZfQ9mTbYM84ubP92wiIbOChdtJ9ZSPtpscEYvyGtYTeYfthC+cda
rTOz2f5tsV748eiz16QfsEXN6MIrH8rJflxbPHt1ZIFBEtmXbwuLOY3ZqQbM
/rZQjzZLKXhF/hHZonZx/BhdVfJfiy3i1CfbdvCYfthBfrpO1aWnzP92cP9Y
vlTDivQDdngoLtyis43OD9cOP6bYHzh5i84X3w52mjl9s1Uof8m0Q//RVYuW
O7TQ++2wRdXn/eE6Or8tdnjU3lwbp/iY3m+PyqVvH6b236L326PUqL5EpjSR
3j+Ie/7tVzKm/ItrD07EnSUrkyk/49sjWheeT5pIPzLtYVH77OmUw6QfInsY
7hIu+FlI+tFij+m3zv7zyZ/phwOWNa8QWnpT/HMcsHfV8z0iaeIHOGCbn25y
XQDxB9cBPINd+hd7GL84oNihe6NxGvFPpgMU+w0EBV9JP0QO8PnNKXivQvzV
4oDyf89f6TNh+uEIk3t6W7suE/9xHLH4QMP4hDHEl3CEbTDnxrdRxKdcRyy/
vGpEkxfjV0eU/2zpzN9C/JvpiMffris3TmR87YiGzrCVeVWEWxwxr9tn2JLp
TD+cBvOp1v3+2YQ5Tui8fuBxIKs/4IQ1WToWfAXCXCc8UG2o3zyM6YsTjrw/
obnpLT2f6YQhxi9uW+cwvXHCMKuESoN5hFuc0KU4/+Oy40w/nNEU6R7cKUmY
44whKz4P7ZvG9MQZkquqDz77RfbgOiOjd+BYhSRhvjPKYg6s1BpFepLpjF/b
4ny+9JN9Rc5wbPbp++7F7O8Mne4Sr4Jq8o+EC4Z4b3n9kE/+47jg2/YXw0sK
yL9wwb27o6S/iqn+4Lpg75mAjJujWX7hAmF4TYy0JtUfmS7QeDqlcdGPNnq/
C/ZXLGy12cXOnws+V0xKKD7aRO93RWFP1LB16s/o/a6o/pm57angPr3fFRcW
jHiiV8vOvysG5s9aYbVBSPHnCotG9/OfDG5T/LkiZb2JLE+b4kvkCn6RWpP9
TRZ/rlj2fuNLQRKrP9yQ2x9ybeAZ6QfHDaOGlvwc+4HiG27wzuDOfjCui+Lf
DaE7JhYd9yD94LuhLydop0cA5Z+Zbrgf/vb9zkvELyI3jPm+ydVKnfGPG34N
1W7TTyN+ktiN2bbx47kfqR7h7EaESUX5CZYfYzem6r4cz9vL+G83jN8ePVud
zOqR3fgWWlNW10J6krkboqvfu8UVxKei3bi+QTV3917Gv7shvt79Y4smy+/d
sV+paILmV8Icd+iIR148H8v43x1CxVJOXQ7jf3f8U3tMdhOrL/jueOmiP9Nh
hITof+93x/X44Mn/vWP6446wyS+s8o4z/XGH999NhQ4TmP7wYDzxTrvWMXq/
HA+tYy1vpPyi7+Xw0PdibNXsMMJqPCh/uD8qt472Bx4uaU/bNK6H9q/PQ+7P
aP1LYwlzeTg3ZjHX8gfZj8fDF9FJD9t9TD94SN/hI92mTPqRwoP7zA2dPfXk
n0wezA//qZCxJv8V8LBs3+7+4h7mXx5stsuI3TaS/8WD630etXF5pB8tPOhU
C4dockk/ennAke8Fx8pZ/eGBGQOazeNi6PzJeeBusKqweA6dT44HaqebfNs0
m86vmgf+bFOS8ZZn+ZEHriT6HXOZKqL9e0DWz9BDydiG9u8Bn+j7i1XEpf+L
H54HcqfPulPpxfTDA8tfBUZdqCT9SPHADbXhfhXzST8yPRD9dIWx81mK3wIP
DOiWNbew+kPkAe7YxsMvayn+xR7wPTg2UJxM/NDigd3J404mPyf+6PXAjzet
5y2FrP7wxORxbXcD5hL/yHmidKZv67IY4ieOJ/K/VsmenEb8peaJrrmWxVH5
xG/wxJhFGtMqU0k/9D0RsvbkCIszxIdcT1RfcoD5feJLnifMvktwW0cRv/I9
YTe9rCisnHCKJ1qW1BntXUl8nOmJ3ev119/sI1zgCSXNAG2bg4zfPfF8V2L6
wdeExZ4I2/Hx+LcxpA8tnpj61+cM/Eu41xNRtY9utDE9kfDC87BcfmkuPS/n
BaU3SYr2JUyPvCB4l2bapUJYzQt5WQFyfSn0PfBCS5rF9A/Z9P36XsiIfzA8
nNUfXC9U7v7Wvf8vwjwvLBZVL05uZvWZF45kNze5PiP7pXhB6uWNzvZ9ZN9M
L8x9uf1vR02yf4EX2kXd+ywymL574dC5eUf2S5H/xF6YeqIjj8Mn/7Z4oVvd
NEV+BOUPvYPvn+W8xD2czoeEN6R6hlx44Ez5h5w33O0tQtJ06HxxvBEdWH3T
rojOn5o3ni8uH/XWgs4nvDFi1kwrm146v/reEDzYPpH3jc431xvx1qr9BUa3
aP/eyMmue+sdH0n790brrcf1in+o/kjxxodg07Tt6Y8o/r0x/uyA0ZH3zyj+
vdF0c/+P8mEUnyJvfG5I7f7hT/Er9sZuw+knxx+j+G7xxmx9rl3nChb/3nAs
7aozqyN+kPBB0+qGV1briT/kfFDEL/AxuUz8wvFB16TWqXWsf6Xmg+Fpa7+k
sfoDPphyOStX3ZH4S98HEUH7nN4eI37j+uBK85KN724w/vPBEYWPb6vlWb/G
B6uLK34c7SKc4gOxSq2zVCrxa6YPbmgdeHVag/i3wAetrxOEx78SFg3+vOSo
gBeriL/FPnjpYRYa9pRwiw8Q8n7VRiXi+14frJtb/kXOi/G/L1Y9DR09M4Kw
nC/k36UWVx9k9YgviparDetYT1ht8Ofdo6YJftHvhy8urvyoVX6XsL4vJFRr
PvyZyOolX1hbZY10W0rfy/PF3hDelHNHWL/OFwbitnNSt9j+fXGif8fT47Gk
r5m+4PWYvTiYRfYr8IXLsp2nxvJZfecLjWPi7Ut3kP3Fvhh4vEBi4hfyT4sv
LG5Jpm4wIf/1+qLUxfShWierP/ywZf90Q1VX5n8/NLvMVj+qS/kFxw9vR50c
6Tyc8g81P2xo6/5lqkb9UfhB3Ut39AJTqj/0/XBxw5Yhc3dS/cH1w8LWmT1Z
20g/eH643c3nufqTfvAHn0+dP73pIelHih+WR4ufO9QEUPz7Yc3Vp7FdttS/
KvDD5ef+4/tdH1H8++G7s/zXjLeUv4n9oHg/s+bNZorPlsH9tRyZK+lI8dvr
hwVbF0yrc2X1hz+67aZs+3sbi39/mA7dyxMuovqD44/cTWrXcrWIP9T8oXZS
efnWIZ8p/v2hdXfgS1Ig8Y/+IDY8O2baa+Inrj8kNJZ2np1L/MXzR9fOly6R
mqy/4o8mp0Zli72M//zhf3H76Yx3LJ/2xzPTN6Y7hhN/FvhDo6723oL3hEX+
ME7b5Me/TPwr9ofbRZVXHGNWb/jDJkt1Y8c04u9ef9xe3uNoYMPqjwAENl42
WnKE8X8A/rORWPuI1ROcANw+pmK4oIfxfwBMnys4SV5j/aoARN+J0si8RFg/
AJuV7YOdwglzA3DztXfSpl76Hl4Askaee7B3J+uvDb6v1lRuzgWmfwFo3d1T
qTic1VMB+Gjh4xKsxPYfgFVyd/ODOKyfFYARhjKndWXJXuIADFuRf82+muzb
EgA9pZwB0S6yf28A/CbzG1ResPojEOqTMnyj/Zj+B2L5NIuP65tJPziB6Hxj
GnpWnvk/EPwIJxmDXaw+DUTO7B+6cX10fvQD4ffmVH+GiM4XNxApSLH2HU/9
K97g7z9iF+C0kPpX/EBEN6xQaMmsp/0HoutC6NZ5sXS+MwNhOpD+WufZNdp/
IHxfb5b3nED1uSgQl7T0Hb82Uf0uDsTIhmm8iACKr5ZA2EekOMmcpv5xbyBm
rj2uoHemieI/CLclVH2LzrD8LwieOi/1Frwg/eAEoV1h621pNv9QC8LKbs2S
k6z+QBC+iUfvfRRC/KEfhFUzqqQa/xC/cIMwylh29mId4h9eENZUOB42e8b6
V0HIMZO58Ws5y3+D0Gbz0f39ceK3zCDsmnJwBucv4sOCIJxSu/RaZzvxpSgI
78yXhM1YS3wqDoK4bVRTLpt/tATh55oBdR0F4uPeIHwxTL3flMDqj2B0Lc2f
NuU1y/+Dod8f8nC4NuP/YMyY0qVR0sH4PxiNsVayE8ZRvYFg7Hbv+ZakSFg/
GGM0Wh529LF6JRhbKlS+VDYT5gVjYXFtck0eq1+CkdwxLrxWj3BKMC5rRE16
J2L9rGAcMZeztRYz/RvE93iZ/o9ZfRWMqm8ej9pekz3EwfD4zzghp5fs1RKM
sqgtpSmsf9UbjFLvvLP++Wz+EYJLTipTlTeS/eVCcOej4/o138k/nBAU3sjs
NY5g+h+CtoZvgu7vrD8ZApszZzzljZj/Q+CS+m33X28ov+CGIEJOPa9Akc4P
LwRpy3vHWNmy/lUI5k4983Z1Ap2/lBDMyWoPk3Wl/CZz8H1zLyTnfGL5Twg4
c6bITFGn/EgUgqLfFkUfRrDzP4gXmhzmjEmm/YdAMXVzaFnHVYr/EDzhLrzR
xGfzxVBYaxYP9H6k/E0uFMUKcXd791B/gBOK+ze9F/GnsfwvFK762ZhwjvoL
CEVBZ3XS9KdUf+iHYqfPfdvnSpRfckOxau6CF23NVH/wQtE9zqd3TgTrX4Xi
2YpijZX6xD8pocgvfJdx8TzxU2YoAvba7tFi/auCUPg7T5UvP836K6HIKa9T
7LtH+iEOxQzHmbMCnxIftoTiltvvF5yvxJe9obC4GT23sZvNP8IwxatIpZ3p
h1wYTM1OdLbtYf2gMKT63OucMZXxfxi0azYd/lbE+D8MR7s+NH+tZfwfhn/m
nVpoOIn1q8KgonW79fEswrwwBO+5flpbhvWvwnB/3q14LTYvSQlDwh5hIW6x
flYYZGaaLzTQI1wQhm8jFtacLWf9tTDc85gwy30GYXEY9AqGOueso/20hGHP
NsWDfVq0394wCHsfBf9YyObnfFie6F6oepXsJ83HXsnmU8+2k33l+Gg6EvCP
sQTZX5GPkd86ppceYfUhH10zRnTYzCf/KfHBW7Tz3Aot8q8aH5NGrBwlfZH8
r87H5Yhj63MW0PkAHwtPNFSVSJN+6PExUPaPxlMT0g99Ph4XGHqJT9D5M+bj
p637nE2SpB9cPtLUzStDjpN+OPLxS1L+Uu4Jmu/x+Bgy6XpjdDflT/587Lul
HHinOZjOHx9FHdMabYVUfwj4OJL0ZoK6PM0XU/hwVV6isfk35W/pfLSUW4Yd
N6X8LpMP316fIsEHit88Pg48u9fXeIjiu4APtZwvX2b9pvlnyeD3BklO236K
+EE0aM+N64+/a6D+dyUfXxfn1uZ0EL+I+Xim/+aFbCzxTz0fng4b5KW+sfyW
j1t96Qf2+BF/tfMx7NjJ2wMNxG+9fBR6XE/xGUZ82M/H2WSEzRnO5h/heBgb
ve6vT4Slw6GxuXzK3WbiV7lwjBgws7l4jfhXMRzbV92Qe72Z9avCUR3+LiBI
TFgpHE8Hfs2qk2V6EQ63BRU9Wqx+UA9He+fRW1fPsv7WID75oG8G62fphaPc
UlWxbijTk3DY3pYXh/+ideNwyA51nGdWyPQlHAq5fTWLZxN2DAcvIj/VwZe+
hxeOkzczVG6doe/3D0fRtLdRz4eyeXo47h7pOFU1QPsXhOOHw4wAj5GsHglH
22+ZVUmvSD/Sw7FiaKJOXQbT53CYK92e+n092T8vHJ3FP6ozj5N/CsKhkvjP
sjtM/0vCYVfsJ2VdxfpX4Qj7W+rEf6qkH5XhqJO4qXnamfILcThCCvQeSf9H
+lE/6J8ugdGfA6y+DUflTu/qN7l0/trDcakwMyRFh85nbziil/br+2jQ+e0P
x6bV2We1JSg/kohAsGN9w+UC0g/pCLiNnTHa5GMI+T8CxhpXs2rfUPwoRuCo
7nnHi/MpP+NEYOOt6J6KQ1R/KEWgSmvn2PlVpB9qEYi7ZGvynzzFr3oEnDKE
EsMamX4M/v5OM8lpn0g/9CJw9e87ZwYiiR/0IzBkR978jLmUfxpHIHuSa6PB
c+IXbgR+yafr5NsR/zhGoE3JqWTMYprP8iLwKZRT5nCE+Ms/AgUnrnAnSRLf
8SMQEui++rY16YUgAqr9PWm7jIkfUyLgeNnY57Qm8Wd6BPxHSI4vmcTy8wjM
rEqVPTuH+DcvAq492+8q3mP9qgi81JvRW7GQ+LskAnlvWjP9DVn/KgLtXq1j
He4SroyAd3VNyqhK1s+KwCnVNf95vCRcHwH1orFzW9+xeUYEalw7zItSCbcP
2j8qpP2nNqt3IvBdZ1FM/DX6nv4ILBsyvmjkNjb/iMQal6xxNmdpP9KRyM+2
+09BiulhJI6XXLi8Vor2rxiJ7z/mbmv/SvbiRKLQYtRVmY9kT6VIrP8w1WnP
LdIPtUikXRDalVmS/dUj4RFXp2zQT/qBSDQs2HduXwD5Ty8Sh/KjPr/qI//q
R+L61EM+ZoXM/5HQTr86U/MX1R/cSJzPdrY0dOsi/0diUpE4XhxJ83NeJFYF
2R6XuE71h38kHnTMeuqYz+qPSBw1TX25zJbm54JI+L6K3lvcSvqREokF4/PX
yjRS/yo9EpIta15K7zhK/o/Ek4cmJ5OdrlP8R6JFb1GJ33SKr4JI7Py8sHVS
PcVfSSTOnjgjZaXB5pORcLipO/F5NcVvZSRGD1k1ZEwSxbc4EnOu1wnNTFn8
D37/Dj37TRLEDy2RuLM/uXQi61+1R0Lpk924vAril95IxM9rSXfZTfzTH4na
SebDU2+z+UcUphk9Cx4/gfhLOgoaetg/Kp74TS4KeSu3JsheI/5TjEIsf8/4
e7WkJ5woGO+PUHKXIL1QikJksFlfVBdhtSjsPd3t+qGT+FY9ConBrYuPpbH+
URRezJYTtLky/o/C37uTvvn2EtaPgmz+CH6YEumBcRQsi/LnGC8mzI2Cp3TX
4T2s/nCMwtL6wEcH/iLMi8KxjxuDa6vp9/lHIUz/5HcjA1Z/RMEn602zTg19
jyAKOY8EGfLWhFOisNhkatbuWvr+9ChMmnHrP+de1p+LwsQVd9OzFQnnReFm
2yPV4tGkHwVR+DwuyX5OHdmvZPD9T35muLL5hygKAQbV77O/0vypMgpamouf
7jhN/hFHYeRYoeR7S6b/Uej6N3PAvZL82xKFnWEVuzYoM/9HwctDfPjLR8ov
eqPg0pHrd9SMzk9/FEKW3Hu1v5bNP6JxdkN7zx0N6l9JR6M/xXXjY3U6n3LR
GCk/fpTUEjq/itHINRk6v0qK5nucaLg1Su3K7yb9UIoG3pja15avJP9Ho1J9
b+YEa9IP9Wgs8Vg1sGIH1R+IRqrTo57suVR/6EVj7pR6j45u0g/9aBQp5a/L
FrL8LxrTfkSkBHFYfyEa8mGvcmvFpB+O0VhuEaKqYEP6wYvGphHt7XNZ/9s/
GrzrvEm9l1j9EY0X+jp1NV7EP4JoPK/61ec1jvQjJRpTkg1/lGYQf6VHY62d
XXVPK+vPR2Pe7z8uD9cRH+ZFw9Tmg3bWEtKPgmh0TS/7snYK8WdJNNaYpJ9L
kyB+FUXjuINj9YSbhCsHfz7CoLTSk+Xz0Yg9oZcv3U64PhoT3655tCSO8X80
Tu37mCxoYPwfDcdbaftt+xn/R+Pg6EWSyV8I90dD959Ql8pW1v+KQam285S9
CYSlYxCmWH/xqhvrh8XgtXr2OB92/0oxBkNvvK6b5sHqoxgsnR5q+Ok9fb9S
DJYZ7VFc84H2qxaD0dl5NV+cCKvHgO9Q2TNiA7tfEIOWqwpLUp+QfujF4JuC
apH6FbKvfgw0XM4Z6fPI/sYxyNm9Y/JRbfIPNwYbDdxGLzjE9D8G4j97F/4a
Rf1JXgx+qK6epbia+T8GxkeWhud0s/l5DDr8E7++zKb6QxCD+FN+WgVxpB8p
MXCe/N+EfYdIP9JjcLx9xd9/akk/MmOw5u7I+16RpB95MfCqX+dXbEv6URCD
6bdXlx7/XEL+j8Hzosm7Nqnso/iPgU+i2b7N9jQ/r4xB5FadOWvCSD/EMdCy
en5kexXFX/2gfXP5f8uD4rMlBgaKITP9nrP8LwYeeyIfHnKi+O6NQavG6QEE
sPiPgUqYnyR/C7t/FQv3kIsCw2jiD+lY3DddZlk87jPFfyxyhpZrXwwi/lGM
hYvurrGTHrD+SCyqs1ClaU76oRSLjKFTe2IvEr+pxeKC3T2x0U/iP/VYdHy3
iIzVJH5ELHglkty3fOJPvVj43CqeN9aG+FY/FjeWDmyOeEDYePDn1VSkNrqy
+UIsTMI//k6tJ+wYC1/LkvirrH/Fi8XdxinSO9j9Kf9YLOFmnGnKYPwfCz/O
cml/pjeCWPwlcL1c+ID1o2Ix5FjNvuIrhNNjYaP9pKKR3f/NjMXs8ZfkZg7Q
+/Ni8atUsjo5l3BBLLrNHQ48ZfVTSSwmlo3d5PGV9a9iMT9hketRdv+qMhZG
UeMP9CqyflYsNgrviHznkN7Wx+KKN/fwqCtk35ZYbFOe658XyOq/WCg65EuZ
PyX/9MbiTeSi57Pcmf7HIk0wceDuDTb/EODTuYobtlep/pQWYMsO3fz3lqQf
cgJc1JBoaLGi+lVRgI17/mjXF7SR/wVokJ8tMTuWzp+SAOPHLBm6jM3P1QSY
OjtCf81M6r+qC9DR2H+iqv0h+V+AyjPtWruLrpL/BeC8Sn9dp+pI8S/ACI2s
7Mgcmp8bC/ChZ4q5m/Rjin8BGiv8hM+qWP0vQIqkR/qXXJp/8AS4te2T4PBx
0g9/Af680l4u00v1B18ADf+iX39iST8EAtgfL4kfu4P4IUUACbUE/1m2xB/p
AsR/ntfooEL8kjlon5ZlDy+kEP/kCeAVPc64aCTxU4EA9ZPndP3kEn+VCJD4
fMiwIYdY/0oAqXOanSYviP8qBTix6MtfUycSP4oFyPu0Z8N2Nv+oF+Bl/NyW
UdNZf0eAhUg9L3WIcPugfUvWnlaWJX7uFSBcHDHZ4yrL/wUY9UDfeOYExv9x
MAmTMzpdyvg/DmWqM46l1TD+j8OWpOeSs6sIK8bh16GZus9YPcIZxIk2W+QL
CSvFwbIh3KSA6YdaHKrPZd/ht9L71eMG84d9+bVabH4eB8ULn/rH59L368Wh
ScXsscRQNk+Pg83hgxNjJGn/xnE4JKlb9mQfu18QB/mQl0ZZZ8h+jnFw9Fym
1mpP9uUNrtfoSnBmsPovDoPsGNZxk92vjsPBv4QeE2yY/sfhwJEDHovPU36Q
EocEg8q6LzuZ/+Mwf2NlkrYK1R+ZcVi96ad96mbSj7w43Dox/UpYI+UnBXFw
+9c9fMkY0o+SONT6exbKWJB+iAa/t7iwfJEsnd/KOPgJ/Sb3K5B+iOMgZfbl
2gN1qj/q43B4GnezcFcG+T8OmjoVg5JE8dMeh3qPMeFZBg8o/uOgsNDd5J80
6h/3xyEpb4+KxD9s/hGPB7ft8iQMKX6l42HgpXNOoEX6IReP6tnndpyVIP1Q
jIdAXfvxVjHxAyceYQ0xWspypB9K8biQxZcMyCV+UYvHf1G7OxaYE/+ox0NC
iBVjK9n8PB4qjhIDZVziL7141J+aW/s2m/hNPx5a8ibfNJtIP4zjUdbr9v2X
KrtfFA/9h22vKkcTfzrGY1vhh/a494R58fhmVlp6l83L/eMhvef8/eL/u78b
jw319T4h4Yz/4xEbUr66nd3PTYmHjKnOc8Fdxv/xsNTOe77wDuP/eJxwjjn5
6h7hvHgYnRaVNbD+VEE8st8sS1rG9KckHpP3KK/+v/mKKB6uM/Pnn2P6VTlo
7/jhmQFBbJ4fD3HrqNf1X+j76+Ph9bfFQmknNt8ZtO+Pz/0rzWi/7fFIDFLa
v+Ufsk9vPJ4nzTv5+yDZrz8eS/bF9G0KZvOPBDSFN5k0sb//kE5A9U0vuWG5
5B+5BCy5cmBE4BSm/wlolzUd/zKa3Y9IwKeBU0cLj5F+KCXAcsUZhxgtOh9q
CVArm/A05xvph3oC5CI7K6202f2+BFxd4X/IcATVH3qDv2/6TMGiC6Qf+gnQ
GfvdpNGH8h/jBMz4VrluXwzlR9wERF/Y5jX+LPVvHQefj3H+d0vVPor/BPC/
Www8ullG8Z+AVxbHh1dlkX7wB/f/RFKpo5riT5CApRvmntnL7tenJMD9Rtje
BrD8LwFZEx8Oscih+M5MwPDPh7PWybD4T4Bo7EJzw32kHwUJqCl6sv/8D+p/
lySga5yvfLsl8YsoAVWB/k8CJhP/VCYgcvT2+w9KiZ/ECdCz9+F6TSD+qk+A
INer9ye7X9qSgL8XCUVRn4j/2hPw086H12/A5h0JOCD196Fr5sSf/Qk4cdOt
4Pcw9vd2QsT/TpFtr2L9HyHsra12tTkQP8sJobzOe0JbNcv/hbDwybS9PJfx
vxAfkl98emzE+F8IqYu33VOjGP8LwT/yb2HlacLqQuQ/SoHcYzY/EcKwpXTY
eEmaf+gJcdNSdzmvkc1ThDgvtWLk2RWEjYW4Wzlb+OUOfQ9XCJU0iQPNQfT9
jkKMl/Y5GdLM7lsJ0Z96puPVa7KHvxBrjGcsa5jO7u8KsXWu7EEPZj+BELfC
rKvPnyH7pghRdS97xWFbVv8JEftukUb3MNL3TCHa9AvCcyyY/gsxbNGBOIU0
8m+BEIdtxB/i2f2JEiH23FW8P/of0g+REJ4Nj1/NL6DzUynE9+bdzZoP6XyJ
hbhhffbC5w7KX+qF2Kcd+m6EJp3PFiGmVAwkdcym+qNdiBh5myDt+3S+e4W4
9m7HtJWXqP7uFyLx3l3TiuQgiv9EXCk8UPhame6fSCfixc4nge7rKL7kEjG2
tl36wXHK3xQT4RomVVoxk92PTMSGYfMPfLVg+V8iJj891FW4nOJbLREHA0NH
RCwg/VBPxI6EFxdl5rD5eSJ8lusvGRgg/tBLhPyB6ogJrD+unwjtoJwLN9n9
HeNEGFb9/TapkfiJm4gsDZPxZkuIvxwTUZUX0RlykPiNlwiX+SNP3S0h/vNP
xN/fe3fcrmD3dxOhcHhS5tE3rP+fiJM1fVtV2Xw5JRHjnQJevjrK+j+JkJm6
ctEkfTafHrSHvcblYz9Y/j/48zfH3DNcwfg/EQdGrEkZKGL8nzgYTzvX3R9G
/SlRIuZwxQrKUoQrE9H/0LV/3W36eXEitt6T3iBVTrg+Ed6cmZ1SW9h93kR0
lfk1fP5M729PxDzfwwrZb9i8PxGnEvMHpPvp+/sTcWnd5XPT+9nffyRB1UhU
FschLJ0EyR/rjL8uInvIJaFeFHpgchnr/yUhvENy4gRLsi8nCeN8pA+9Z/ZX
SsLcjQ1pHKYfaklI2V7x+Z8Apv9JsNkSa+jay+bnSTAsGbspbQ7lD3pJOH2X
I7a/T/qhnzTIv5MuzGP5h3ESdGVePNJwo/PFTcLHmcnxP8/T+XNMgu+kW3Xp
KlQf85LQk33upziNzq9/EhJGNNasmUjzc/7g912fPGHopWvk/yRI24tv9Rcn
UfwPvm/rzgUH196h+E/CFVujIslyys8yk9C5XHbX+ETSj7wknLx/tX18EMVn
QRK8vMtqMoxY/jeIGw2+NlWw+7tJyJ9UMaL+Oov/JKhfGnA5ak38IE5Ce9nN
gaQVxB/1SSh6FXKvrZjd70yCy1DzB2U84p/2JHjb12363kH60ZsElTMO96yP
En/1J+Fq8mGz6EL29x/JGFjtrP/vUsqnpZPhve73zUx14ke5ZGzjOzm6qrH+
fzKuPxLLHXtKmJOM7x8mzxt5nvV/kvHBJ9965TjiZ7VkFL4V7t8Vy/L/ZLhd
keH/Wcv4Pxm6137dirlBWC8ZHk6i+/lDSA/0k5Fzwf6wuYIE/h9Zh+uh
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], FontFamily -> "Arial", 
              Dashing[{Small, Small}]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#2"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 1002.}, {-2.0255587673079125`, 
             2.026599894622775}}, "Frame" -> {{False, False}, {False, False}},
             "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], FontFamily -> "Arial", 
               Dashing[{Small, Small}]], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], FontFamily -> "Arial"]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 1002.}, {-2.0255587673079125`, 
            2.026599894622775}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], FontFamily -> "Arial", 
              Dashing[{Small, Small}]], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], FontFamily -> "Arial"]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], FontFamily -> "Arial"], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], FontFamily -> "Arial", 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#2"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 1002.}, {-2.0255587673079125`, 
         2.026599894622775}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {FontFamily -> "Arial"}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], FontFamily -> "Arial", 
           Dashing[{Small, Small}]], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], FontFamily -> "Arial"]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{745.75390625, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1002.}, {-2.0255587673079125`, 2.026599894622775}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.935758576163898*^9, 3.935758582875618*^9}, {
   3.935767509383464*^9, 3.935767522088711*^9}, 3.9357675533662*^9, 
   3.935767740847477*^9, 3.935767784272057*^9, {3.935767841330069*^9, 
   3.935767932872485*^9}, 3.935768040954833*^9, 3.9357686666677027`*^9, {
   3.935768712259726*^9, 3.935768725690201*^9}, {3.9357687943162203`*^9, 
   3.935768891554873*^9}},
 CellLabel->"Out[316]=",
 CellID->1437313219,ExpressionUUID->"4110fe0b-9b55-4053-b209-49e16a3e44b5"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9357675985464287`*^9, 3.935767599366434*^9}},
 CellID->788154105,ExpressionUUID->"c4ab10d2-f5ba-438b-a1a9-83867125fff7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1087, 920},
WindowMargins->{{-235, Automatic}, {Automatic, -1064}},
WindowTitle->Automatic,
DockedCells->{
  Cell[
   BoxData[
    PanelBox[
     PaneBox[
      TagBox[
       GridBox[{{
          StyleBox[
           DynamicBox[
            FEPrivate`FrontEndResource[
            "MUnitStrings", "TestingNotebook-Title"], 
            ImageSizeCache -> {100., {3., 9.}}], StripOnInput -> False, 
           FontSize -> 12, FontColor -> GrayLevel[0.4]], "\[SpanFromLeft]", 
          "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
          "\[SpanFromLeft]"}, {
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "New"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "New-Label"], 
                    ImageSizeCache -> {26., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`PaletteInsertTest[
                   InputNotebook[], "Test"]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {68., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ConvertSelection"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ConvertSelectiontoTest-Label"], 
                    ImageSizeCache -> {99., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`buttonConvertCellGroup[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {141., {11., 17.}}], 
           DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Run"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "Run-Label"], 
                    ImageSizeCache -> {22., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteRun[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {63., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            ActionMenuBox[
             ButtonBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "More-Label"], 
                    ImageSizeCache -> {30., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]], 
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Hover"], 
                    ImageSizeCache -> {9., {2., 7.}}], False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Off"], 
                    ImageSizeCache -> {9., {2., 7.}}]}, 
                    Dynamic[$CellContext`hover$$], 
                    BaselinePosition -> (Center -> Scaled[0.5])]}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{Automatic}}}], "Grid"], 
               ImageMargins -> {{0, 0}, {0, 0}}], Appearance -> 
              FEPrivate`FrontEndResource[
               "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> {},
               ContentPadding -> True, Evaluator -> None, 
              FrameMargins -> {{10, 10}, {0, 0}}, 
              ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "AssignTestIDs"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AssignTestIDs-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteAddTestIDs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SaveAsDotwlt"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "SaveAsDotwlt-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteSaveAs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NewEnvironCell"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NewEnvironCell-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteInsertTest[
                  InputNotebook[], "Environ"]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Help"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Help-Label"]]}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              SystemOpen["paclet:tutorial/UsingTheTestingFramework"]}, 
             Appearance -> None, Method -> "Queued"], $CellContext`hover$$ = 
            CurrentValue["MouseOver"], ImageSizeCache -> {67., {10., 18.}}], 
           DynamicModuleValues :> {}], 
          ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              PaneSelectorBox[{True -> ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-on"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`clearTestResults[]], Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"], False -> 
                ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-off"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, LineColor -> GrayLevel[0.7], 
                    FrontFaceColor -> GrayLevel[0.7], BackFaceColor -> 
                    GrayLevel[0.7], GraphicsColor -> GrayLevel[0.7], 
                    FontColor -> GrayLevel[0.7]]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Null, Enabled -> False, Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"]}, 
               Dynamic[CurrentValue[
                  ButtonNotebook[], {TaggingRules, "$testsRun"}, False] === 
                True]], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ClearTestResults-Tooltip"]], TooltipDelay -> 
              0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ClearTestResults-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {138., {10., 18.}}], 
           DynamicModuleValues :> {}]}}, AutoDelete -> False, 
        BaseStyle -> {
         "DialogStyle", Bold, FontColor -> 
          RGBColor[
           0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]},
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
        GridBoxDividers -> {"Columns" -> {{False}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
       "Grid"], ImageMargins -> {{5, 5}, {Automatic, Automatic}}], Appearance -> 
     FEPrivate`FrontEndResource["MUnitExpressions", "StaticToolbarNinePatch"],
      FrameMargins -> {{26, 12}, {8, 12}}, ImageMargins -> -1]], "DockedCell",
    CellFrameMargins -> 0, ShowCellTags -> False, CellTags -> 
   "MUnitStaticToolbar"], 
  Cell[
   BoxData[
    PaneBox[
     TagBox[
      GridBox[{{
         TagBox[
          GridBox[{{
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "TotalTestsRun-Label"]], 11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"24\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              GrayLevel[0.55], FrameStyle -> GrayLevel[0.55], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Successes-Label"]],
               11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"24\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0., 0.6, 0.], FrameStyle -> RGBColor[0., 0.6, 0.], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "WrongResults-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.7, 0., 0], FrameStyle -> RGBColor[0.7, 0., 0], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}, {
            "\"\"", "\"\"", 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Errors-Label"]], 
              11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.945, 0.81, 0.314], FrameStyle -> 
              RGBColor[0.945, 0.81, 0.314], FrameMargins -> {{8, 8}, {0, 0}}, 
              StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Messages-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.921569, 0.678431, 0.337255], FrameStyle -> 
              RGBColor[0.921569, 0.678431, 0.337255], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {
              2 -> 0.7, 3 -> 1.5, 4 -> 0.7, 5 -> 1.5, 6 -> 0.7}, 
             "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontSize -> 12}], "Grid"], 
         ItemBox["", ItemSize -> Fit, StripOnInput -> False], 
         DynamicModuleBox[{
          MUnit`Palette`Private`$barDisplayType$$ = "InSequence", 
           MUnit`Palette`Private`resultColorBar$$}, 
          TagBox[
           GridBox[{{
              DynamicBox[
               ToBoxes[
                
                MUnit`Palette`Private`resultColorBar$$[{141146533, 1621127723,
                  2106654589, 40181466, 347870527, 1464106230, 718078795, 
                 1444516884, 631557473, 179760346, 1197927521, 2007200746, 
                 1048301092, 597400667, 1634235588, 1181903514, 2057672563, 
                 1356536334, 638081832, 174730992, 870753043, 805157028, 
                 884486057, 1677839969}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
                 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
                 24}, {}, {}, {}, 250, 12], StandardForm]], 
              ActionMenuBox[
               PaneSelectorBox[{False -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Off"]], True -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Hover"]]}, 
                Dynamic[
                 CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                FrameMargins -> 0], {DynamicBox[
                  ToBoxes[
                   (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ByStatus-Label"]]]], StandardForm]] :> (
                 MUnit`Palette`Private`$barDisplayType$$ = "ByStatus"), 
                DynamicBox[
                  ToBoxes[
                   (If[
                   MUnit`Palette`Private`$barDisplayType$$ === "InSequence", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "BySequence-Label"]]]], 
                   StandardForm]] :> (MUnit`Palette`Private`$barDisplayType$$ = 
                 "InSequence")}, Method -> "Queued", Appearance -> None, 
               ContentPadding -> False]}, {
              PaneSelectorBox[{True -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]]], 
                    "Tooltip"]& ], ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Previous"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], ButtonFunction :> {}, 
                    Evaluator -> None, ImageSize -> {Automatic, 28}, Enabled -> 
                    False, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]]], "Tooltip"]& ], 
                    ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Next"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"], False -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"], 
                    ButtonBox[
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], 
                    GrayLevel[0.7], StripOnInput -> False], 
                    ButtonFunction :> {}, Evaluator -> None, 
                    ImageSize -> {Automatic, 28}, Enabled -> False, 
                    Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"]}, 
               FrontEnd`CurrentValue[
                FrontEnd`ButtonNotebook[], {TaggingRules, "$someTestsFailed"},
                 False], ImageSize -> All], "\"\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {Right, Left}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 0.5}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], 
          Initialization :> (MUnit`Palette`Private`resultColorBar$$[
             Pattern[MUnit`Palette`Private`cellids1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`successPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`errorPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`failurePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`messagePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barlength1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barheight1$, 
              Blank[]]] := 
           Module[{MUnit`Palette`Private`successPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`successPositions1$], 
              MUnit`Palette`Private`errorPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`errorPositions1$], 
              MUnit`Palette`Private`failurePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`failurePositions1$], 
              MUnit`Palette`Private`messagePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`messagePositions1$], 
              MUnit`Palette`Private`sp$, MUnit`Palette`Private`testnumber$, 
              MUnit`Palette`Private`buttonlength$}, 
             MUnit`Palette`Private`sp$ = Cases[
                ReplaceAll[
                 (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                  SplitBy[#, Last], 
                  SplitBy[
                   SortBy[#, Part[#, 1, 1]& ], Last]]& )[
                  Join[
                   Map[{#, "s"}& , MUnit`Palette`Private`successPositions2$], 
                   
                   Map[{#, "e"}& , MUnit`Palette`Private`errorPositions2$], 
                   Map[{#, "f"}& , MUnit`Palette`Private`failurePositions2$], 
                   
                   
                   Map[{#, "m"}& , 
                    MUnit`Palette`Private`messagePositions2$]]], {{
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]]}, 
                   Pattern[MUnit`Palette`Private`s, 
                    Blank[String]]} :> {{
                   MUnit`Palette`Private`a, MUnit`Palette`Private`s}, 
                   MUnit`Palette`Private`n}], {{
                  Blank[], 
                  Blank[String]}, 
                 Blank[]}, {1, Infinity}]; 
             MUnit`Palette`Private`testnumber$ = 
              Length[MUnit`Palette`Private`successPositions1$] + 
               Length[MUnit`Palette`Private`errorPositions1$] + 
               Length[MUnit`Palette`Private`failurePositions1$] + 
               Length[MUnit`Palette`Private`messagePositions1$]; 
             If[MUnit`Palette`Private`testnumber$ > 0, 
               MUnit`Palette`Private`buttonlength$ = 
               MUnit`Palette`Private`barlength1$/N[
                MUnit`Palette`Private`testnumber$]]; 
             If[MUnit`Palette`Private`testnumber$ > 50, 
               Graphics[
                Raster[{
                  ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b, 
                    Blank[]]} :> 
                   Switch[MUnit`Palette`Private`a, "s", {0.380392, 0.603922, 
                    0.384314}, "e", {0.945, 0.81, 0.314}, "m", {0.921569, 
                    0.678431, 0.337255}, "f", {0.74902, 0.403922, 0.4}]]}, {{
                  0, 0}, {
                  MUnit`Palette`Private`barlength1$ + 50, 
                   MUnit`Palette`Private`barheight1$}}], 
                ImageSize -> {
                 MUnit`Palette`Private`barlength1$ + 50, 
                  MUnit`Palette`Private`barheight1$}, 
                PlotRange -> {{0, MUnit`Palette`Private`barlength1$ + 50}, {
                  0, MUnit`Palette`Private`barheight1$}}], 
               Grid[
                If[MUnit`Palette`Private`testnumber$ === 0, {{}}, {
                  Riffle[
                   ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n$, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a$, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b$, 
                    Blank[]]} :> Button[
                    Tooltip[
                    Graphics[{
                    Switch[MUnit`Palette`Private`a$, "s", 
                    RGBColor[0., 0.6, 0.], "e", 
                    RGBColor[0.945, 0.81, 0.314], "m", 
                    RGBColor[0.921569, 0.678431, 0.337255], "f", 
                    RGBColor[0.7, 0., 0]], 
                    
                    Rectangle[{0, 0}, {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 0, 
                    PlotRangePadding -> 0, 
                    ImageSize -> {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}], "Test " <> 
                    ToString[MUnit`Palette`Private`n$], TooltipDelay -> 0.35],
                     NotebookFind[
                    ButtonNotebook[], MUnit`Palette`Private`b$, All, CellID]; 
                    SelectionMove[
                    ButtonNotebook[], All, CellGroup], Appearance -> None, 
                    Method -> "Queued"]], 
                   Graphics[{White, 
                    
                    Rectangle[{0, 0}, {
                    1, MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 
                    0, PlotRangePadding -> 0, 
                    ImageSize -> {1, MUnit`Palette`Private`barheight1$}]]}], 
                Alignment -> {Automatic, Center}, Spacings -> {0, 0}]]]), 
          DynamicModuleValues :> {}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Right}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     FrameMargins -> {{26, 12}, {Automatic, Automatic}}, ImageSize -> Full, 
     BaseStyle -> {Background -> RGBColor[0.827, 0.827, 0.827]}]], Background -> 
   RGBColor[0.827, 0.827, 0.827], "DockedCell", CellTags -> 
   "MUnitResultsCell"]},
ShowSelection->True,
TaggingRules-><|
 "$testsRun" -> True, "TryRealOnly" -> False, "$someTestsFailed" -> False|>,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"MUnit"}, "MUnit.nb", CharacterEncoding -> 
  "UTF-8"],
ExpressionUUID->"b9b9f8c6-cce2-49ac-8089-99d62a696378"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[599, 23, 176, 2, 53, "Subsection",ExpressionUUID->"22428b8b-7a1c-44a8-b3c0-e48f58da1e5f",
 CellID->1366031911],
Cell[CellGroupData[{
Cell[800, 29, 207, 2, 43, "Subsubsection",ExpressionUUID->"daa73370-2059-4af5-8108-b5753f19511f",
 CellID->1834586544],
Cell[CellGroupData[{
Cell[1032, 35, 343, 7, 47, "VerificationTest",ExpressionUUID->"a648dd35-292a-42a8-86f8-02271684118f",
 CellID->34858480],
Cell[1378, 44, 221, 4, 39, "ExpectedOutput",ExpressionUUID->"cd3833f4-a6f9-4746-8fac-894d232c2950",
 CellID->205831783],
Cell[1602, 50, 7930, 177, 23, "TestSuccess",ExpressionUUID->"35108f10-cc38-45aa-96b1-9958efed1fc3",
 CellID->141146533],
Cell[9535, 229, 9498, 230, 39, "BottomCell",ExpressionUUID->"2a2a4f4a-731d-4d2f-b7e0-6daf887ed767",
 CellID->1427833843]
}, Open  ]],
Cell[CellGroupData[{
Cell[19070, 464, 392, 8, 47, "VerificationTest",ExpressionUUID->"982c8df4-4389-4873-a041-b98defc7ba75",
 CellID->860133980],
Cell[19465, 474, 198, 4, 39, "ExpectedOutput",ExpressionUUID->"9c1da467-a24d-450b-a1f4-177ef2ffc52d",
 CellID->12831347],
Cell[19666, 480, 7931, 177, 23, "TestSuccess",ExpressionUUID->"5d855990-a8e1-4b6d-9184-24d8d05200e9",
 CellID->1621127723],
Cell[27600, 659, 9498, 230, 39, "BottomCell",ExpressionUUID->"264e80a9-4ed1-4578-b714-070e250e0e97",
 CellID->1168610972]
}, Open  ]],
Cell[CellGroupData[{
Cell[37135, 894, 592, 16, 47, "VerificationTest",ExpressionUUID->"7518c587-35e5-42b9-865a-674aa44bb316",
 CellID->2135254920],
Cell[37730, 912, 387, 11, 39, "ExpectedOutput",ExpressionUUID->"e67446df-781a-4a17-895a-e89fa854cbbc",
 CellID->2073244239],
Cell[38120, 925, 8646, 186, 23, "TestSuccess",ExpressionUUID->"af3bf68d-c841-445b-bbc3-caeb4c81f831",
 CellID->2106654589],
Cell[46769, 1113, 9497, 230, 39, "BottomCell",ExpressionUUID->"43112803-e38e-4305-9f25-d9ec62df830e",
 CellID->980789234]
}, Open  ]],
Cell[CellGroupData[{
Cell[56303, 1348, 512, 13, 47, "VerificationTest",ExpressionUUID->"6754cff1-b70c-4718-9346-614de36529b2",
 CellID->979064612],
Cell[56818, 1363, 320, 9, 39, "ExpectedOutput",ExpressionUUID->"1bc8d688-b2e6-4222-b86c-2ac5720ce045",
 CellID->310061181],
Cell[57141, 1374, 8458, 182, 23, "TestSuccess",ExpressionUUID->"216aaf3c-c413-48ee-8d66-5fa9a15ea2d2",
 CellID->40181466],
Cell[65602, 1558, 9498, 230, 39, "BottomCell",ExpressionUUID->"6cc20e52-d951-433b-a52b-9bf87db8afce",
 CellID->1020033904]
}, Open  ]],
Cell[CellGroupData[{
Cell[75137, 1793, 663, 20, 47, "VerificationTest",ExpressionUUID->"7c657b46-0b76-4954-9a77-65ec7e8639a8",
 CellID->812224532],
Cell[75803, 1815, 368, 10, 39, "ExpectedOutput",ExpressionUUID->"70267cb1-76af-4e59-abe6-eda68648e2a1",
 CellID->918112888],
Cell[76174, 1827, 8485, 182, 23, "TestSuccess",ExpressionUUID->"e6b7e9e1-0c90-4071-89f5-44b3d321002b",
 CellID->347870527],
Cell[84662, 2011, 9498, 230, 39, "BottomCell",ExpressionUUID->"6e753557-694d-4692-94fe-e345464f3092",
 CellID->1209460155]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94209, 2247, 183, 2, 35, "Subsubsection",ExpressionUUID->"629a4d0b-a44e-4da9-b0eb-d106f923f65c",
 CellID->159303206],
Cell[CellGroupData[{
Cell[94417, 2253, 574, 10, 47, "VerificationTest",ExpressionUUID->"59086084-c336-432b-8dd2-0a8288e58c5b",
 CellID->398770864],
Cell[94994, 2265, 424, 7, 39, "ExpectedOutput",ExpressionUUID->"3a919e80-a1df-42e1-836d-ccfb95fe2e76",
 CellID->176121369],
Cell[95421, 2274, 7780, 172, 23, "TestSuccess",ExpressionUUID->"6ab6165d-92b6-4b21-b442-90dd38fbdbf5",
 CellID->1464106230],
Cell[103204, 2448, 9498, 230, 39, "BottomCell",ExpressionUUID->"4c902268-bc91-4b5b-8b9e-9cd138693121",
 CellID->1365780284]
}, Open  ]],
Cell[CellGroupData[{
Cell[112739, 2683, 515, 11, 47, "VerificationTest",ExpressionUUID->"004d8135-cff6-490f-81ce-41fc91160527",
 CellID->654472228],
Cell[113257, 2696, 539, 17, 39, "ExpectedOutput",ExpressionUUID->"4335bc67-fb29-423a-99f0-d5a397ccea56",
 CellID->437163134],
Cell[113799, 2715, 9555, 196, 23, "TestSuccess",ExpressionUUID->"550f7b04-3ae1-4155-8dc1-da93cd388900",
 CellID->718078795],
Cell[123357, 2913, 9498, 230, 39, "BottomCell",ExpressionUUID->"547d99e2-b856-43b9-a811-048bcf422e26",
 CellID->2039695072]
}, Open  ]],
Cell[CellGroupData[{
Cell[132892, 3148, 517, 11, 47, "VerificationTest",ExpressionUUID->"6ac09c6e-9628-47aa-8150-13a64692c334",
 CellID->1530043935],
Cell[133412, 3161, 522, 15, 39, "ExpectedOutput",ExpressionUUID->"64ca2afa-fac6-4a17-942b-9811db6ab2ff",
 CellID->383233403],
Cell[133937, 3178, 9376, 194, 23, "TestSuccess",ExpressionUUID->"5a63c730-9e60-40e2-b64b-f45eb17274a6",
 CellID->1444516884],
Cell[143316, 3374, 9497, 230, 39, "BottomCell",ExpressionUUID->"3a37f119-47dc-4bce-a54b-1030bbb20fc6",
 CellID->692640053]
}, Open  ]],
Cell[CellGroupData[{
Cell[152850, 3609, 630, 16, 47, "VerificationTest",ExpressionUUID->"36c4a0e8-a280-4cd4-a339-87384b5628c2",
 CellID->243262500],
Cell[153483, 3627, 299, 6, 39, "ExpectedOutput",ExpressionUUID->"bfc3485a-6100-4ffc-87f5-8960c9a5e1b4",
 CellID->661061638],
Cell[153785, 3635, 8038, 177, 23, "TestSuccess",ExpressionUUID->"c7ad5d26-6ac3-49ed-a94c-8521808b7513",
 CellID->631557473],
Cell[161826, 3814, 9498, 230, 39, "BottomCell",ExpressionUUID->"e4698d7d-6578-47fd-94a0-ddd1368a09cc",
 CellID->1722265237]
}, Open  ]],
Cell[CellGroupData[{
Cell[171361, 4049, 649, 18, 47, "VerificationTest",ExpressionUUID->"307e0f1d-a21d-49ef-a346-93d09217220d",
 CellID->1923945471],
Cell[172013, 4069, 322, 9, 39, "ExpectedOutput",ExpressionUUID->"1a270be7-08a9-430e-9430-a5290f3ddcb7",
 CellID->1108798919],
Cell[172338, 4080, 8461, 182, 23, "TestSuccess",ExpressionUUID->"2448a14a-1562-41c7-8d94-2d7f6c88e3f7",
 CellID->179760346],
Cell[180802, 4264, 9498, 230, 39, "BottomCell",ExpressionUUID->"6fc6e7d7-09de-45c4-a2ee-44ed4b99eba6",
 CellID->1870127540]
}, Open  ]],
Cell[CellGroupData[{
Cell[190337, 4499, 572, 13, 47, "VerificationTest",ExpressionUUID->"422f702c-ebab-4fbe-83a7-a84fb7ccd65f",
 CellID->1185217578],
Cell[190912, 4514, 721, 24, 45, "ExpectedOutput",ExpressionUUID->"925838cf-a47f-441f-a30d-c5b29613c9d1",
 CellID->1295774643],
Cell[191636, 4540, 10014, 204, 23, "TestSuccess",ExpressionUUID->"b0a1b52a-e41f-459d-9c31-4e7a0a29f05b",
 CellID->1197927521],
Cell[201653, 4746, 9497, 230, 39, "BottomCell",ExpressionUUID->"5ebb0013-bcce-499e-99c0-8461496ce109",
 CellID->908654822]
}, Open  ]],
Cell[CellGroupData[{
Cell[211187, 4981, 755, 23, 53, "VerificationTest",ExpressionUUID->"a4de279e-08fb-4390-b5ef-af85862744d3",
 CellID->1675891452],
Cell[211945, 5006, 224, 5, 39, "ExpectedOutput",ExpressionUUID->"1367692c-c98b-41ea-8084-68754e19dddd",
 CellID->1186188496],
Cell[212172, 5013, 8043, 177, 23, "TestSuccess",ExpressionUUID->"8ed64415-a273-476d-8066-e2c9d6889b0f",
 CellID->2007200746],
Cell[220218, 5192, 9497, 230, 39, "BottomCell",ExpressionUUID->"2efa7113-1e67-41d0-80fb-ca891030199d",
 CellID->202327299]
}, Open  ]],
Cell[CellGroupData[{
Cell[229752, 5427, 854, 26, 81, "VerificationTest",ExpressionUUID->"45510e1c-2438-4cc2-956d-1737412406de",
 CellID->378983398],
Cell[230609, 5455, 324, 9, 39, "ExpectedOutput",ExpressionUUID->"1fa6059a-5d6d-419e-8508-8d1250bba35f",
 CellID->1186180870],
Cell[230936, 5466, 8462, 182, 23, "TestSuccess",ExpressionUUID->"9f96f32f-c18b-48a8-8f6a-1bc3a6e8f5a7",
 CellID->1048301092],
Cell[239401, 5650, 9497, 230, 39, "BottomCell",ExpressionUUID->"26864ac0-e884-4c24-8994-50a9f1b8742d",
 CellID->840613256]
}, Open  ]],
Cell[CellGroupData[{
Cell[248935, 5885, 839, 19, 47, "VerificationTest",ExpressionUUID->"af5895ab-82bf-46bd-bf65-e1137c785ad5",
 CellID->388830765],
Cell[249777, 5906, 1107, 34, 66, "ExpectedOutput",ExpressionUUID->"e4f26c1e-c9d3-463e-a9ff-e861dffd8c03",
 CellID->1537108349],
Cell[250887, 5942, 10563, 212, 23, "TestSuccess",ExpressionUUID->"0072d0a4-004d-4e67-97c1-3c8d45443b30",
 CellID->597400667],
Cell[261453, 6156, 9498, 230, 39, "BottomCell",ExpressionUUID->"07e1ba88-a5cf-4459-9608-f3f8393892d0",
 CellID->1026960544]
}, Open  ]],
Cell[CellGroupData[{
Cell[270988, 6391, 1020, 33, 104, "VerificationTest",ExpressionUUID->"46eb4cde-036a-49ec-881b-205664464a5d",
 CellID->781370597],
Cell[272011, 6426, 348, 7, 39, "ExpectedOutput",ExpressionUUID->"4b3cf8b4-9a63-46e0-9f66-c1fd7c12c73f",
 CellID->308159741],
Cell[272362, 6435, 8025, 177, 23, "TestSuccess",ExpressionUUID->"e141e0f5-4fc9-47f7-9fd0-29849e970e64",
 CellID->1634235588],
Cell[280390, 6614, 9497, 230, 39, "BottomCell",ExpressionUUID->"f970767a-f3f1-4bbb-a00f-a1c3a170f0a5",
 CellID->281682386]
}, Open  ]],
Cell[CellGroupData[{
Cell[289924, 6849, 1220, 36, 104, "VerificationTest",ExpressionUUID->"807eab8e-66e6-4b19-bbd2-52c05b3753f7",
 CellID->633122374],
Cell[291147, 6887, 470, 11, 39, "ExpectedOutput",ExpressionUUID->"99c7003e-680a-48ae-b39d-03170534338c",
 CellID->1344251518],
Cell[291620, 6900, 8462, 182, 23, "TestSuccess",ExpressionUUID->"d320fd0a-fc4f-4d27-a926-5108da58acee",
 CellID->1181903514],
Cell[300085, 7084, 9496, 230, 39, "BottomCell",ExpressionUUID->"66c077b9-08bd-424f-8d42-5b9f188557ac",
 CellID->28625048]
}, Open  ]],
Cell[CellGroupData[{
Cell[309618, 7319, 2177, 53, 252, "VerificationTest",ExpressionUUID->"6ff4954b-0cb8-4f08-974b-d3469fb44ae2",
 CellID->487771613],
Cell[311798, 7374, 358, 9, 39, "ExpectedOutput",ExpressionUUID->"8789a02e-a176-4bac-bb66-0cd6a6f9512a",
 CellID->1714671327],
Cell[312159, 7385, 8638, 186, 23, "TestSuccess",ExpressionUUID->"7a380e2c-3969-4d41-b521-4dd8732aa5fc",
 CellID->2057672563],
Cell[320800, 7573, 9497, 230, 39, "BottomCell",ExpressionUUID->"08927e6c-b6a1-445c-bb8c-5c89c888208f",
 CellID->226115053]
}, Open  ]],
Cell[CellGroupData[{
Cell[330334, 7808, 698, 16, 47, "VerificationTest",ExpressionUUID->"92336cd9-999e-4bf5-a25e-fbecff2e7f0f",
 CellID->2032918852],
Cell[331035, 7826, 298, 6, 39, "ExpectedOutput",ExpressionUUID->"bbca57f5-738a-461b-b642-67a9bc620b43",
 CellID->1879194559],
Cell[331336, 7834, 8023, 177, 23, "TestSuccess",ExpressionUUID->"38c80e83-993a-442b-b351-25f7bfbab17d",
 CellID->1356536334],
Cell[339362, 8013, 9498, 230, 39, "BottomCell",ExpressionUUID->"7b9b902f-7178-4ed3-81ea-6cd8adf37dee",
 CellID->1619768986]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[348909, 8249, 234, 3, 35, "Subsubsection",ExpressionUUID->"0cfbc521-3533-4f4a-9708-c5e62b3b7d6e",
 CellID->755018694],
Cell[CellGroupData[{
Cell[349168, 8256, 2093, 48, 231, "VerificationTest",ExpressionUUID->"8c663867-f899-4a22-b433-26ee43e88013",
 CellID->818226058],
Cell[351264, 8306, 493, 13, 39, "ExpectedOutput",ExpressionUUID->"d5c5101e-76eb-4851-8e4f-5b608b589706",
 CellID->539789260],
Cell[351760, 8321, 9031, 190, 23, "TestSuccess",ExpressionUUID->"9ce5d5bc-70f8-4026-bf96-a2a20961d46a",
 CellID->638081832],
Cell[360794, 8513, 9498, 230, 39, "BottomCell",ExpressionUUID->"5e1e8d11-495b-4b88-8da9-5a17fc9cd071",
 CellID->1855500953]
}, Open  ]],
Cell[CellGroupData[{
Cell[370329, 8748, 2406, 56, 252, "VerificationTest",ExpressionUUID->"28b81086-a42c-417e-b328-c1c066eb142f",
 CellID->202322756],
Cell[372738, 8806, 517, 13, 39, "ExpectedOutput",ExpressionUUID->"d910029b-f317-4dae-b55b-dc959476f3b9",
 CellID->289251955],
Cell[373258, 8821, 9031, 190, 23, "TestSuccess",ExpressionUUID->"81470451-5f16-4326-8d46-8e6af26061d7",
 CellID->174730992],
Cell[382292, 9013, 9498, 230, 39, "BottomCell",ExpressionUUID->"ba2cda97-1836-4d03-8386-40fcbb17df42",
 CellID->1093637095]
}, Open  ]],
Cell[CellGroupData[{
Cell[391827, 9248, 1987, 48, 231, "VerificationTest",ExpressionUUID->"45faa2ab-f33a-4c1d-8332-e0952b8ed1d9",
 CellID->171075528],
Cell[393817, 9298, 472, 13, 39, "ExpectedOutput",ExpressionUUID->"e674f0cb-76a7-405d-89d3-10efad44f1e1",
 CellID->947873948],
Cell[394292, 9313, 9031, 190, 23, "TestSuccess",ExpressionUUID->"4d4a0332-5c14-4433-8979-61ecf9f59a5d",
 CellID->870753043],
Cell[403326, 9505, 9498, 230, 39, "BottomCell",ExpressionUUID->"55139363-be8e-4f34-8e56-59a4c3c49c43",
 CellID->1792823043]
}, Open  ]],
Cell[CellGroupData[{
Cell[412861, 9740, 2724, 64, 252, "VerificationTest",ExpressionUUID->"4381f3b4-5255-464f-8167-5f13ca3a8e34",
 CellID->1465748235],
Cell[415588, 9806, 692, 15, 60, "ExpectedOutput",ExpressionUUID->"448f1a43-d352-4624-b6dd-d31160e47c27",
 CellID->2102528498],
Cell[416283, 9823, 9155, 192, 23, "TestSuccess",ExpressionUUID->"6d2bbc99-4bce-42b8-81a5-6b89a475328a",
 CellID->805157028],
Cell[425441, 10017, 9497, 230, 39, "BottomCell",ExpressionUUID->"9f2b4828-a722-43b5-8541-e92196f1bc21",
 CellID->979709849]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434987, 10253, 238, 3, 43, "Subsubsection",ExpressionUUID->"b2e0f5b5-6b43-426a-ae38-51079a814a72",
 CellID->236754742],
Cell[CellGroupData[{
Cell[435250, 10260, 7829, 152, 259, "Input",ExpressionUUID->"9f6a6daf-3f5f-4530-a10a-57b2a3ab0f7c",
 InitializationCell->True,
 CellID->848143718],
Cell[443082, 10414, 28947, 538, 248, "Output",ExpressionUUID->"29589d7d-a563-40fa-95e6-17bf332c5839",
 CellID->714391346]
}, Open  ]],
Cell[472044, 10955, 2062, 46, 260, "Input",ExpressionUUID->"03be04b7-95c7-42da-8746-d6c7f56a516d",
 InitializationCell->True,
 CellID->440481560],
Cell[CellGroupData[{
Cell[474131, 11005, 2088, 49, 111, "Input",ExpressionUUID->"a828257d-0a32-47ca-949d-0f880c9b3dce",
 CellID->722025773],
Cell[476222, 11056, 71471, 1257, 248, "Output",ExpressionUUID->"0a35504a-f7e7-4374-8c08-e1ce26ffec45",
 CellID->1372384976]
}, Open  ]],
Cell[CellGroupData[{
Cell[547730, 12318, 828, 19, 47, "VerificationTest",ExpressionUUID->"911501c3-0772-4e46-808a-a959bcbf6fc0",
 CellID->2046461575],
Cell[548561, 12339, 182, 2, 39, "ExpectedOutput",ExpressionUUID->"1dbbd2d1-8fe4-424d-b54e-fc22d2f8688d",
 CellID->1634455885],
Cell[548746, 12343, 518, 13, 40, "TestOptions",ExpressionUUID->"b9da6258-8f84-474a-b549-106c83e94208",
 CellID->1436148610],
Cell[549267, 12358, 7807, 173, 23, "TestSuccess",ExpressionUUID->"b9485454-9e3a-441a-95e7-2c984400defc",
 CellID->884486057],
Cell[557077, 12533, 9497, 230, 39, "BottomCell",ExpressionUUID->"23dc92d9-171e-4a79-b9ab-300f70287a8d",
 CellID->675355465]
}, Open  ]],
Cell[CellGroupData[{
Cell[566611, 12768, 778, 17, 47, "VerificationTest",ExpressionUUID->"f748d962-e01f-41ee-920e-5d1e3f6ee5d2",
 CellID->1070350315],
Cell[567392, 12787, 182, 2, 39, "ExpectedOutput",ExpressionUUID->"66c05c53-da56-4a83-b5a3-42ea81ae5081",
 CellID->2054716933],
Cell[567577, 12791, 518, 13, 40, "TestOptions",ExpressionUUID->"2d0eeb3c-953a-4c94-8710-14491bd19406",
 CellID->2090449171],
Cell[568098, 12806, 7812, 173, 23, "TestSuccess",ExpressionUUID->"9d3c896f-ff2e-4ae1-acd1-19d36040dec2",
 CellID->1677839969],
Cell[575913, 12981, 9497, 230, 39, "BottomCell",ExpressionUUID->"de400c65-f823-4025-9cc8-e9f537b01e68",
 CellID->848590226]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585471, 13218, 180, 2, 53, "Subsection",ExpressionUUID->"03a88ce3-e124-40e2-8691-4be0fe2be71d",
 CellID->1363899293],
Cell[CellGroupData[{
Cell[585676, 13224, 287, 4, 43, "Subsubsection",ExpressionUUID->"085b23ac-b2c7-460b-a955-0af94282970b",
 CellID->231966182],
Cell[585966, 13230, 246, 4, 33, "Text",ExpressionUUID->"3216496a-8577-4259-9ebf-45f3cb893021",
 CellID->1033421422],
Cell[CellGroupData[{
Cell[586237, 13238, 3701, 80, 263, "Input",ExpressionUUID->"5abb30dc-cb06-4fbf-a906-9930b235ffb4",
 InitializationCell->True,
 CellID->1269732434],
Cell[589941, 13320, 253257, 5463, 138, "Output",ExpressionUUID->"7dfdcdc2-4d83-4fd3-b25b-03ed6ca74a9c",
 CellID->1096747367]
}, Open  ]],
Cell[CellGroupData[{
Cell[843235, 18788, 1035, 23, 65, "Input",ExpressionUUID->"90fd95f1-43cf-41c0-80ee-7211ae104f5e",
 InitializationCell->True,
 CellID->1616838688],
Cell[844273, 18813, 9403, 188, 58, "Output",ExpressionUUID->"b1ffdacc-2cc5-4994-9840-4d5a3d1ad2f5",
 CellID->184244407]
}, Open  ]],
Cell[CellGroupData[{
Cell[853713, 19006, 306, 6, 29, "Input",ExpressionUUID->"3a24a2d1-c158-4d34-9070-a1e405893268",
 CellID->983865276],
Cell[854022, 19014, 111809, 1880, 245, "Output",ExpressionUUID->"84dc912c-a01f-4e47-9d70-57a98eb87625",
 CellID->184032437]
}, Open  ]],
Cell[965846, 20897, 268, 3, 33, "Text",ExpressionUUID->"10dadb94-cb99-40b7-9d82-e47798c2a06e",
 CellID->1631237031],
Cell[966117, 20902, 1458, 34, 167, "Input",ExpressionUUID->"1440e196-fca0-4996-bb8d-2a9a691e7917",
 InitializationCell->True,
 CellID->2143068938],
Cell[CellGroupData[{
Cell[967600, 20940, 774, 16, 90, "Input",ExpressionUUID->"f6366342-0fb1-4b36-8905-f200d3adfd2e",
 CellID->803891104],
Cell[968377, 20958, 161148, 2725, 326, "Output",ExpressionUUID->"871cfee5-1111-49e6-b74e-d2830d1703f4",
 CellID->137969653]
}, Open  ]],
Cell[1129540, 23686, 255, 3, 33, "Text",ExpressionUUID->"0aeb516b-f340-48ef-8b91-761fdd0c1ff6",
 CellID->1065906387],
Cell[CellGroupData[{
Cell[1129820, 23693, 4149, 102, 421, "Input",ExpressionUUID->"67cbe1db-d393-4b23-8131-a58d71d05736",
 CellID->1320646506],
Cell[1133972, 23797, 83914, 1449, 497, "Output",ExpressionUUID->"4110fe0b-9b55-4053-b209-49e16a3e44b5",
 CellID->1437313219]
}, Open  ]],
Cell[1217901, 25249, 169, 2, 29, "Input",ExpressionUUID->"c4ab10d2-f5ba-438b-a1a9-83867125fff7",
 CellID->788154105]
}, Open  ]]
}, Open  ]]
}
]
*)

